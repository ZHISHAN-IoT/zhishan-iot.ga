
/*! waitForImages jQuery Plugin - v2.0.0 - 2014-11-14
 * https://github.com/alexanderdickson/waitForImages
 * Copyright (c) 2014 Alex Dickson; Licensed MIT */
(function(b){var a="waitForImages";b.waitForImages={hasImageProperties:["backgroundImage","listStyleImage","borderImage","borderCornerImage","cursor"],hasImageAttributes:["srcset"]};b.expr[":"].uncached=function(d){if(!b(d).is('img[src][src!=""]')){return false}var c=new Image();c.src=d.src;return !c.complete};b.fn.waitForImages=function(){var h=0;var e=0;var d=b.Deferred();var g;var c;var f;if(b.isPlainObject(arguments[0])){f=arguments[0].waitForAll;c=arguments[0].each;g=arguments[0].finished}else{if(arguments.length===1&&b.type(arguments[0])==="boolean"){f=arguments[0]}else{g=arguments[0];c=arguments[1];f=arguments[2]}}g=g||b.noop;c=c||b.noop;f=!!f;if(!b.isFunction(g)||!b.isFunction(c)){throw new TypeError("An invalid callback was supplied.")}this.each(function(){var l=b(this);var m=[];var j=b.waitForImages.hasImageProperties||[];var i=b.waitForImages.hasImageAttributes||[];var k=/url\(\s*(['"]?)(.*?)\1\s*\)/g;if(f){l.find("*").addBack().each(function(){var n=b(this);if(n.is("img:uncached")){m.push({src:n.attr("src"),element:n[0]})}b.each(j,function(q,r){var o=n.css(r);var p;if(!o){return true}while(p=k.exec(o)){m.push({src:p[2],element:n[0]})}});b.each(i,function(o,q){var p=n.attr(q);var r;if(!p){return true}r=p.split(",");b.each(r,function(s,t){t=b.trim(t).split(" ")[0];m.push({src:t,element:n[0]})})})})}else{l.find("img:uncached").each(function(){m.push({src:this.src,element:this})})}h=m.length;e=0;if(h===0){g.call(l[0]);d.resolveWith(l[0])}b.each(m,function(p,n){var r=new Image();var o="load."+a+" error."+a;b(r).one(o,function q(t){var s=[e,h,t.type=="load"];e++;c.apply(n.element,s);d.notifyWith(n.element,s);b(this).off(o,q);if(e==h){g.call(l[0]);d.resolveWith(l[0]);return false}});r.src=n.src})});return d.promise()}}(jQuery));