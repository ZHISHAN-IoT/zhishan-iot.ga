/*! jQuery v1.11.2 | (c) 2005, 2014 jQuery Foundation, Inc. | jquery.org/license */ ! function(d, c) {
    "object" == typeof module && "object" == typeof module.exports ? module.exports = d.document ? c(d, !0) : function(b) {
        if (!b.document) {
            throw new Error("jQuery requires a window with a document")
        }
        return c(b)
    } : c(d)
}("undefined" != typeof window ? window : this, function(a, b) {
    var c = [],
        d = c.slice,
        e = c.concat,
        f = c.push,
        g = c.indexOf,
        h = {},
        i = h.toString,
        j = h.hasOwnProperty,
        k = {},
        l = "1.11.2",
        m = function(a, b) {
            return new m.fn.init(a, b)
        },
        n = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
        o = /^-ms-/,
        p = /-([\da-z])/gi,
        q = function(a, b) {
            return b.toUpperCase()
        };
    m.fn = m.prototype = {
        jquery: l,
        constructor: m,
        selector: "",
        length: 0,
        toArray: function() {
            return d.call(this)
        },
        get: function(a) {
            return null != a ? 0 > a ? this[a + this.length] : this[a] : d.call(this)
        },
        pushStack: function(a) {
            var b = m.merge(this.constructor(), a);
            return b.prevObject = this, b.context = this.context, b
        },
        each: function(a, b) {
            return m.each(this, a, b)
        },
        map: function(a) {
            return this.pushStack(m.map(this, function(b, c) {
                return a.call(b, c, b)
            }))
        },
        slice: function() {
            return this.pushStack(d.apply(this, arguments))
        },
        first: function() {
            return this.eq(0)
        },
        last: function() {
            return this.eq(-1)
        },
        eq: function(a) {
            var b = this.length,
                c = +a + (0 > a ? b : 0);
            return this.pushStack(c >= 0 && b > c ? [this[c]] : [])
        },
        end: function() {
            return this.prevObject || this.constructor(null)
        },
        push: f,
        sort: c.sort,
        splice: c.splice
    }, m.extend = m.fn.extend = function() {
        var a, b, c, d, e, f, g = arguments[0] || {},
            h = 1,
            i = arguments.length,
            j = !1;
        for ("boolean" == typeof g && (j = g, g = arguments[h] || {}, h++), "object" == typeof g || m.isFunction(g) || (g = {}), h === i && (g = this, h--); i > h; h++) {
            if (null != (e = arguments[h])) {
                for (d in e) {
                    a = g[d], c = e[d], g !== c && (j && c && (m.isPlainObject(c) || (b = m.isArray(c))) ? (b ? (b = !1, f = a && m.isArray(a) ? a : []) : f = a && m.isPlainObject(a) ? a : {}, g[d] = m.extend(j, f, c)) : void 0 !== c && (g[d] = c))
                }
            }
        }
        return g
    }, m.extend({
        expando: "jQuery" + (l + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function(a) {
            throw new Error(a)
        },
        noop: function() {},
        isFunction: function(a) {
            return "function" === m.type(a)
        },
        isArray: Array.isArray || function(a) {
            return "array" === m.type(a)
        },
        isWindow: function(a) {
            return null != a && a == a.window
        },
        isNumeric: function(a) {
            return !m.isArray(a) && a - parseFloat(a) + 1 >= 0
        },
        isEmptyObject: function(a) {
            var b;
            for (b in a) {
                return !1
            }
            return !0
        },
        isPlainObject: function(a) {
            var b;
            if (!a || "object" !== m.type(a) || a.nodeType || m.isWindow(a)) {
                return !1
            }
            try {
                if (a.constructor && !j.call(a, "constructor") && !j.call(a.constructor.prototype, "isPrototypeOf")) {
                    return !1
                }
            } catch (c) {
                return !1
            }
            if (k.ownLast) {
                for (b in a) {
                    return j.call(a, b)
                }
            }
            for (b in a) {}
            return void 0 === b || j.call(a, b)
        },
        type: function(a) {
            return null == a ? a + "" : "object" == typeof a || "function" == typeof a ? h[i.call(a)] || "object" : typeof a
        },
        globalEval: function(b) {
            b && m.trim(b) && (a.execScript || function(b) {
                a.eval.call(a, b)
            })(b)
        },
        camelCase: function(a) {
            return a.replace(o, "ms-").replace(p, q)
        },
        nodeName: function(a, b) {
            return a.nodeName && a.nodeName.toLowerCase() === b.toLowerCase()
        },
        each: function(a, b, c) {
            var d, e = 0,
                f = a.length,
                g = r(a);
            if (c) {
                if (g) {
                    for (; f > e; e++) {
                        if (d = b.apply(a[e], c), d === !1) {
                            break
                        }
                    }
                } else {
                    for (e in a) {
                        if (d = b.apply(a[e], c), d === !1) {
                            break
                        }
                    }
                }
            } else {
                if (g) {
                    for (; f > e; e++) {
                        if (d = b.call(a[e], e, a[e]), d === !1) {
                            break
                        }
                    }
                } else {
                    for (e in a) {
                        if (d = b.call(a[e], e, a[e]), d === !1) {
                            break
                        }
                    }
                }
            }
            return a
        },
        trim: function(a) {
            return null == a ? "" : (a + "").replace(n, "")
        },
        makeArray: function(a, b) {
            var c = b || [];
            return null != a && (r(Object(a)) ? m.merge(c, "string" == typeof a ? [a] : a) : f.call(c, a)), c
        },
        inArray: function(a, b, c) {
            var d;
            if (b) {
                if (g) {
                    return g.call(b, a, c)
                }
                for (d = b.length, c = c ? 0 > c ? Math.max(0, d + c) : c : 0; d > c; c++) {
                    if (c in b && b[c] === a) {
                        return c
                    }
                }
            }
            return -1
        },
        merge: function(a, b) {
            var c = +b.length,
                d = 0,
                e = a.length;
            while (c > d) {
                a[e++] = b[d++]
            }
            if (c !== c) {
                while (void 0 !== b[d]) {
                    a[e++] = b[d++]
                }
            }
            return a.length = e, a
        },
        grep: function(a, b, c) {
            for (var d, e = [], f = 0, g = a.length, h = !c; g > f; f++) {
                d = !b(a[f], f), d !== h && e.push(a[f])
            }
            return e
        },
        map: function(a, b, c) {
            var d, f = 0,
                g = a.length,
                h = r(a),
                i = [];
            if (h) {
                for (; g > f; f++) {
                    d = b(a[f], f, c), null != d && i.push(d)
                }
            } else {
                for (f in a) {
                    d = b(a[f], f, c), null != d && i.push(d)
                }
            }
            return e.apply([], i)
        },
        guid: 1,
        proxy: function(a, b) {
            var c, e, f;
            return "string" == typeof b && (f = a[b], b = a, a = f), m.isFunction(a) ? (c = d.call(arguments, 2), e = function() {
                return a.apply(b || this, c.concat(d.call(arguments)))
            }, e.guid = a.guid = a.guid || m.guid++, e) : void 0
        },
        now: function() {
            return +new Date
        },
        support: k
    }), m.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(a, b) {
        h["[object " + b + "]"] = b.toLowerCase()
    });

    function r(a) {
        var b = a.length,
            c = m.type(a);
        return "function" === c || m.isWindow(a) ? !1 : 1 === a.nodeType && b ? !0 : "array" === c || 0 === b || "number" == typeof b && b > 0 && b - 1 in a
    }
    var s = function(a) {
        var b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u = "sizzle" + 1 * new Date,
            v = a.document,
            w = 0,
            x = 0,
            y = hb(),
            z = hb(),
            A = hb(),
            B = function(a, b) {
                return a === b && (l = !0), 0
            },
            C = 1 << 31,
            D = {}.hasOwnProperty,
            E = [],
            F = E.pop,
            G = E.push,
            H = E.push,
            I = E.slice,
            J = function(a, b) {
                for (var c = 0, d = a.length; d > c; c++) {
                    if (a[c] === b) {
                        return c
                    }
                }
                return -1
            },
            K = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
            L = "[\\x20\\t\\r\\n\\f]",
            M = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
            N = M.replace("w", "w#"),
            O = "\\[" + L + "*(" + M + ")(?:" + L + "*([*^$|!~]?=)" + L + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + N + "))|)" + L + "*\\]",
            P = ":(" + M + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + O + ")*)|.*)\\)|)",
            Q = new RegExp(L + "+", "g"),
            R = new RegExp("^" + L + "+|((?:^|[^\\\\])(?:\\\\.)*)" + L + "+$", "g"),
            S = new RegExp("^" + L + "*," + L + "*"),
            T = new RegExp("^" + L + "*([>+~]|" + L + ")" + L + "*"),
            U = new RegExp("=" + L + "*([^\\]'\"]*?)" + L + "*\\]", "g"),
            V = new RegExp(P),
            W = new RegExp("^" + N + "$"),
            X = {
                ID: new RegExp("^#(" + M + ")"),
                CLASS: new RegExp("^\\.(" + M + ")"),
                TAG: new RegExp("^(" + M.replace("w", "w*") + ")"),
                ATTR: new RegExp("^" + O),
                PSEUDO: new RegExp("^" + P),
                CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + L + "*(even|odd|(([+-]|)(\\d*)n|)" + L + "*(?:([+-]|)" + L + "*(\\d+)|))" + L + "*\\)|)", "i"),
                bool: new RegExp("^(?:" + K + ")$", "i"),
                needsContext: new RegExp("^" + L + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + L + "*((?:-\\d)?\\d*)" + L + "*\\)|)(?=[^-]|$)", "i")
            },
            Y = /^(?:input|select|textarea|button)$/i,
            Z = /^h\d$/i,
            $ = /^[^{]+\{\s*\[native \w/,
            _ = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
            ab = /[+~]/,
            bb = /'|\\/g,
            cb = new RegExp("\\\\([\\da-f]{1,6}" + L + "?|(" + L + ")|.)", "ig"),
            db = function(a, b, c) {
                var d = "0x" + b - 65536;
                return d !== d || c ? b : 0 > d ? String.fromCharCode(d + 65536) : String.fromCharCode(d >> 10 | 55296, 1023 & d | 56320)
            },
            eb = function() {
                m()
            };
        try {
            H.apply(E = I.call(v.childNodes), v.childNodes), E[v.childNodes.length].nodeType
        } catch (fb) {
            H = {
                apply: E.length ? function(a, b) {
                    G.apply(a, I.call(b))
                } : function(a, b) {
                    var c = a.length,
                        d = 0;
                    while (a[c++] = b[d++]) {}
                    a.length = c - 1
                }
            }
        }

        function gb(a, b, d, e) {
            var f, h, j, k, l, o, r, s, w, x;
            if ((b ? b.ownerDocument || b : v) !== n && m(b), b = b || n, d = d || [], k = b.nodeType, "string" != typeof a || !a || 1 !== k && 9 !== k && 11 !== k) {
                return d
            }
            if (!e && p) {
                if (11 !== k && (f = _.exec(a))) {
                    if (j = f[1]) {
                        if (9 === k) {
                            if (h = b.getElementById(j), !h || !h.parentNode) {
                                return d
                            }
                            if (h.id === j) {
                                return d.push(h), d
                            }
                        } else {
                            if (b.ownerDocument && (h = b.ownerDocument.getElementById(j)) && t(b, h) && h.id === j) {
                                return d.push(h), d
                            }
                        }
                    } else {
                        if (f[2]) {
                            return H.apply(d, b.getElementsByTagName(a)), d
                        }
                        if ((j = f[3]) && c.getElementsByClassName) {
                            return H.apply(d, b.getElementsByClassName(j)), d
                        }
                    }
                }
                if (c.qsa && (!q || !q.test(a))) {
                    if (s = r = u, w = b, x = 1 !== k && a, 1 === k && "object" !== b.nodeName.toLowerCase()) {
                        o = g(a), (r = b.getAttribute("id")) ? s = r.replace(bb, "\\$&") : b.setAttribute("id", s), s = "[id='" + s + "'] ", l = o.length;
                        while (l--) {
                            o[l] = s + rb(o[l])
                        }
                        w = ab.test(a) && pb(b.parentNode) || b, x = o.join(",")
                    }
                    if (x) {
                        try {
                            return H.apply(d, w.querySelectorAll(x)), d
                        } catch (y) {} finally {
                            r || b.removeAttribute("id")
                        }
                    }
                }
            }
            return i(a.replace(R, "$1"), b, d, e)
        }

        function hb() {
            var a = [];

            function b(c, e) {
                return a.push(c + " ") > d.cacheLength && delete b[a.shift()], b[c + " "] = e
            }
            return b
        }

        function ib(a) {
            return a[u] = !0, a
        }

        function jb(a) {
            var b = n.createElement("div");
            try {
                return !!a(b)
            } catch (c) {
                return !1
            } finally {
                b.parentNode && b.parentNode.removeChild(b), b = null
            }
        }

        function kb(a, b) {
            var c = a.split("|"),
                e = a.length;
            while (e--) {
                d.attrHandle[c[e]] = b
            }
        }

        function lb(a, b) {
            var c = b && a,
                d = c && 1 === a.nodeType && 1 === b.nodeType && (~b.sourceIndex || C) - (~a.sourceIndex || C);
            if (d) {
                return d
            }
            if (c) {
                while (c = c.nextSibling) {
                    if (c === b) {
                        return -1
                    }
                }
            }
            return a ? 1 : -1
        }

        function mb(a) {
            return function(b) {
                var c = b.nodeName.toLowerCase();
                return "input" === c && b.type === a
            }
        }

        function nb(a) {
            return function(b) {
                var c = b.nodeName.toLowerCase();
                return ("input" === c || "button" === c) && b.type === a
            }
        }

        function ob(a) {
            return ib(function(b) {
                return b = +b, ib(function(c, d) {
                    var e, f = a([], c.length, b),
                        g = f.length;
                    while (g--) {
                        c[e = f[g]] && (c[e] = !(d[e] = c[e]))
                    }
                })
            })
        }

        function pb(a) {
            return a && "undefined" != typeof a.getElementsByTagName && a
        }
        c = gb.support = {}, f = gb.isXML = function(a) {
            var b = a && (a.ownerDocument || a).documentElement;
            return b ? "HTML" !== b.nodeName : !1
        }, m = gb.setDocument = function(a) {
            var b, e, g = a ? a.ownerDocument || a : v;
            return g !== n && 9 === g.nodeType && g.documentElement ? (n = g, o = g.documentElement, e = g.defaultView, e && e !== e.top && (e.addEventListener ? e.addEventListener("unload", eb, !1) : e.attachEvent && e.attachEvent("onunload", eb)), p = !f(g), c.attributes = jb(function(a) {
                return a.className = "i", !a.getAttribute("className")
            }), c.getElementsByTagName = jb(function(a) {
                return a.appendChild(g.createComment("")), !a.getElementsByTagName("*").length
            }), c.getElementsByClassName = $.test(g.getElementsByClassName), c.getById = jb(function(a) {
                return o.appendChild(a).id = u, !g.getElementsByName || !g.getElementsByName(u).length
            }), c.getById ? (d.find.ID = function(a, b) {
                if ("undefined" != typeof b.getElementById && p) {
                    var c = b.getElementById(a);
                    return c && c.parentNode ? [c] : []
                }
            }, d.filter.ID = function(a) {
                var b = a.replace(cb, db);
                return function(a) {
                    return a.getAttribute("id") === b
                }
            }) : (delete d.find.ID, d.filter.ID = function(a) {
                var b = a.replace(cb, db);
                return function(a) {
                    var c = "undefined" != typeof a.getAttributeNode && a.getAttributeNode("id");
                    return c && c.value === b
                }
            }), d.find.TAG = c.getElementsByTagName ? function(a, b) {
                return "undefined" != typeof b.getElementsByTagName ? b.getElementsByTagName(a) : c.qsa ? b.querySelectorAll(a) : void 0
            } : function(a, b) {
                var c, d = [],
                    e = 0,
                    f = b.getElementsByTagName(a);
                if ("*" === a) {
                    while (c = f[e++]) {
                        1 === c.nodeType && d.push(c)
                    }
                    return d
                }
                return f
            }, d.find.CLASS = c.getElementsByClassName && function(a, b) {
                return p ? b.getElementsByClassName(a) : void 0
            }, r = [], q = [], (c.qsa = $.test(g.querySelectorAll)) && (jb(function(a) {
                o.appendChild(a).innerHTML = "<a id='" + u + "'></a><select id='" + u + "-\f]' msallowcapture=''><option selected=''></option></select>", a.querySelectorAll("[msallowcapture^='']").length && q.push("[*^$]=" + L + "*(?:''|\"\")"), a.querySelectorAll("[selected]").length || q.push("\\[" + L + "*(?:value|" + K + ")"), a.querySelectorAll("[id~=" + u + "-]").length || q.push("~="), a.querySelectorAll(":checked").length || q.push(":checked"), a.querySelectorAll("a#" + u + "+*").length || q.push(".#.+[+~]")
            }), jb(function(a) {
                var b = g.createElement("input");
                b.setAttribute("type", "hidden"), a.appendChild(b).setAttribute("name", "D"), a.querySelectorAll("[name=d]").length && q.push("name" + L + "*[*^$|!~]?="), a.querySelectorAll(":enabled").length || q.push(":enabled", ":disabled"), a.querySelectorAll("*,:x"), q.push(",.*:")
            })), (c.matchesSelector = $.test(s = o.matches || o.webkitMatchesSelector || o.mozMatchesSelector || o.oMatchesSelector || o.msMatchesSelector)) && jb(function(a) {
                c.disconnectedMatch = s.call(a, "div"), s.call(a, "[s!='']:x"), r.push("!=", P)
            }), q = q.length && new RegExp(q.join("|")), r = r.length && new RegExp(r.join("|")), b = $.test(o.compareDocumentPosition), t = b || $.test(o.contains) ? function(a, b) {
                var c = 9 === a.nodeType ? a.documentElement : a,
                    d = b && b.parentNode;
                return a === d || !(!d || 1 !== d.nodeType || !(c.contains ? c.contains(d) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(d)))
            } : function(a, b) {
                if (b) {
                    while (b = b.parentNode) {
                        if (b === a) {
                            return !0
                        }
                    }
                }
                return !1
            }, B = b ? function(a, b) {
                if (a === b) {
                    return l = !0, 0
                }
                var d = !a.compareDocumentPosition - !b.compareDocumentPosition;
                return d ? d : (d = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1, 1 & d || !c.sortDetached && b.compareDocumentPosition(a) === d ? a === g || a.ownerDocument === v && t(v, a) ? -1 : b === g || b.ownerDocument === v && t(v, b) ? 1 : k ? J(k, a) - J(k, b) : 0 : 4 & d ? -1 : 1)
            } : function(a, b) {
                if (a === b) {
                    return l = !0, 0
                }
                var c, d = 0,
                    e = a.parentNode,
                    f = b.parentNode,
                    h = [a],
                    i = [b];
                if (!e || !f) {
                    return a === g ? -1 : b === g ? 1 : e ? -1 : f ? 1 : k ? J(k, a) - J(k, b) : 0
                }
                if (e === f) {
                    return lb(a, b)
                }
                c = a;
                while (c = c.parentNode) {
                    h.unshift(c)
                }
                c = b;
                while (c = c.parentNode) {
                    i.unshift(c)
                }
                while (h[d] === i[d]) {
                    d++
                }
                return d ? lb(h[d], i[d]) : h[d] === v ? -1 : i[d] === v ? 1 : 0
            }, g) : n
        }, gb.matches = function(a, b) {
            return gb(a, null, null, b)
        }, gb.matchesSelector = function(a, b) {
            if ((a.ownerDocument || a) !== n && m(a), b = b.replace(U, "='$1']"), !(!c.matchesSelector || !p || r && r.test(b) || q && q.test(b))) {
                try {
                    var d = s.call(a, b);
                    if (d || c.disconnectedMatch || a.document && 11 !== a.document.nodeType) {
                        return d
                    }
                } catch (e) {}
            }
            return gb(b, n, null, [a]).length > 0
        }, gb.contains = function(a, b) {
            return (a.ownerDocument || a) !== n && m(a), t(a, b)
        }, gb.attr = function(a, b) {
            (a.ownerDocument || a) !== n && m(a);
            var e = d.attrHandle[b.toLowerCase()],
                f = e && D.call(d.attrHandle, b.toLowerCase()) ? e(a, b, !p) : void 0;
            return void 0 !== f ? f : c.attributes || !p ? a.getAttribute(b) : (f = a.getAttributeNode(b)) && f.specified ? f.value : null
        }, gb.error = function(a) {
            throw new Error("Syntax error, unrecognized expression: " + a)
        }, gb.uniqueSort = function(a) {
            var b, d = [],
                e = 0,
                f = 0;
            if (l = !c.detectDuplicates, k = !c.sortStable && a.slice(0), a.sort(B), l) {
                while (b = a[f++]) {
                    b === a[f] && (e = d.push(f))
                }
                while (e--) {
                    a.splice(d[e], 1)
                }
            }
            return k = null, a
        }, e = gb.getText = function(a) {
            var b, c = "",
                d = 0,
                f = a.nodeType;
            if (f) {
                if (1 === f || 9 === f || 11 === f) {
                    if ("string" == typeof a.textContent) {
                        return a.textContent
                    }
                    for (a = a.firstChild; a; a = a.nextSibling) {
                        c += e(a)
                    }
                } else {
                    if (3 === f || 4 === f) {
                        return a.nodeValue
                    }
                }
            } else {
                while (b = a[d++]) {
                    c += e(b)
                }
            }
            return c
        }, d = gb.selectors = {
            cacheLength: 50,
            createPseudo: ib,
            match: X,
            attrHandle: {},
            find: {},
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(a) {
                    return a[1] = a[1].replace(cb, db), a[3] = (a[3] || a[4] || a[5] || "").replace(cb, db), "~=" === a[2] && (a[3] = " " + a[3] + " "), a.slice(0, 4)
                },
                CHILD: function(a) {
                    return a[1] = a[1].toLowerCase(), "nth" === a[1].slice(0, 3) ? (a[3] || gb.error(a[0]), a[4] = +(a[4] ? a[5] + (a[6] || 1) : 2 * ("even" === a[3] || "odd" === a[3])), a[5] = +(a[7] + a[8] || "odd" === a[3])) : a[3] && gb.error(a[0]), a
                },
                PSEUDO: function(a) {
                    var b, c = !a[6] && a[2];
                    return X.CHILD.test(a[0]) ? null : (a[3] ? a[2] = a[4] || a[5] || "" : c && V.test(c) && (b = g(c, !0)) && (b = c.indexOf(")", c.length - b) - c.length) && (a[0] = a[0].slice(0, b), a[2] = c.slice(0, b)), a.slice(0, 3))
                }
            },
            filter: {
                TAG: function(a) {
                    var b = a.replace(cb, db).toLowerCase();
                    return "*" === a ? function() {
                        return !0
                    } : function(a) {
                        return a.nodeName && a.nodeName.toLowerCase() === b
                    }
                },
                CLASS: function(a) {
                    var b = y[a + " "];
                    return b || (b = new RegExp("(^|" + L + ")" + a + "(" + L + "|$)")) && y(a, function(a) {
                        return b.test("string" == typeof a.className && a.className || "undefined" != typeof a.getAttribute && a.getAttribute("class") || "")
                    })
                },
                ATTR: function(a, b, c) {
                    return function(d) {
                        var e = gb.attr(d, a);
                        return null == e ? "!=" === b : b ? (e += "", "=" === b ? e === c : "!=" === b ? e !== c : "^=" === b ? c && 0 === e.indexOf(c) : "*=" === b ? c && e.indexOf(c) > -1 : "$=" === b ? c && e.slice(-c.length) === c : "~=" === b ? (" " + e.replace(Q, " ") + " ").indexOf(c) > -1 : "|=" === b ? e === c || e.slice(0, c.length + 1) === c + "-" : !1) : !0
                    }
                },
                CHILD: function(a, b, c, d, e) {
                    var f = "nth" !== a.slice(0, 3),
                        g = "last" !== a.slice(-4),
                        h = "of-type" === b;
                    return 1 === d && 0 === e ? function(a) {
                        return !!a.parentNode
                    } : function(b, c, i) {
                        var j, k, l, m, n, o, p = f !== g ? "nextSibling" : "previousSibling",
                            q = b.parentNode,
                            r = h && b.nodeName.toLowerCase(),
                            s = !i && !h;
                        if (q) {
                            if (f) {
                                while (p) {
                                    l = b;
                                    while (l = l[p]) {
                                        if (h ? l.nodeName.toLowerCase() === r : 1 === l.nodeType) {
                                            return !1
                                        }
                                    }
                                    o = p = "only" === a && !o && "nextSibling"
                                }
                                return !0
                            }
                            if (o = [g ? q.firstChild : q.lastChild], g && s) {
                                k = q[u] || (q[u] = {}), j = k[a] || [], n = j[0] === w && j[1], m = j[0] === w && j[2], l = n && q.childNodes[n];
                                while (l = ++n && l && l[p] || (m = n = 0) || o.pop()) {
                                    if (1 === l.nodeType && ++m && l === b) {
                                        k[a] = [w, n, m];
                                        break
                                    }
                                }
                            } else {
                                if (s && (j = (b[u] || (b[u] = {}))[a]) && j[0] === w) {
                                    m = j[1]
                                } else {
                                    while (l = ++n && l && l[p] || (m = n = 0) || o.pop()) {
                                        if ((h ? l.nodeName.toLowerCase() === r : 1 === l.nodeType) && ++m && (s && ((l[u] || (l[u] = {}))[a] = [w, m]), l === b)) {
                                            break
                                        }
                                    }
                                }
                            }
                            return m -= e, m === d || m % d === 0 && m / d >= 0
                        }
                    }
                },
                PSEUDO: function(a, b) {
                    var c, e = d.pseudos[a] || d.setFilters[a.toLowerCase()] || gb.error("unsupported pseudo: " + a);
                    return e[u] ? e(b) : e.length > 1 ? (c = [a, a, "", b], d.setFilters.hasOwnProperty(a.toLowerCase()) ? ib(function(a, c) {
                        var d, f = e(a, b),
                            g = f.length;
                        while (g--) {
                            d = J(a, f[g]), a[d] = !(c[d] = f[g])
                        }
                    }) : function(a) {
                        return e(a, 0, c)
                    }) : e
                }
            },
            pseudos: {
                not: ib(function(a) {
                    var b = [],
                        c = [],
                        d = h(a.replace(R, "$1"));
                    return d[u] ? ib(function(a, b, c, e) {
                        var f, g = d(a, null, e, []),
                            h = a.length;
                        while (h--) {
                            (f = g[h]) && (a[h] = !(b[h] = f))
                        }
                    }) : function(a, e, f) {
                        return b[0] = a, d(b, null, f, c), b[0] = null, !c.pop()
                    }
                }),
                has: ib(function(a) {
                    return function(b) {
                        return gb(a, b).length > 0
                    }
                }),
                contains: ib(function(a) {
                    return a = a.replace(cb, db),
                        function(b) {
                            return (b.textContent || b.innerText || e(b)).indexOf(a) > -1
                        }
                }),
                lang: ib(function(a) {
                    return W.test(a || "") || gb.error("unsupported lang: " + a), a = a.replace(cb, db).toLowerCase(),
                        function(b) {
                            var c;
                            do {
                                if (c = p ? b.lang : b.getAttribute("xml:lang") || b.getAttribute("lang")) {
                                    return c = c.toLowerCase(), c === a || 0 === c.indexOf(a + "-")
                                }
                            } while ((b = b.parentNode) && 1 === b.nodeType);
                            return !1
                        }
                }),
                target: function(b) {
                    var c = a.location && a.location.hash;
                    return c && c.slice(1) === b.id
                },
                root: function(a) {
                    return a === o
                },
                focus: function(a) {
                    return a === n.activeElement && (!n.hasFocus || n.hasFocus()) && !!(a.type || a.href || ~a.tabIndex)
                },
                enabled: function(a) {
                    return a.disabled === !1
                },
                disabled: function(a) {
                    return a.disabled === !0
                },
                checked: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return "input" === b && !!a.checked || "option" === b && !!a.selected
                },
                selected: function(a) {
                    return a.parentNode && a.parentNode.selectedIndex, a.selected === !0
                },
                empty: function(a) {
                    for (a = a.firstChild; a; a = a.nextSibling) {
                        if (a.nodeType < 6) {
                            return !1
                        }
                    }
                    return !0
                },
                parent: function(a) {
                    return !d.pseudos.empty(a)
                },
                header: function(a) {
                    return Z.test(a.nodeName)
                },
                input: function(a) {
                    return Y.test(a.nodeName)
                },
                button: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return "input" === b && "button" === a.type || "button" === b
                },
                text: function(a) {
                    var b;
                    return "input" === a.nodeName.toLowerCase() && "text" === a.type && (null == (b = a.getAttribute("type")) || "text" === b.toLowerCase())
                },
                first: ob(function() {
                    return [0]
                }),
                last: ob(function(a, b) {
                    return [b - 1]
                }),
                eq: ob(function(a, b, c) {
                    return [0 > c ? c + b : c]
                }),
                even: ob(function(a, b) {
                    for (var c = 0; b > c; c += 2) {
                        a.push(c)
                    }
                    return a
                }),
                odd: ob(function(a, b) {
                    for (var c = 1; b > c; c += 2) {
                        a.push(c)
                    }
                    return a
                }),
                lt: ob(function(a, b, c) {
                    for (var d = 0 > c ? c + b : c;
                        --d >= 0;
                    ) {
                        a.push(d)
                    }
                    return a
                }),
                gt: ob(function(a, b, c) {
                    for (var d = 0 > c ? c + b : c;
                        ++d < b;
                    ) {
                        a.push(d)
                    }
                    return a
                })
            }
        }, d.pseudos.nth = d.pseudos.eq;
        for (b in {
                radio: !0,
                checkbox: !0,
                file: !0,
                password: !0,
                image: !0
            }) {
            d.pseudos[b] = mb(b)
        }
        for (b in {
                submit: !0,
                reset: !0
            }) {
            d.pseudos[b] = nb(b)
        }

        function qb() {}
        qb.prototype = d.filters = d.pseudos, d.setFilters = new qb, g = gb.tokenize = function(a, b) {
            var c, e, f, g, h, i, j, k = z[a + " "];
            if (k) {
                return b ? 0 : k.slice(0)
            }
            h = a, i = [], j = d.preFilter;
            while (h) {
                (!c || (e = S.exec(h))) && (e && (h = h.slice(e[0].length) || h), i.push(f = [])), c = !1, (e = T.exec(h)) && (c = e.shift(), f.push({
                    value: c,
                    type: e[0].replace(R, " ")
                }), h = h.slice(c.length));
                for (g in d.filter) {
                    !(e = X[g].exec(h)) || j[g] && !(e = j[g](e)) || (c = e.shift(), f.push({
                        value: c,
                        type: g,
                        matches: e
                    }), h = h.slice(c.length))
                }
                if (!c) {
                    break
                }
            }
            return b ? h.length : h ? gb.error(a) : z(a, i).slice(0)
        };

        function rb(a) {
            for (var b = 0, c = a.length, d = ""; c > b; b++) {
                d += a[b].value
            }
            return d
        }

        function sb(a, b, c) {
            var d = b.dir,
                e = c && "parentNode" === d,
                f = x++;
            return b.first ? function(b, c, f) {
                while (b = b[d]) {
                    if (1 === b.nodeType || e) {
                        return a(b, c, f)
                    }
                }
            } : function(b, c, g) {
                var h, i, j = [w, f];
                if (g) {
                    while (b = b[d]) {
                        if ((1 === b.nodeType || e) && a(b, c, g)) {
                            return !0
                        }
                    }
                } else {
                    while (b = b[d]) {
                        if (1 === b.nodeType || e) {
                            if (i = b[u] || (b[u] = {}), (h = i[d]) && h[0] === w && h[1] === f) {
                                return j[2] = h[2]
                            }
                            if (i[d] = j, j[2] = a(b, c, g)) {
                                return !0
                            }
                        }
                    }
                }
            }
        }

        function tb(a) {
            return a.length > 1 ? function(b, c, d) {
                var e = a.length;
                while (e--) {
                    if (!a[e](b, c, d)) {
                        return !1
                    }
                }
                return !0
            } : a[0]
        }

        function ub(a, b, c) {
            for (var d = 0, e = b.length; e > d; d++) {
                gb(a, b[d], c)
            }
            return c
        }

        function vb(a, b, c, d, e) {
            for (var f, g = [], h = 0, i = a.length, j = null != b; i > h; h++) {
                (f = a[h]) && (!c || c(f, d, e)) && (g.push(f), j && b.push(h))
            }
            return g
        }

        function wb(a, b, c, d, e, f) {
            return d && !d[u] && (d = wb(d)), e && !e[u] && (e = wb(e, f)), ib(function(f, g, h, i) {
                var j, k, l, m = [],
                    n = [],
                    o = g.length,
                    p = f || ub(b || "*", h.nodeType ? [h] : h, []),
                    q = !a || !f && b ? p : vb(p, m, a, h, i),
                    r = c ? e || (f ? a : o || d) ? [] : g : q;
                if (c && c(q, r, h, i), d) {
                    j = vb(r, n), d(j, [], h, i), k = j.length;
                    while (k--) {
                        (l = j[k]) && (r[n[k]] = !(q[n[k]] = l))
                    }
                }
                if (f) {
                    if (e || a) {
                        if (e) {
                            j = [], k = r.length;
                            while (k--) {
                                (l = r[k]) && j.push(q[k] = l)
                            }
                            e(null, r = [], j, i)
                        }
                        k = r.length;
                        while (k--) {
                            (l = r[k]) && (j = e ? J(f, l) : m[k]) > -1 && (f[j] = !(g[j] = l))
                        }
                    }
                } else {
                    r = vb(r === g ? r.splice(o, r.length) : r), e ? e(null, g, r, i) : H.apply(g, r)
                }
            })
        }

        function xb(a) {
            for (var b, c, e, f = a.length, g = d.relative[a[0].type], h = g || d.relative[" "], i = g ? 1 : 0, k = sb(function(a) {
                    return a === b
                }, h, !0), l = sb(function(a) {
                    return J(b, a) > -1
                }, h, !0), m = [function(a, c, d) {
                    var e = !g && (d || c !== j) || ((b = c).nodeType ? k(a, c, d) : l(a, c, d));
                    return b = null, e
                }]; f > i; i++) {
                if (c = d.relative[a[i].type]) {
                    m = [sb(tb(m), c)]
                } else {
                    if (c = d.filter[a[i].type].apply(null, a[i].matches), c[u]) {
                        for (e = ++i; f > e; e++) {
                            if (d.relative[a[e].type]) {
                                break
                            }
                        }
                        return wb(i > 1 && tb(m), i > 1 && rb(a.slice(0, i - 1).concat({
                            value: " " === a[i - 2].type ? "*" : ""
                        })).replace(R, "$1"), c, e > i && xb(a.slice(i, e)), f > e && xb(a = a.slice(e)), f > e && rb(a))
                    }
                    m.push(c)
                }
            }
            return tb(m)
        }

        function yb(a, b) {
            var c = b.length > 0,
                e = a.length > 0,
                f = function(f, g, h, i, k) {
                    var l, m, o, p = 0,
                        q = "0",
                        r = f && [],
                        s = [],
                        t = j,
                        u = f || e && d.find.TAG("*", k),
                        v = w += null == t ? 1 : Math.random() || 0.1,
                        x = u.length;
                    for (k && (j = g !== n && g); q !== x && null != (l = u[q]); q++) {
                        if (e && l) {
                            m = 0;
                            while (o = a[m++]) {
                                if (o(l, g, h)) {
                                    i.push(l);
                                    break
                                }
                            }
                            k && (w = v)
                        }
                        c && ((l = !o && l) && p--, f && r.push(l))
                    }
                    if (p += q, c && q !== p) {
                        m = 0;
                        while (o = b[m++]) {
                            o(r, s, g, h)
                        }
                        if (f) {
                            if (p > 0) {
                                while (q--) {
                                    r[q] || s[q] || (s[q] = F.call(i))
                                }
                            }
                            s = vb(s)
                        }
                        H.apply(i, s), k && !f && s.length > 0 && p + b.length > 1 && gb.uniqueSort(i)
                    }
                    return k && (w = v, j = t), r
                };
            return c ? ib(f) : f
        }
        return h = gb.compile = function(a, b) {
            var c, d = [],
                e = [],
                f = A[a + " "];
            if (!f) {
                b || (b = g(a)), c = b.length;
                while (c--) {
                    f = xb(b[c]), f[u] ? d.push(f) : e.push(f)
                }
                f = A(a, yb(e, d)), f.selector = a
            }
            return f
        }, i = gb.select = function(a, b, e, f) {
            var i, j, k, l, m, n = "function" == typeof a && a,
                o = !f && g(a = n.selector || a);
            if (e = e || [], 1 === o.length) {
                if (j = o[0] = o[0].slice(0), j.length > 2 && "ID" === (k = j[0]).type && c.getById && 9 === b.nodeType && p && d.relative[j[1].type]) {
                    if (b = (d.find.ID(k.matches[0].replace(cb, db), b) || [])[0], !b) {
                        return e
                    }
                    n && (b = b.parentNode), a = a.slice(j.shift().value.length)
                }
                i = X.needsContext.test(a) ? 0 : j.length;
                while (i--) {
                    if (k = j[i], d.relative[l = k.type]) {
                        break
                    }
                    if ((m = d.find[l]) && (f = m(k.matches[0].replace(cb, db), ab.test(j[0].type) && pb(b.parentNode) || b))) {
                        if (j.splice(i, 1), a = f.length && rb(j), !a) {
                            return H.apply(e, f), e
                        }
                        break
                    }
                }
            }
            return (n || h(a, o))(f, b, !p, e, ab.test(a) && pb(b.parentNode) || b), e
        }, c.sortStable = u.split("").sort(B).join("") === u, c.detectDuplicates = !!l, m(), c.sortDetached = jb(function(a) {
            return 1 & a.compareDocumentPosition(n.createElement("div"))
        }), jb(function(a) {
            return a.innerHTML = "<a href='#'></a>", "#" === a.firstChild.getAttribute("href")
        }) || kb("type|href|height|width", function(a, b, c) {
            return c ? void 0 : a.getAttribute(b, "type" === b.toLowerCase() ? 1 : 2)
        }), c.attributes && jb(function(a) {
            return a.innerHTML = "<input/>", a.firstChild.setAttribute("value", ""), "" === a.firstChild.getAttribute("value")
        }) || kb("value", function(a, b, c) {
            return c || "input" !== a.nodeName.toLowerCase() ? void 0 : a.defaultValue
        }), jb(function(a) {
            return null == a.getAttribute("disabled")
        }) || kb(K, function(a, b, c) {
            var d;
            return c ? void 0 : a[b] === !0 ? b.toLowerCase() : (d = a.getAttributeNode(b)) && d.specified ? d.value : null
        }), gb
    }(a);
    m.find = s, m.expr = s.selectors, m.expr[":"] = m.expr.pseudos, m.unique = s.uniqueSort, m.text = s.getText, m.isXMLDoc = s.isXML, m.contains = s.contains;
    var t = m.expr.match.needsContext,
        u = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
        v = /^.[^:#\[\.,]*$/;

    function w(a, b, c) {
        if (m.isFunction(b)) {
            return m.grep(a, function(a, d) {
                return !!b.call(a, d, a) !== c
            })
        }
        if (b.nodeType) {
            return m.grep(a, function(a) {
                return a === b !== c
            })
        }
        if ("string" == typeof b) {
            if (v.test(b)) {
                return m.filter(b, a, c)
            }
            b = m.filter(b, a)
        }
        return m.grep(a, function(a) {
            return m.inArray(a, b) >= 0 !== c
        })
    }
    m.filter = function(a, b, c) {
        var d = b[0];
        return c && (a = ":not(" + a + ")"), 1 === b.length && 1 === d.nodeType ? m.find.matchesSelector(d, a) ? [d] : [] : m.find.matches(a, m.grep(b, function(a) {
            return 1 === a.nodeType
        }))
    }, m.fn.extend({
        find: function(a) {
            var b, c = [],
                d = this,
                e = d.length;
            if ("string" != typeof a) {
                return this.pushStack(m(a).filter(function() {
                    for (b = 0; e > b; b++) {
                        if (m.contains(d[b], this)) {
                            return !0
                        }
                    }
                }))
            }
            for (b = 0; e > b; b++) {
                m.find(a, d[b], c)
            }
            return c = this.pushStack(e > 1 ? m.unique(c) : c), c.selector = this.selector ? this.selector + " " + a : a, c
        },
        filter: function(a) {
            return this.pushStack(w(this, a || [], !1))
        },
        not: function(a) {
            return this.pushStack(w(this, a || [], !0))
        },
        is: function(a) {
            return !!w(this, "string" == typeof a && t.test(a) ? m(a) : a || [], !1).length
        }
    });
    var x, y = a.document,
        z = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
        A = m.fn.init = function(a, b) {
            var c, d;
            if (!a) {
                return this
            }
            if ("string" == typeof a) {
                if (c = "<" === a.charAt(0) && ">" === a.charAt(a.length - 1) && a.length >= 3 ? [null, a, null] : z.exec(a), !c || !c[1] && b) {
                    return !b || b.jquery ? (b || x).find(a) : this.constructor(b).find(a)
                }
                if (c[1]) {
                    if (b = b instanceof m ? b[0] : b, m.merge(this, m.parseHTML(c[1], b && b.nodeType ? b.ownerDocument || b : y, !0)), u.test(c[1]) && m.isPlainObject(b)) {
                        for (c in b) {
                            m.isFunction(this[c]) ? this[c](b[c]) : this.attr(c, b[c])
                        }
                    }
                    return this
                }
                if (d = y.getElementById(c[2]), d && d.parentNode) {
                    if (d.id !== c[2]) {
                        return x.find(a)
                    }
                    this.length = 1, this[0] = d
                }
                return this.context = y, this.selector = a, this
            }
            return a.nodeType ? (this.context = this[0] = a, this.length = 1, this) : m.isFunction(a) ? "undefined" != typeof x.ready ? x.ready(a) : a(m) : (void 0 !== a.selector && (this.selector = a.selector, this.context = a.context), m.makeArray(a, this))
        };
    A.prototype = m.fn, x = m(y);
    var B = /^(?:parents|prev(?:Until|All))/,
        C = {
            children: !0,
            contents: !0,
            next: !0,
            prev: !0
        };
    m.extend({
        dir: function(a, b, c) {
            var d = [],
                e = a[b];
            while (e && 9 !== e.nodeType && (void 0 === c || 1 !== e.nodeType || !m(e).is(c))) {
                1 === e.nodeType && d.push(e), e = e[b]
            }
            return d
        },
        sibling: function(a, b) {
            for (var c = []; a; a = a.nextSibling) {
                1 === a.nodeType && a !== b && c.push(a)
            }
            return c
        }
    }), m.fn.extend({
        has: function(a) {
            var b, c = m(a, this),
                d = c.length;
            return this.filter(function() {
                for (b = 0; d > b; b++) {
                    if (m.contains(this, c[b])) {
                        return !0
                    }
                }
            })
        },
        closest: function(a, b) {
            for (var c, d = 0, e = this.length, f = [], g = t.test(a) || "string" != typeof a ? m(a, b || this.context) : 0; e > d; d++) {
                for (c = this[d]; c && c !== b; c = c.parentNode) {
                    if (c.nodeType < 11 && (g ? g.index(c) > -1 : 1 === c.nodeType && m.find.matchesSelector(c, a))) {
                        f.push(c);
                        break
                    }
                }
            }
            return this.pushStack(f.length > 1 ? m.unique(f) : f)
        },
        index: function(a) {
            return a ? "string" == typeof a ? m.inArray(this[0], m(a)) : m.inArray(a.jquery ? a[0] : a, this) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
        },
        add: function(a, b) {
            return this.pushStack(m.unique(m.merge(this.get(), m(a, b))))
        },
        addBack: function(a) {
            return this.add(null == a ? this.prevObject : this.prevObject.filter(a))
        }
    });

    function D(a, b) {
        do {
            a = a[b]
        } while (a && 1 !== a.nodeType);
        return a
    }
    m.each({
        parent: function(a) {
            var b = a.parentNode;
            return b && 11 !== b.nodeType ? b : null
        },
        parents: function(a) {
            return m.dir(a, "parentNode")
        },
        parentsUntil: function(a, b, c) {
            return m.dir(a, "parentNode", c)
        },
        next: function(a) {
            return D(a, "nextSibling")
        },
        prev: function(a) {
            return D(a, "previousSibling")
        },
        nextAll: function(a) {
            return m.dir(a, "nextSibling")
        },
        prevAll: function(a) {
            return m.dir(a, "previousSibling")
        },
        nextUntil: function(a, b, c) {
            return m.dir(a, "nextSibling", c)
        },
        prevUntil: function(a, b, c) {
            return m.dir(a, "previousSibling", c)
        },
        siblings: function(a) {
            return m.sibling((a.parentNode || {}).firstChild, a)
        },
        children: function(a) {
            return m.sibling(a.firstChild)
        },
        contents: function(a) {
            return m.nodeName(a, "iframe") ? a.contentDocument || a.contentWindow.document : m.merge([], a.childNodes)
        }
    }, function(a, b) {
        m.fn[a] = function(c, d) {
            var e = m.map(this, b, c);
            return "Until" !== a.slice(-5) && (d = c), d && "string" == typeof d && (e = m.filter(d, e)), this.length > 1 && (C[a] || (e = m.unique(e)), B.test(a) && (e = e.reverse())), this.pushStack(e)
        }
    });
    var E = /\S+/g,
        F = {};

    function G(a) {
        var b = F[a] = {};
        return m.each(a.match(E) || [], function(a, c) {
            b[c] = !0
        }), b
    }
    m.Callbacks = function(a) {
        a = "string" == typeof a ? F[a] || G(a) : m.extend({}, a);
        var b, c, d, e, f, g, h = [],
            i = !a.once && [],
            j = function(l) {
                for (c = a.memory && l, d = !0, f = g || 0, g = 0, e = h.length, b = !0; h && e > f; f++) {
                    if (h[f].apply(l[0], l[1]) === !1 && a.stopOnFalse) {
                        c = !1;
                        break
                    }
                }
                b = !1, h && (i ? i.length && j(i.shift()) : c ? h = [] : k.disable())
            },
            k = {
                add: function() {
                    if (h) {
                        var d = h.length;
                        ! function f(b) {
                            m.each(b, function(b, c) {
                                var d = m.type(c);
                                "function" === d ? a.unique && k.has(c) || h.push(c) : c && c.length && "string" !== d && f(c)
                            })
                        }(arguments), b ? e = h.length : c && (g = d, j(c))
                    }
                    return this
                },
                remove: function() {
                    return h && m.each(arguments, function(a, c) {
                        var d;
                        while ((d = m.inArray(c, h, d)) > -1) {
                            h.splice(d, 1), b && (e >= d && e--, f >= d && f--)
                        }
                    }), this
                },
                has: function(a) {
                    return a ? m.inArray(a, h) > -1 : !(!h || !h.length)
                },
                empty: function() {
                    return h = [], e = 0, this
                },
                disable: function() {
                    return h = i = c = void 0, this
                },
                disabled: function() {
                    return !h
                },
                lock: function() {
                    return i = void 0, c || k.disable(), this
                },
                locked: function() {
                    return !i
                },
                fireWith: function(a, c) {
                    return !h || d && !i || (c = c || [], c = [a, c.slice ? c.slice() : c], b ? i.push(c) : j(c)), this
                },
                fire: function() {
                    return k.fireWith(this, arguments), this
                },
                fired: function() {
                    return !!d
                }
            };
        return k
    }, m.extend({
        Deferred: function(a) {
            var b = [
                    ["resolve", "done", m.Callbacks("once memory"), "resolved"],
                    ["reject", "fail", m.Callbacks("once memory"), "rejected"],
                    ["notify", "progress", m.Callbacks("memory")]
                ],
                c = "pending",
                d = {
                    state: function() {
                        return c
                    },
                    always: function() {
                        return e.done(arguments).fail(arguments), this
                    },
                    then: function() {
                        var a = arguments;
                        return m.Deferred(function(c) {
                            m.each(b, function(b, f) {
                                var g = m.isFunction(a[b]) && a[b];
                                e[f[1]](function() {
                                    var a = g && g.apply(this, arguments);
                                    a && m.isFunction(a.promise) ? a.promise().done(c.resolve).fail(c.reject).progress(c.notify) : c[f[0] + "With"](this === d ? c.promise() : this, g ? [a] : arguments)
                                })
                            }), a = null
                        }).promise()
                    },
                    promise: function(a) {
                        return null != a ? m.extend(a, d) : d
                    }
                },
                e = {};
            return d.pipe = d.then, m.each(b, function(a, f) {
                var g = f[2],
                    h = f[3];
                d[f[1]] = g.add, h && g.add(function() {
                    c = h
                }, b[1 ^ a][2].disable, b[2][2].lock), e[f[0]] = function() {
                    return e[f[0] + "With"](this === e ? d : this, arguments), this
                }, e[f[0] + "With"] = g.fireWith
            }), d.promise(e), a && a.call(e, e), e
        },
        when: function(a) {
            var b = 0,
                c = d.call(arguments),
                e = c.length,
                f = 1 !== e || a && m.isFunction(a.promise) ? e : 0,
                g = 1 === f ? a : m.Deferred(),
                h = function(a, b, c) {
                    return function(e) {
                        b[a] = this, c[a] = arguments.length > 1 ? d.call(arguments) : e, c === i ? g.notifyWith(b, c) : --f || g.resolveWith(b, c)
                    }
                },
                i, j, k;
            if (e > 1) {
                for (i = new Array(e), j = new Array(e), k = new Array(e); e > b; b++) {
                    c[b] && m.isFunction(c[b].promise) ? c[b].promise().done(h(b, k, c)).fail(g.reject).progress(h(b, j, i)) : --f
                }
            }
            return f || g.resolveWith(k, c), g.promise()
        }
    });
    var H;
    m.fn.ready = function(a) {
        return m.ready.promise().done(a), this
    }, m.extend({
        isReady: !1,
        readyWait: 1,
        holdReady: function(a) {
            a ? m.readyWait++ : m.ready(!0)
        },
        ready: function(a) {
            if (a === !0 ? !--m.readyWait : !m.isReady) {
                if (!y.body) {
                    return setTimeout(m.ready)
                }
                m.isReady = !0, a !== !0 && --m.readyWait > 0 || (H.resolveWith(y, [m]), m.fn.triggerHandler && (m(y).triggerHandler("ready"), m(y).off("ready")))
            }
        }
    });

    function I() {
        y.addEventListener ? (y.removeEventListener("DOMContentLoaded", J, !1), a.removeEventListener("load", J, !1)) : (y.detachEvent("onreadystatechange", J), a.detachEvent("onload", J))
    }

    function J() {
        (y.addEventListener || "load" === event.type || "complete" === y.readyState) && (I(), m.ready())
    }
    m.ready.promise = function(b) {
        if (!H) {
            if (H = m.Deferred(), "complete" === y.readyState) {
                setTimeout(m.ready)
            } else {
                if (y.addEventListener) {
                    y.addEventListener("DOMContentLoaded", J, !1), a.addEventListener("load", J, !1)
                } else {
                    y.attachEvent("onreadystatechange", J), a.attachEvent("onload", J);
                    var c = !1;
                    try {
                        c = null == a.frameElement && y.documentElement
                    } catch (d) {}
                    c && c.doScroll && ! function e() {
                        if (!m.isReady) {
                            try {
                                c.doScroll("left")
                            } catch (a) {
                                return setTimeout(e, 50)
                            }
                            I(), m.ready()
                        }
                    }()
                }
            }
        }
        return H.promise(b)
    };
    var K = "undefined",
        L;
    for (L in m(k)) {
        break
    }
    k.ownLast = "0" !== L, k.inlineBlockNeedsLayout = !1, m(function() {
            var a, b, c, d;
            c = y.getElementsByTagName("body")[0], c && c.style && (b = y.createElement("div"), d = y.createElement("div"), d.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px", c.appendChild(d).appendChild(b), typeof b.style.zoom !== K && (b.style.cssText = "display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1", k.inlineBlockNeedsLayout = a = 3 === b.offsetWidth, a && (c.style.zoom = 1)), c.removeChild(d))
        }),
        function() {
            var a = y.createElement("div");
            if (null == k.deleteExpando) {
                k.deleteExpando = !0;
                try {
                    delete a.test
                } catch (b) {
                    k.deleteExpando = !1
                }
            }
            a = null
        }(), m.acceptData = function(a) {
            var b = m.noData[(a.nodeName + " ").toLowerCase()],
                c = +a.nodeType || 1;
            return 1 !== c && 9 !== c ? !1 : !b || b !== !0 && a.getAttribute("classid") === b
        };
    var M = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
        N = /([A-Z])/g;

    function O(a, b, c) {
        if (void 0 === c && 1 === a.nodeType) {
            var d = "data-" + b.replace(N, "-$1").toLowerCase();
            if (c = a.getAttribute(d), "string" == typeof c) {
                try {
                    c = "true" === c ? !0 : "false" === c ? !1 : "null" === c ? null : +c + "" === c ? +c : M.test(c) ? m.parseJSON(c) : c
                } catch (e) {}
                m.data(a, b, c)
            } else {
                c = void 0
            }
        }
        return c
    }

    function P(a) {
        var b;
        for (b in a) {
            if (("data" !== b || !m.isEmptyObject(a[b])) && "toJSON" !== b) {
                return !1
            }
        }
        return !0
    }

    function Q(a, b, d, e) {
        if (m.acceptData(a)) {
            var f, g, h = m.expando,
                i = a.nodeType,
                j = i ? m.cache : a,
                k = i ? a[h] : a[h] && h;
            if (k && j[k] && (e || j[k].data) || void 0 !== d || "string" != typeof b) {
                return k || (k = i ? a[h] = c.pop() || m.guid++ : h), j[k] || (j[k] = i ? {} : {
                    toJSON: m.noop
                }), ("object" == typeof b || "function" == typeof b) && (e ? j[k] = m.extend(j[k], b) : j[k].data = m.extend(j[k].data, b)), g = j[k], e || (g.data || (g.data = {}), g = g.data), void 0 !== d && (g[m.camelCase(b)] = d), "string" == typeof b ? (f = g[b], null == f && (f = g[m.camelCase(b)])) : f = g, f
            }
        }
    }

    function R(a, b, c) {
        if (m.acceptData(a)) {
            var d, e, f = a.nodeType,
                g = f ? m.cache : a,
                h = f ? a[m.expando] : m.expando;
            if (g[h]) {
                if (b && (d = c ? g[h] : g[h].data)) {
                    m.isArray(b) ? b = b.concat(m.map(b, m.camelCase)) : b in d ? b = [b] : (b = m.camelCase(b), b = b in d ? [b] : b.split(" ")), e = b.length;
                    while (e--) {
                        delete d[b[e]]
                    }
                    if (c ? !P(d) : !m.isEmptyObject(d)) {
                        return
                    }
                }(c || (delete g[h].data, P(g[h]))) && (f ? m.cleanData([a], !0) : k.deleteExpando || g != g.window ? delete g[h] : g[h] = null)
            }
        }
    }
    m.extend({
        cache: {},
        noData: {
            "applet ": !0,
            "embed ": !0,
            "object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
        },
        hasData: function(a) {
            return a = a.nodeType ? m.cache[a[m.expando]] : a[m.expando], !!a && !P(a)
        },
        data: function(a, b, c) {
            return Q(a, b, c)
        },
        removeData: function(a, b) {
            return R(a, b)
        },
        _data: function(a, b, c) {
            return Q(a, b, c, !0)
        },
        _removeData: function(a, b) {
            return R(a, b, !0)
        }
    }), m.fn.extend({
        data: function(a, b) {
            var c, d, e, f = this[0],
                g = f && f.attributes;
            if (void 0 === a) {
                if (this.length && (e = m.data(f), 1 === f.nodeType && !m._data(f, "parsedAttrs"))) {
                    c = g.length;
                    while (c--) {
                        g[c] && (d = g[c].name, 0 === d.indexOf("data-") && (d = m.camelCase(d.slice(5)), O(f, d, e[d])))
                    }
                    m._data(f, "parsedAttrs", !0)
                }
                return e
            }
            return "object" == typeof a ? this.each(function() {
                m.data(this, a)
            }) : arguments.length > 1 ? this.each(function() {
                m.data(this, a, b)
            }) : f ? O(f, a, m.data(f, a)) : void 0
        },
        removeData: function(a) {
            return this.each(function() {
                m.removeData(this, a)
            })
        }
    }), m.extend({
        queue: function(a, b, c) {
            var d;
            return a ? (b = (b || "fx") + "queue", d = m._data(a, b), c && (!d || m.isArray(c) ? d = m._data(a, b, m.makeArray(c)) : d.push(c)), d || []) : void 0
        },
        dequeue: function(a, b) {
            b = b || "fx";
            var c = m.queue(a, b),
                d = c.length,
                e = c.shift(),
                f = m._queueHooks(a, b),
                g = function() {
                    m.dequeue(a, b)
                };
            "inprogress" === e && (e = c.shift(), d--), e && ("fx" === b && c.unshift("inprogress"), delete f.stop, e.call(a, g, f)), !d && f && f.empty.fire()
        },
        _queueHooks: function(a, b) {
            var c = b + "queueHooks";
            return m._data(a, c) || m._data(a, c, {
                empty: m.Callbacks("once memory").add(function() {
                    m._removeData(a, b + "queue"), m._removeData(a, c)
                })
            })
        }
    }), m.fn.extend({
        queue: function(a, b) {
            var c = 2;
            return "string" != typeof a && (b = a, a = "fx", c--), arguments.length < c ? m.queue(this[0], a) : void 0 === b ? this : this.each(function() {
                var c = m.queue(this, a, b);
                m._queueHooks(this, a), "fx" === a && "inprogress" !== c[0] && m.dequeue(this, a)
            })
        },
        dequeue: function(a) {
            return this.each(function() {
                m.dequeue(this, a)
            })
        },
        clearQueue: function(a) {
            return this.queue(a || "fx", [])
        },
        promise: function(a, b) {
            var c, d = 1,
                e = m.Deferred(),
                f = this,
                g = this.length,
                h = function() {
                    --d || e.resolveWith(f, [f])
                };
            "string" != typeof a && (b = a, a = void 0), a = a || "fx";
            while (g--) {
                c = m._data(f[g], a + "queueHooks"), c && c.empty && (d++, c.empty.add(h))
            }
            return h(), e.promise(b)
        }
    });
    var S = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
        T = ["Top", "Right", "Bottom", "Left"],
        U = function(a, b) {
            return a = b || a, "none" === m.css(a, "display") || !m.contains(a.ownerDocument, a)
        },
        V = m.access = function(a, b, c, d, e, f, g) {
            var h = 0,
                i = a.length,
                j = null == c;
            if ("object" === m.type(c)) {
                e = !0;
                for (h in c) {
                    m.access(a, b, h, c[h], !0, f, g)
                }
            } else {
                if (void 0 !== d && (e = !0, m.isFunction(d) || (g = !0), j && (g ? (b.call(a, d), b = null) : (j = b, b = function(a, b, c) {
                        return j.call(m(a), c)
                    })), b)) {
                    for (; i > h; h++) {
                        b(a[h], c, g ? d : d.call(a[h], h, b(a[h], c)))
                    }
                }
            }
            return e ? a : j ? b.call(a) : i ? b(a[0], c) : f
        },
        W = /^(?:checkbox|radio)$/i;
    ! function() {
        var a = y.createElement("input"),
            b = y.createElement("div"),
            c = y.createDocumentFragment();
        if (b.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", k.leadingWhitespace = 3 === b.firstChild.nodeType, k.tbody = !b.getElementsByTagName("tbody").length, k.htmlSerialize = !!b.getElementsByTagName("link").length, k.html5Clone = "<:nav></:nav>" !== y.createElement("nav").cloneNode(!0).outerHTML, a.type = "checkbox", a.checked = !0, c.appendChild(a), k.appendChecked = a.checked, b.innerHTML = "<textarea>x</textarea>", k.noCloneChecked = !!b.cloneNode(!0).lastChild.defaultValue, c.appendChild(b), b.innerHTML = "<input type='radio' checked='checked' name='t'/>", k.checkClone = b.cloneNode(!0).cloneNode(!0).lastChild.checked, k.noCloneEvent = !0, b.attachEvent && (b.attachEvent("onclick", function() {
                k.noCloneEvent = !1
            }), b.cloneNode(!0).click()), null == k.deleteExpando) {
            k.deleteExpando = !0;
            try {
                delete b.test
            } catch (d) {
                k.deleteExpando = !1
            }
        }
    }(),
    function() {
        var b, c, d = y.createElement("div");
        for (b in {
                submit: !0,
                change: !0,
                focusin: !0
            }) {
            c = "on" + b, (k[b + "Bubbles"] = c in a) || (d.setAttribute(c, "t"), k[b + "Bubbles"] = d.attributes[c].expando === !1)
        }
        d = null
    }();
    var X = /^(?:input|select|textarea)$/i,
        Y = /^key/,
        Z = /^(?:mouse|pointer|contextmenu)|click/,
        $ = /^(?:focusinfocus|focusoutblur)$/,
        _ = /^([^.]*)(?:\.(.+)|)$/;

    function ab() {
        return !0
    }

    function bb() {
        return !1
    }

    function cb() {
        try {
            return y.activeElement
        } catch (a) {}
    }
    m.event = {
        global: {},
        add: function(a, b, c, d, e) {
            var f, g, h, i, j, k, l, n, o, p, q, r = m._data(a);
            if (r) {
                c.handler && (i = c, c = i.handler, e = i.selector), c.guid || (c.guid = m.guid++), (g = r.events) || (g = r.events = {}), (k = r.handle) || (k = r.handle = function(a) {
                    return typeof m === K || a && m.event.triggered === a.type ? void 0 : m.event.dispatch.apply(k.elem, arguments)
                }, k.elem = a), b = (b || "").match(E) || [""], h = b.length;
                while (h--) {
                    f = _.exec(b[h]) || [], o = q = f[1], p = (f[2] || "").split(".").sort(), o && (j = m.event.special[o] || {}, o = (e ? j.delegateType : j.bindType) || o, j = m.event.special[o] || {}, l = m.extend({
                        type: o,
                        origType: q,
                        data: d,
                        handler: c,
                        guid: c.guid,
                        selector: e,
                        needsContext: e && m.expr.match.needsContext.test(e),
                        namespace: p.join(".")
                    }, i), (n = g[o]) || (n = g[o] = [], n.delegateCount = 0, j.setup && j.setup.call(a, d, p, k) !== !1 || (a.addEventListener ? a.addEventListener(o, k, !1) : a.attachEvent && a.attachEvent("on" + o, k))), j.add && (j.add.call(a, l), l.handler.guid || (l.handler.guid = c.guid)), e ? n.splice(n.delegateCount++, 0, l) : n.push(l), m.event.global[o] = !0)
                }
                a = null
            }
        },
        remove: function(a, b, c, d, e) {
            var f, g, h, i, j, k, l, n, o, p, q, r = m.hasData(a) && m._data(a);
            if (r && (k = r.events)) {
                b = (b || "").match(E) || [""], j = b.length;
                while (j--) {
                    if (h = _.exec(b[j]) || [], o = q = h[1], p = (h[2] || "").split(".").sort(), o) {
                        l = m.event.special[o] || {}, o = (d ? l.delegateType : l.bindType) || o, n = k[o] || [], h = h[2] && new RegExp("(^|\\.)" + p.join("\\.(?:.*\\.|)") + "(\\.|$)"), i = f = n.length;
                        while (f--) {
                            g = n[f], !e && q !== g.origType || c && c.guid !== g.guid || h && !h.test(g.namespace) || d && d !== g.selector && ("**" !== d || !g.selector) || (n.splice(f, 1), g.selector && n.delegateCount--, l.remove && l.remove.call(a, g))
                        }
                        i && !n.length && (l.teardown && l.teardown.call(a, p, r.handle) !== !1 || m.removeEvent(a, o, r.handle), delete k[o])
                    } else {
                        for (o in k) {
                            m.event.remove(a, o + b[j], c, d, !0)
                        }
                    }
                }
                m.isEmptyObject(k) && (delete r.handle, m._removeData(a, "events"))
            }
        },
        trigger: function(b, c, d, e) {
            var f, g, h, i, k, l, n, o = [d || y],
                p = j.call(b, "type") ? b.type : b,
                q = j.call(b, "namespace") ? b.namespace.split(".") : [];
            if (h = l = d = d || y, 3 !== d.nodeType && 8 !== d.nodeType && !$.test(p + m.event.triggered) && (p.indexOf(".") >= 0 && (q = p.split("."), p = q.shift(), q.sort()), g = p.indexOf(":") < 0 && "on" + p, b = b[m.expando] ? b : new m.Event(p, "object" == typeof b && b), b.isTrigger = e ? 2 : 3, b.namespace = q.join("."), b.namespace_re = b.namespace ? new RegExp("(^|\\.)" + q.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, b.result = void 0, b.target || (b.target = d), c = null == c ? [b] : m.makeArray(c, [b]), k = m.event.special[p] || {}, e || !k.trigger || k.trigger.apply(d, c) !== !1)) {
                if (!e && !k.noBubble && !m.isWindow(d)) {
                    for (i = k.delegateType || p, $.test(i + p) || (h = h.parentNode); h; h = h.parentNode) {
                        o.push(h), l = h
                    }
                    l === (d.ownerDocument || y) && o.push(l.defaultView || l.parentWindow || a)
                }
                n = 0;
                while ((h = o[n++]) && !b.isPropagationStopped()) {
                    b.type = n > 1 ? i : k.bindType || p, f = (m._data(h, "events") || {})[b.type] && m._data(h, "handle"), f && f.apply(h, c), f = g && h[g], f && f.apply && m.acceptData(h) && (b.result = f.apply(h, c), b.result === !1 && b.preventDefault())
                }
                if (b.type = p, !e && !b.isDefaultPrevented() && (!k._default || k._default.apply(o.pop(), c) === !1) && m.acceptData(d) && g && d[p] && !m.isWindow(d)) {
                    l = d[g], l && (d[g] = null), m.event.triggered = p;
                    try {
                        d[p]()
                    } catch (r) {}
                    m.event.triggered = void 0, l && (d[g] = l)
                }
                return b.result
            }
        },
        dispatch: function(a) {
            a = m.event.fix(a);
            var b, c, e, f, g, h = [],
                i = d.call(arguments),
                j = (m._data(this, "events") || {})[a.type] || [],
                k = m.event.special[a.type] || {};
            if (i[0] = a, a.delegateTarget = this, !k.preDispatch || k.preDispatch.call(this, a) !== !1) {
                h = m.event.handlers.call(this, a, j), b = 0;
                while ((f = h[b++]) && !a.isPropagationStopped()) {
                    a.currentTarget = f.elem, g = 0;
                    while ((e = f.handlers[g++]) && !a.isImmediatePropagationStopped()) {
                        (!a.namespace_re || a.namespace_re.test(e.namespace)) && (a.handleObj = e, a.data = e.data, c = ((m.event.special[e.origType] || {}).handle || e.handler).apply(f.elem, i), void 0 !== c && (a.result = c) === !1 && (a.preventDefault(), a.stopPropagation()))
                    }
                }
                return k.postDispatch && k.postDispatch.call(this, a), a.result
            }
        },
        handlers: function(a, b) {
            var c, d, e, f, g = [],
                h = b.delegateCount,
                i = a.target;
            if (h && i.nodeType && (!a.button || "click" !== a.type)) {
                for (; i != this; i = i.parentNode || this) {
                    if (1 === i.nodeType && (i.disabled !== !0 || "click" !== a.type)) {
                        for (e = [], f = 0; h > f; f++) {
                            d = b[f], c = d.selector + " ", void 0 === e[c] && (e[c] = d.needsContext ? m(c, this).index(i) >= 0 : m.find(c, this, null, [i]).length), e[c] && e.push(d)
                        }
                        e.length && g.push({
                            elem: i,
                            handlers: e
                        })
                    }
                }
            }
            return h < b.length && g.push({
                elem: this,
                handlers: b.slice(h)
            }), g
        },
        fix: function(a) {
            if (a[m.expando]) {
                return a
            }
            var b, c, d, e = a.type,
                f = a,
                g = this.fixHooks[e];
            g || (this.fixHooks[e] = g = Z.test(e) ? this.mouseHooks : Y.test(e) ? this.keyHooks : {}), d = g.props ? this.props.concat(g.props) : this.props, a = new m.Event(f), b = d.length;
            while (b--) {
                c = d[b], a[c] = f[c]
            }
            return a.target || (a.target = f.srcElement || y), 3 === a.target.nodeType && (a.target = a.target.parentNode), a.metaKey = !!a.metaKey, g.filter ? g.filter(a, f) : a
        },
        props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: "char charCode key keyCode".split(" "),
            filter: function(a, b) {
                return null == a.which && (a.which = null != b.charCode ? b.charCode : b.keyCode), a
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function(a, b) {
                var c, d, e, f = b.button,
                    g = b.fromElement;
                return null == a.pageX && null != b.clientX && (d = a.target.ownerDocument || y, e = d.documentElement, c = d.body, a.pageX = b.clientX + (e && e.scrollLeft || c && c.scrollLeft || 0) - (e && e.clientLeft || c && c.clientLeft || 0), a.pageY = b.clientY + (e && e.scrollTop || c && c.scrollTop || 0) - (e && e.clientTop || c && c.clientTop || 0)), !a.relatedTarget && g && (a.relatedTarget = g === a.target ? b.toElement : g), a.which || void 0 === f || (a.which = 1 & f ? 1 : 2 & f ? 3 : 4 & f ? 2 : 0), a
            }
        },
        special: {
            load: {
                noBubble: !0
            },
            focus: {
                trigger: function() {
                    if (this !== cb() && this.focus) {
                        try {
                            return this.focus(), !1
                        } catch (a) {}
                    }
                },
                delegateType: "focusin"
            },
            blur: {
                trigger: function() {
                    return this === cb() && this.blur ? (this.blur(), !1) : void 0
                },
                delegateType: "focusout"
            },
            click: {
                trigger: function() {
                    return m.nodeName(this, "input") && "checkbox" === this.type && this.click ? (this.click(), !1) : void 0
                },
                _default: function(a) {
                    return m.nodeName(a.target, "a")
                }
            },
            beforeunload: {
                postDispatch: function(a) {
                    void 0 !== a.result && a.originalEvent && (a.originalEvent.returnValue = a.result)
                }
            }
        },
        simulate: function(a, b, c, d) {
            var e = m.extend(new m.Event, c, {
                type: a,
                isSimulated: !0,
                originalEvent: {}
            });
            d ? m.event.trigger(e, null, b) : m.event.dispatch.call(b, e), e.isDefaultPrevented() && c.preventDefault()
        }
    }, m.removeEvent = y.removeEventListener ? function(a, b, c) {
        a.removeEventListener && a.removeEventListener(b, c, !1)
    } : function(a, b, c) {
        var d = "on" + b;
        a.detachEvent && (typeof a[d] === K && (a[d] = null), a.detachEvent(d, c))
    }, m.Event = function(a, b) {
        return this instanceof m.Event ? (a && a.type ? (this.originalEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || void 0 === a.defaultPrevented && a.returnValue === !1 ? ab : bb) : this.type = a, b && m.extend(this, b), this.timeStamp = a && a.timeStamp || m.now(), void(this[m.expando] = !0)) : new m.Event(a, b)
    }, m.Event.prototype = {
        isDefaultPrevented: bb,
        isPropagationStopped: bb,
        isImmediatePropagationStopped: bb,
        preventDefault: function() {
            var a = this.originalEvent;
            this.isDefaultPrevented = ab, a && (a.preventDefault ? a.preventDefault() : a.returnValue = !1)
        },
        stopPropagation: function() {
            var a = this.originalEvent;
            this.isPropagationStopped = ab, a && (a.stopPropagation && a.stopPropagation(), a.cancelBubble = !0)
        },
        stopImmediatePropagation: function() {
            var a = this.originalEvent;
            this.isImmediatePropagationStopped = ab, a && a.stopImmediatePropagation && a.stopImmediatePropagation(), this.stopPropagation()
        }
    }, m.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(a, b) {
        m.event.special[a] = {
            delegateType: b,
            bindType: b,
            handle: function(a) {
                var c, d = this,
                    e = a.relatedTarget,
                    f = a.handleObj;
                return (!e || e !== d && !m.contains(d, e)) && (a.type = f.origType, c = f.handler.apply(this, arguments), a.type = b), c
            }
        }
    }), k.submitBubbles || (m.event.special.submit = {
        setup: function() {
            return m.nodeName(this, "form") ? !1 : void m.event.add(this, "click._submit keypress._submit", function(a) {
                var b = a.target,
                    c = m.nodeName(b, "input") || m.nodeName(b, "button") ? b.form : void 0;
                c && !m._data(c, "submitBubbles") && (m.event.add(c, "submit._submit", function(a) {
                    a._submit_bubble = !0
                }), m._data(c, "submitBubbles", !0))
            })
        },
        postDispatch: function(a) {
            a._submit_bubble && (delete a._submit_bubble, this.parentNode && !a.isTrigger && m.event.simulate("submit", this.parentNode, a, !0))
        },
        teardown: function() {
            return m.nodeName(this, "form") ? !1 : void m.event.remove(this, "._submit")
        }
    }), k.changeBubbles || (m.event.special.change = {
        setup: function() {
            return X.test(this.nodeName) ? (("checkbox" === this.type || "radio" === this.type) && (m.event.add(this, "propertychange._change", function(a) {
                "checked" === a.originalEvent.propertyName && (this._just_changed = !0)
            }), m.event.add(this, "click._change", function(a) {
                this._just_changed && !a.isTrigger && (this._just_changed = !1), m.event.simulate("change", this, a, !0)
            })), !1) : void m.event.add(this, "beforeactivate._change", function(a) {
                var b = a.target;
                X.test(b.nodeName) && !m._data(b, "changeBubbles") && (m.event.add(b, "change._change", function(a) {
                    !this.parentNode || a.isSimulated || a.isTrigger || m.event.simulate("change", this.parentNode, a, !0)
                }), m._data(b, "changeBubbles", !0))
            })
        },
        handle: function(a) {
            var b = a.target;
            return this !== b || a.isSimulated || a.isTrigger || "radio" !== b.type && "checkbox" !== b.type ? a.handleObj.handler.apply(this, arguments) : void 0
        },
        teardown: function() {
            return m.event.remove(this, "._change"), !X.test(this.nodeName)
        }
    }), k.focusinBubbles || m.each({
        focus: "focusin",
        blur: "focusout"
    }, function(a, b) {
        var c = function(a) {
            m.event.simulate(b, a.target, m.event.fix(a), !0)
        };
        m.event.special[b] = {
            setup: function() {
                var d = this.ownerDocument || this,
                    e = m._data(d, b);
                e || d.addEventListener(a, c, !0), m._data(d, b, (e || 0) + 1)
            },
            teardown: function() {
                var d = this.ownerDocument || this,
                    e = m._data(d, b) - 1;
                e ? m._data(d, b, e) : (d.removeEventListener(a, c, !0), m._removeData(d, b))
            }
        }
    }), m.fn.extend({
        on: function(a, b, c, d, e) {
            var f, g;
            if ("object" == typeof a) {
                "string" != typeof b && (c = c || b, b = void 0);
                for (f in a) {
                    this.on(f, b, c, a[f], e)
                }
                return this
            }
            if (null == c && null == d ? (d = b, c = b = void 0) : null == d && ("string" == typeof b ? (d = c, c = void 0) : (d = c, c = b, b = void 0)), d === !1) {
                d = bb
            } else {
                if (!d) {
                    return this
                }
            }
            return 1 === e && (g = d, d = function(a) {
                return m().off(a), g.apply(this, arguments)
            }, d.guid = g.guid || (g.guid = m.guid++)), this.each(function() {
                m.event.add(this, a, d, c, b)
            })
        },
        one: function(a, b, c, d) {
            return this.on(a, b, c, d, 1)
        },
        off: function(a, b, c) {
            var d, e;
            if (a && a.preventDefault && a.handleObj) {
                return d = a.handleObj, m(a.delegateTarget).off(d.namespace ? d.origType + "." + d.namespace : d.origType, d.selector, d.handler), this
            }
            if ("object" == typeof a) {
                for (e in a) {
                    this.off(e, b, a[e])
                }
                return this
            }
            return (b === !1 || "function" == typeof b) && (c = b, b = void 0), c === !1 && (c = bb), this.each(function() {
                m.event.remove(this, a, c, b)
            })
        },
        trigger: function(a, b) {
            return this.each(function() {
                m.event.trigger(a, b, this)
            })
        },
        triggerHandler: function(a, b) {
            var c = this[0];
            return c ? m.event.trigger(a, b, c, !0) : void 0
        }
    });

    function db(a) {
        var b = eb.split("|"),
            c = a.createDocumentFragment();
        if (c.createElement) {
            while (b.length) {
                c.createElement(b.pop())
            }
        }
        return c
    }
    var eb = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
        fb = / jQuery\d+="(?:null|\d+)"/g,
        gb = new RegExp("<(?:" + eb + ")[\\s/>]", "i"),
        hb = /^\s+/,
        ib = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
        jb = /<([\w:]+)/,
        kb = /<tbody/i,
        lb = /<|&#?\w+;/,
        mb = /<(?:script|style|link)/i,
        nb = /checked\s*(?:[^=]|=\s*.checked.)/i,
        ob = /^$|\/(?:java|ecma)script/i,
        pb = /^true\/(.*)/,
        qb = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
        rb = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            legend: [1, "<fieldset>", "</fieldset>"],
            area: [1, "<map>", "</map>"],
            param: [1, "<object>", "</object>"],
            thead: [1, "<table>", "</table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            _default: k.htmlSerialize ? [0, "", ""] : [1, "X<div>", "</div>"]
        },
        sb = db(y),
        tb = sb.appendChild(y.createElement("div"));
    rb.optgroup = rb.option, rb.tbody = rb.tfoot = rb.colgroup = rb.caption = rb.thead, rb.th = rb.td;

    function ub(a, b) {
        var c, d, e = 0,
            f = typeof a.getElementsByTagName !== K ? a.getElementsByTagName(b || "*") : typeof a.querySelectorAll !== K ? a.querySelectorAll(b || "*") : void 0;
        if (!f) {
            for (f = [], c = a.childNodes || a; null != (d = c[e]); e++) {
                !b || m.nodeName(d, b) ? f.push(d) : m.merge(f, ub(d, b))
            }
        }
        return void 0 === b || b && m.nodeName(a, b) ? m.merge([a], f) : f
    }

    function vb(a) {
        W.test(a.type) && (a.defaultChecked = a.checked)
    }

    function wb(a, b) {
        return m.nodeName(a, "table") && m.nodeName(11 !== b.nodeType ? b : b.firstChild, "tr") ? a.getElementsByTagName("tbody")[0] || a.appendChild(a.ownerDocument.createElement("tbody")) : a
    }

    function xb(a) {
        return a.type = (null !== m.find.attr(a, "type")) + "/" + a.type, a
    }

    function yb(a) {
        var b = pb.exec(a.type);
        return b ? a.type = b[1] : a.removeAttribute("type"), a
    }

    function zb(a, b) {
        for (var c, d = 0; null != (c = a[d]); d++) {
            m._data(c, "globalEval", !b || m._data(b[d], "globalEval"))
        }
    }

    function Ab(a, b) {
        if (1 === b.nodeType && m.hasData(a)) {
            var c, d, e, f = m._data(a),
                g = m._data(b, f),
                h = f.events;
            if (h) {
                delete g.handle, g.events = {};
                for (c in h) {
                    for (d = 0, e = h[c].length; e > d; d++) {
                        m.event.add(b, c, h[c][d])
                    }
                }
            }
            g.data && (g.data = m.extend({}, g.data))
        }
    }

    function Bb(a, b) {
        var c, d, e;
        if (1 === b.nodeType) {
            if (c = b.nodeName.toLowerCase(), !k.noCloneEvent && b[m.expando]) {
                e = m._data(b);
                for (d in e.events) {
                    m.removeEvent(b, d, e.handle)
                }
                b.removeAttribute(m.expando)
            }
            "script" === c && b.text !== a.text ? (xb(b).text = a.text, yb(b)) : "object" === c ? (b.parentNode && (b.outerHTML = a.outerHTML), k.html5Clone && a.innerHTML && !m.trim(b.innerHTML) && (b.innerHTML = a.innerHTML)) : "input" === c && W.test(a.type) ? (b.defaultChecked = b.checked = a.checked, b.value !== a.value && (b.value = a.value)) : "option" === c ? b.defaultSelected = b.selected = a.defaultSelected : ("input" === c || "textarea" === c) && (b.defaultValue = a.defaultValue)
        }
    }
    m.extend({
        clone: function(a, b, c) {
            var d, e, f, g, h, i = m.contains(a.ownerDocument, a);
            if (k.html5Clone || m.isXMLDoc(a) || !gb.test("<" + a.nodeName + ">") ? f = a.cloneNode(!0) : (tb.innerHTML = a.outerHTML, tb.removeChild(f = tb.firstChild)), !(k.noCloneEvent && k.noCloneChecked || 1 !== a.nodeType && 11 !== a.nodeType || m.isXMLDoc(a))) {
                for (d = ub(f), h = ub(a), g = 0; null != (e = h[g]);
                    ++g) {
                    d[g] && Bb(e, d[g])
                }
            }
            if (b) {
                if (c) {
                    for (h = h || ub(a), d = d || ub(f), g = 0; null != (e = h[g]); g++) {
                        Ab(e, d[g])
                    }
                } else {
                    Ab(a, f)
                }
            }
            return d = ub(f, "script"), d.length > 0 && zb(d, !i && ub(a, "script")), d = h = e = null, f
        },
        buildFragment: function(a, b, c, d) {
            for (var e, f, g, h, i, j, l, n = a.length, o = db(b), p = [], q = 0; n > q; q++) {
                if (f = a[q], f || 0 === f) {
                    if ("object" === m.type(f)) {
                        m.merge(p, f.nodeType ? [f] : f)
                    } else {
                        if (lb.test(f)) {
                            h = h || o.appendChild(b.createElement("div")), i = (jb.exec(f) || ["", ""])[1].toLowerCase(), l = rb[i] || rb._default, h.innerHTML = l[1] + f.replace(ib, "<$1></$2>") + l[2], e = l[0];
                            while (e--) {
                                h = h.lastChild
                            }
                            if (!k.leadingWhitespace && hb.test(f) && p.push(b.createTextNode(hb.exec(f)[0])), !k.tbody) {
                                f = "table" !== i || kb.test(f) ? "<table>" !== l[1] || kb.test(f) ? 0 : h : h.firstChild, e = f && f.childNodes.length;
                                while (e--) {
                                    m.nodeName(j = f.childNodes[e], "tbody") && !j.childNodes.length && f.removeChild(j)
                                }
                            }
                            m.merge(p, h.childNodes), h.textContent = "";
                            while (h.firstChild) {
                                h.removeChild(h.firstChild)
                            }
                            h = o.lastChild
                        } else {
                            p.push(b.createTextNode(f))
                        }
                    }
                }
            }
            h && o.removeChild(h), k.appendChecked || m.grep(ub(p, "input"), vb), q = 0;
            while (f = p[q++]) {
                if ((!d || -1 === m.inArray(f, d)) && (g = m.contains(f.ownerDocument, f), h = ub(o.appendChild(f), "script"), g && zb(h), c)) {
                    e = 0;
                    while (f = h[e++]) {
                        ob.test(f.type || "") && c.push(f)
                    }
                }
            }
            return h = null, o
        },
        cleanData: function(a, b) {
            for (var d, e, f, g, h = 0, i = m.expando, j = m.cache, l = k.deleteExpando, n = m.event.special; null != (d = a[h]); h++) {
                if ((b || m.acceptData(d)) && (f = d[i], g = f && j[f])) {
                    if (g.events) {
                        for (e in g.events) {
                            n[e] ? m.event.remove(d, e) : m.removeEvent(d, e, g.handle)
                        }
                    }
                    j[f] && (delete j[f], l ? delete d[i] : typeof d.removeAttribute !== K ? d.removeAttribute(i) : d[i] = null, c.push(f))
                }
            }
        }
    }), m.fn.extend({
        text: function(a) {
            return V(this, function(a) {
                return void 0 === a ? m.text(this) : this.empty().append((this[0] && this[0].ownerDocument || y).createTextNode(a))
            }, null, a, arguments.length)
        },
        append: function() {
            return this.domManip(arguments, function(a) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var b = wb(this, a);
                    b.appendChild(a)
                }
            })
        },
        prepend: function() {
            return this.domManip(arguments, function(a) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var b = wb(this, a);
                    b.insertBefore(a, b.firstChild)
                }
            })
        },
        before: function() {
            return this.domManip(arguments, function(a) {
                this.parentNode && this.parentNode.insertBefore(a, this)
            })
        },
        after: function() {
            return this.domManip(arguments, function(a) {
                this.parentNode && this.parentNode.insertBefore(a, this.nextSibling)
            })
        },
        remove: function(a, b) {
            for (var c, d = a ? m.filter(a, this) : this, e = 0; null != (c = d[e]); e++) {
                b || 1 !== c.nodeType || m.cleanData(ub(c)), c.parentNode && (b && m.contains(c.ownerDocument, c) && zb(ub(c, "script")), c.parentNode.removeChild(c))
            }
            return this
        },
        empty: function() {
            for (var a, b = 0; null != (a = this[b]); b++) {
                1 === a.nodeType && m.cleanData(ub(a, !1));
                while (a.firstChild) {
                    a.removeChild(a.firstChild)
                }
                a.options && m.nodeName(a, "select") && (a.options.length = 0)
            }
            return this
        },
        clone: function(a, b) {
            return a = null == a ? !1 : a, b = null == b ? a : b, this.map(function() {
                return m.clone(this, a, b)
            })
        },
        html: function(a) {
            return V(this, function(a) {
                var b = this[0] || {},
                    c = 0,
                    d = this.length;
                if (void 0 === a) {
                    return 1 === b.nodeType ? b.innerHTML.replace(fb, "") : void 0
                }
                if (!("string" != typeof a || mb.test(a) || !k.htmlSerialize && gb.test(a) || !k.leadingWhitespace && hb.test(a) || rb[(jb.exec(a) || ["", ""])[1].toLowerCase()])) {
                    a = a.replace(ib, "<$1></$2>");
                    try {
                        for (; d > c; c++) {
                            b = this[c] || {}, 1 === b.nodeType && (m.cleanData(ub(b, !1)), b.innerHTML = a)
                        }
                        b = 0
                    } catch (e) {}
                }
                b && this.empty().append(a)
            }, null, a, arguments.length)
        },
        replaceWith: function() {
            var a = arguments[0];
            return this.domManip(arguments, function(b) {
                a = this.parentNode, m.cleanData(ub(this)), a && a.replaceChild(b, this)
            }), a && (a.length || a.nodeType) ? this : this.remove()
        },
        detach: function(a) {
            return this.remove(a, !0)
        },
        domManip: function(a, b) {
            a = e.apply([], a);
            var c, d, f, g, h, i, j = 0,
                l = this.length,
                n = this,
                o = l - 1,
                p = a[0],
                q = m.isFunction(p);
            if (q || l > 1 && "string" == typeof p && !k.checkClone && nb.test(p)) {
                return this.each(function(c) {
                    var d = n.eq(c);
                    q && (a[0] = p.call(this, c, d.html())), d.domManip(a, b)
                })
            }
            if (l && (i = m.buildFragment(a, this[0].ownerDocument, !1, this), c = i.firstChild, 1 === i.childNodes.length && (i = c), c)) {
                for (g = m.map(ub(i, "script"), xb), f = g.length; l > j; j++) {
                    d = i, j !== o && (d = m.clone(d, !0, !0), f && m.merge(g, ub(d, "script"))), b.call(this[j], d, j)
                }
                if (f) {
                    for (h = g[g.length - 1].ownerDocument, m.map(g, yb), j = 0; f > j; j++) {
                        d = g[j], ob.test(d.type || "") && !m._data(d, "globalEval") && m.contains(h, d) && (d.src ? m._evalUrl && m._evalUrl(d.src) : m.globalEval((d.text || d.textContent || d.innerHTML || "").replace(qb, "")))
                    }
                }
                i = c = null
            }
            return this
        }
    }), m.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(a, b) {
        m.fn[a] = function(a) {
            for (var c, d = 0, e = [], g = m(a), h = g.length - 1; h >= d; d++) {
                c = d === h ? this : this.clone(!0), m(g[d])[b](c), f.apply(e, c.get())
            }
            return this.pushStack(e)
        }
    });
    var Cb, Db = {};

    function Eb(b, c) {
        var d, e = m(c.createElement(b)).appendTo(c.body),
            f = a.getDefaultComputedStyle && (d = a.getDefaultComputedStyle(e[0])) ? d.display : m.css(e[0], "display");
        return e.detach(), f
    }

    function Fb(a) {
        var b = y,
            c = Db[a];
        return c || (c = Eb(a, b), "none" !== c && c || (Cb = (Cb || m("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement), b = (Cb[0].contentWindow || Cb[0].contentDocument).document, b.write(), b.close(), c = Eb(a, b), Cb.detach()), Db[a] = c), c
    }! function() {
        var a;
        k.shrinkWrapBlocks = function() {
            if (null != a) {
                return a
            }
            a = !1;
            var b, c, d;
            return c = y.getElementsByTagName("body")[0], c && c.style ? (b = y.createElement("div"), d = y.createElement("div"), d.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px", c.appendChild(d).appendChild(b), typeof b.style.zoom !== K && (b.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1", b.appendChild(y.createElement("div")).style.width = "5px", a = 3 !== b.offsetWidth), c.removeChild(d), a) : void 0
        }
    }();
    var Gb = /^margin/,
        Hb = new RegExp("^(" + S + ")(?!px)[a-z%]+$", "i"),
        Ib, Jb, Kb = /^(top|right|bottom|left)$/;
    a.getComputedStyle ? (Ib = function(b) {
        return b.ownerDocument.defaultView.opener ? b.ownerDocument.defaultView.getComputedStyle(b, null) : a.getComputedStyle(b, null)
    }, Jb = function(a, b, c) {
        var d, e, f, g, h = a.style;
        return c = c || Ib(a), g = c ? c.getPropertyValue(b) || c[b] : void 0, c && ("" !== g || m.contains(a.ownerDocument, a) || (g = m.style(a, b)), Hb.test(g) && Gb.test(b) && (d = h.width, e = h.minWidth, f = h.maxWidth, h.minWidth = h.maxWidth = h.width = g, g = c.width, h.width = d, h.minWidth = e, h.maxWidth = f)), void 0 === g ? g : g + ""
    }) : y.documentElement.currentStyle && (Ib = function(a) {
        return a.currentStyle
    }, Jb = function(a, b, c) {
        var d, e, f, g, h = a.style;
        return c = c || Ib(a), g = c ? c[b] : void 0, null == g && h && h[b] && (g = h[b]), Hb.test(g) && !Kb.test(b) && (d = h.left, e = a.runtimeStyle, f = e && e.left, f && (e.left = a.currentStyle.left), h.left = "fontSize" === b ? "1em" : g, g = h.pixelLeft + "px", h.left = d, f && (e.left = f)), void 0 === g ? g : g + "" || "auto"
    });

    function Lb(a, b) {
        return {
            get: function() {
                var c = a();
                if (null != c) {
                    return c ? void delete this.get : (this.get = b).apply(this, arguments)
                }
            }
        }
    }! function() {
        var b, c, d, e, f, g, h;
        if (b = y.createElement("div"), b.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", d = b.getElementsByTagName("a")[0], c = d && d.style) {
            c.cssText = "float:left;opacity:.5", k.opacity = "0.5" === c.opacity, k.cssFloat = !!c.cssFloat, b.style.backgroundClip = "content-box", b.cloneNode(!0).style.backgroundClip = "", k.clearCloneStyle = "content-box" === b.style.backgroundClip, k.boxSizing = "" === c.boxSizing || "" === c.MozBoxSizing || "" === c.WebkitBoxSizing, m.extend(k, {
                reliableHiddenOffsets: function() {
                    return null == g && i(), g
                },
                boxSizingReliable: function() {
                    return null == f && i(), f
                },
                pixelPosition: function() {
                    return null == e && i(), e
                },
                reliableMarginRight: function() {
                    return null == h && i(), h
                }
            });

            function i() {
                var b, c, d, i;
                c = y.getElementsByTagName("body")[0], c && c.style && (b = y.createElement("div"), d = y.createElement("div"), d.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px", c.appendChild(d).appendChild(b), b.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute", e = f = !1, h = !0, a.getComputedStyle && (e = "1%" !== (a.getComputedStyle(b, null) || {}).top, f = "4px" === (a.getComputedStyle(b, null) || {
                    width: "4px"
                }).width, i = b.appendChild(y.createElement("div")), i.style.cssText = b.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0", i.style.marginRight = i.style.width = "0", b.style.width = "1px", h = !parseFloat((a.getComputedStyle(i, null) || {}).marginRight), b.removeChild(i)), b.innerHTML = "<table><tr><td></td><td>t</td></tr></table>", i = b.getElementsByTagName("td"), i[0].style.cssText = "margin:0;border:0;padding:0;display:none", g = 0 === i[0].offsetHeight, g && (i[0].style.display = "", i[1].style.display = "none", g = 0 === i[0].offsetHeight), c.removeChild(d))
            }
        }
    }(), m.swap = function(a, b, c, d) {
        var e, f, g = {};
        for (f in b) {
            g[f] = a.style[f], a.style[f] = b[f]
        }
        e = c.apply(a, d || []);
        for (f in b) {
            a.style[f] = g[f]
        }
        return e
    };
    var Mb = /alpha\([^)]*\)/i,
        Nb = /opacity\s*=\s*([^)]*)/,
        Ob = /^(none|table(?!-c[ea]).+)/,
        Pb = new RegExp("^(" + S + ")(.*)$", "i"),
        Qb = new RegExp("^([+-])=(" + S + ")", "i"),
        Rb = {
            position: "absolute",
            visibility: "hidden",
            display: "block"
        },
        Sb = {
            letterSpacing: "0",
            fontWeight: "400"
        },
        Tb = ["Webkit", "O", "Moz", "ms"];

    function Ub(a, b) {
        if (b in a) {
            return b
        }
        var c = b.charAt(0).toUpperCase() + b.slice(1),
            d = b,
            e = Tb.length;
        while (e--) {
            if (b = Tb[e] + c, b in a) {
                return b
            }
        }
        return d
    }

    function Vb(a, b) {
        for (var c, d, e, f = [], g = 0, h = a.length; h > g; g++) {
            d = a[g], d.style && (f[g] = m._data(d, "olddisplay"), c = d.style.display, b ? (f[g] || "none" !== c || (d.style.display = ""), "" === d.style.display && U(d) && (f[g] = m._data(d, "olddisplay", Fb(d.nodeName)))) : (e = U(d), (c && "none" !== c || !e) && m._data(d, "olddisplay", e ? c : m.css(d, "display"))))
        }
        for (g = 0; h > g; g++) {
            d = a[g], d.style && (b && "none" !== d.style.display && "" !== d.style.display || (d.style.display = b ? f[g] || "" : "none"))
        }
        return a
    }

    function Wb(a, b, c) {
        var d = Pb.exec(b);
        return d ? Math.max(0, d[1] - (c || 0)) + (d[2] || "px") : b
    }

    function Xb(a, b, c, d, e) {
        for (var f = c === (d ? "border" : "content") ? 4 : "width" === b ? 1 : 0, g = 0; 4 > f; f += 2) {
            "margin" === c && (g += m.css(a, c + T[f], !0, e)), d ? ("content" === c && (g -= m.css(a, "padding" + T[f], !0, e)), "margin" !== c && (g -= m.css(a, "border" + T[f] + "Width", !0, e))) : (g += m.css(a, "padding" + T[f], !0, e), "padding" !== c && (g += m.css(a, "border" + T[f] + "Width", !0, e)))
        }
        return g
    }

    function Yb(a, b, c) {
        var d = !0,
            e = "width" === b ? a.offsetWidth : a.offsetHeight,
            f = Ib(a),
            g = k.boxSizing && "border-box" === m.css(a, "boxSizing", !1, f);
        if (0 >= e || null == e) {
            if (e = Jb(a, b, f), (0 > e || null == e) && (e = a.style[b]), Hb.test(e)) {
                return e
            }
            d = g && (k.boxSizingReliable() || e === a.style[b]), e = parseFloat(e) || 0
        }
        return e + Xb(a, b, c || (g ? "border" : "content"), d, f) + "px"
    }
    m.extend({
        cssHooks: {
            opacity: {
                get: function(a, b) {
                    if (b) {
                        var c = Jb(a, "opacity");
                        return "" === c ? "1" : c
                    }
                }
            }
        },
        cssNumber: {
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            "float": k.cssFloat ? "cssFloat" : "styleFloat"
        },
        style: function(a, b, c, d) {
            if (a && 3 !== a.nodeType && 8 !== a.nodeType && a.style) {
                var e, f, g, h = m.camelCase(b),
                    i = a.style;
                if (b = m.cssProps[h] || (m.cssProps[h] = Ub(i, h)), g = m.cssHooks[b] || m.cssHooks[h], void 0 === c) {
                    return g && "get" in g && void 0 !== (e = g.get(a, !1, d)) ? e : i[b]
                }
                if (f = typeof c, "string" === f && (e = Qb.exec(c)) && (c = (e[1] + 1) * e[2] + parseFloat(m.css(a, b)), f = "number"), null != c && c === c && ("number" !== f || m.cssNumber[h] || (c += "px"), k.clearCloneStyle || "" !== c || 0 !== b.indexOf("background") || (i[b] = "inherit"), !(g && "set" in g && void 0 === (c = g.set(a, c, d))))) {
                    try {
                        i[b] = c
                    } catch (j) {}
                }
            }
        },
        css: function(a, b, c, d) {
            var e, f, g, h = m.camelCase(b);
            return b = m.cssProps[h] || (m.cssProps[h] = Ub(a.style, h)), g = m.cssHooks[b] || m.cssHooks[h], g && "get" in g && (f = g.get(a, !0, c)), void 0 === f && (f = Jb(a, b, d)), "normal" === f && b in Sb && (f = Sb[b]), "" === c || c ? (e = parseFloat(f), c === !0 || m.isNumeric(e) ? e || 0 : f) : f
        }
    }), m.each(["height", "width"], function(a, b) {
        m.cssHooks[b] = {
            get: function(a, c, d) {
                return c ? Ob.test(m.css(a, "display")) && 0 === a.offsetWidth ? m.swap(a, Rb, function() {
                    return Yb(a, b, d)
                }) : Yb(a, b, d) : void 0
            },
            set: function(a, c, d) {
                var e = d && Ib(a);
                return Wb(a, c, d ? Xb(a, b, d, k.boxSizing && "border-box" === m.css(a, "boxSizing", !1, e), e) : 0)
            }
        }
    }), k.opacity || (m.cssHooks.opacity = {
        get: function(a, b) {
            return Nb.test((b && a.currentStyle ? a.currentStyle.filter : a.style.filter) || "") ? 0.01 * parseFloat(RegExp.$1) + "" : b ? "1" : ""
        },
        set: function(a, b) {
            var c = a.style,
                d = a.currentStyle,
                e = m.isNumeric(b) ? "alpha(opacity=" + 100 * b + ")" : "",
                f = d && d.filter || c.filter || "";
            c.zoom = 1, (b >= 1 || "" === b) && "" === m.trim(f.replace(Mb, "")) && c.removeAttribute && (c.removeAttribute("filter"), "" === b || d && !d.filter) || (c.filter = Mb.test(f) ? f.replace(Mb, e) : f + " " + e)
        }
    }), m.cssHooks.marginRight = Lb(k.reliableMarginRight, function(a, b) {
        return b ? m.swap(a, {
            display: "inline-block"
        }, Jb, [a, "marginRight"]) : void 0
    }), m.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(a, b) {
        m.cssHooks[a + b] = {
            expand: function(c) {
                for (var d = 0, e = {}, f = "string" == typeof c ? c.split(" ") : [c]; 4 > d; d++) {
                    e[a + T[d] + b] = f[d] || f[d - 2] || f[0]
                }
                return e
            }
        }, Gb.test(a) || (m.cssHooks[a + b].set = Wb)
    }), m.fn.extend({
        css: function(a, b) {
            return V(this, function(a, b, c) {
                var d, e, f = {},
                    g = 0;
                if (m.isArray(b)) {
                    for (d = Ib(a), e = b.length; e > g; g++) {
                        f[b[g]] = m.css(a, b[g], !1, d)
                    }
                    return f
                }
                return void 0 !== c ? m.style(a, b, c) : m.css(a, b)
            }, a, b, arguments.length > 1)
        },
        show: function() {
            return Vb(this, !0)
        },
        hide: function() {
            return Vb(this)
        },
        toggle: function(a) {
            return "boolean" == typeof a ? a ? this.show() : this.hide() : this.each(function() {
                U(this) ? m(this).show() : m(this).hide()
            })
        }
    });

    function Zb(a, b, c, d, e) {
        return new Zb.prototype.init(a, b, c, d, e)
    }
    m.Tween = Zb, Zb.prototype = {
        constructor: Zb,
        init: function(a, b, c, d, e, f) {
            this.elem = a, this.prop = c, this.easing = e || "swing", this.options = b, this.start = this.now = this.cur(), this.end = d, this.unit = f || (m.cssNumber[c] ? "" : "px")
        },
        cur: function() {
            var a = Zb.propHooks[this.prop];
            return a && a.get ? a.get(this) : Zb.propHooks._default.get(this)
        },
        run: function(a) {
            var b, c = Zb.propHooks[this.prop];
            return this.pos = b = this.options.duration ? m.easing[this.easing](a, this.options.duration * a, 0, 1, this.options.duration) : a, this.now = (this.end - this.start) * b + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), c && c.set ? c.set(this) : Zb.propHooks._default.set(this), this
        }
    }, Zb.prototype.init.prototype = Zb.prototype, Zb.propHooks = {
        _default: {
            get: function(a) {
                var b;
                return null == a.elem[a.prop] || a.elem.style && null != a.elem.style[a.prop] ? (b = m.css(a.elem, a.prop, ""), b && "auto" !== b ? b : 0) : a.elem[a.prop]
            },
            set: function(a) {
                m.fx.step[a.prop] ? m.fx.step[a.prop](a) : a.elem.style && (null != a.elem.style[m.cssProps[a.prop]] || m.cssHooks[a.prop]) ? m.style(a.elem, a.prop, a.now + a.unit) : a.elem[a.prop] = a.now
            }
        }
    }, Zb.propHooks.scrollTop = Zb.propHooks.scrollLeft = {
        set: function(a) {
            a.elem.nodeType && a.elem.parentNode && (a.elem[a.prop] = a.now)
        }
    }, m.easing = {
        linear: function(a) {
            return a
        },
        swing: function(a) {
            return 0.5 - Math.cos(a * Math.PI) / 2
        }
    }, m.fx = Zb.prototype.init, m.fx.step = {};
    var $b, _b, ac = /^(?:toggle|show|hide)$/,
        bc = new RegExp("^(?:([+-])=|)(" + S + ")([a-z%]*)$", "i"),
        cc = /queueHooks$/,
        dc = [ic],
        ec = {
            "*": [function(a, b) {
                var c = this.createTween(a, b),
                    d = c.cur(),
                    e = bc.exec(b),
                    f = e && e[3] || (m.cssNumber[a] ? "" : "px"),
                    g = (m.cssNumber[a] || "px" !== f && +d) && bc.exec(m.css(c.elem, a)),
                    h = 1,
                    i = 20;
                if (g && g[3] !== f) {
                    f = f || g[3], e = e || [], g = +d || 1;
                    do {
                        h = h || ".5", g /= h, m.style(c.elem, a, g + f)
                    } while (h !== (h = c.cur() / d) && 1 !== h && --i)
                }
                return e && (g = c.start = +g || +d || 0, c.unit = f, c.end = e[1] ? g + (e[1] + 1) * e[2] : +e[2]), c
            }]
        };

    function fc() {
        return setTimeout(function() {
            $b = void 0
        }), $b = m.now()
    }

    function gc(a, b) {
        var c, d = {
                height: a
            },
            e = 0;
        for (b = b ? 1 : 0; 4 > e; e += 2 - b) {
            c = T[e], d["margin" + c] = d["padding" + c] = a
        }
        return b && (d.opacity = d.width = a), d
    }

    function hc(a, b, c) {
        for (var d, e = (ec[b] || []).concat(ec["*"]), f = 0, g = e.length; g > f; f++) {
            if (d = e[f].call(c, b, a)) {
                return d
            }
        }
    }

    function ic(a, b, c) {
        var d, e, f, g, h, i, j, l, n = this,
            o = {},
            p = a.style,
            q = a.nodeType && U(a),
            r = m._data(a, "fxshow");
        c.queue || (h = m._queueHooks(a, "fx"), null == h.unqueued && (h.unqueued = 0, i = h.empty.fire, h.empty.fire = function() {
            h.unqueued || i()
        }), h.unqueued++, n.always(function() {
            n.always(function() {
                h.unqueued--, m.queue(a, "fx").length || h.empty.fire()
            })
        })), 1 === a.nodeType && ("height" in b || "width" in b) && (c.overflow = [p.overflow, p.overflowX, p.overflowY], j = m.css(a, "display"), l = "none" === j ? m._data(a, "olddisplay") || Fb(a.nodeName) : j, "inline" === l && "none" === m.css(a, "float") && (k.inlineBlockNeedsLayout && "inline" !== Fb(a.nodeName) ? p.zoom = 1 : p.display = "inline-block")), c.overflow && (p.overflow = "hidden", k.shrinkWrapBlocks() || n.always(function() {
            p.overflow = c.overflow[0], p.overflowX = c.overflow[1], p.overflowY = c.overflow[2]
        }));
        for (d in b) {
            if (e = b[d], ac.exec(e)) {
                if (delete b[d], f = f || "toggle" === e, e === (q ? "hide" : "show")) {
                    if ("show" !== e || !r || void 0 === r[d]) {
                        continue
                    }
                    q = !0
                }
                o[d] = r && r[d] || m.style(a, d)
            } else {
                j = void 0
            }
        }
        if (m.isEmptyObject(o)) {
            "inline" === ("none" === j ? Fb(a.nodeName) : j) && (p.display = j)
        } else {
            r ? "hidden" in r && (q = r.hidden) : r = m._data(a, "fxshow", {}), f && (r.hidden = !q), q ? m(a).show() : n.done(function() {
                m(a).hide()
            }), n.done(function() {
                var b;
                m._removeData(a, "fxshow");
                for (b in o) {
                    m.style(a, b, o[b])
                }
            });
            for (d in o) {
                g = hc(q ? r[d] : 0, d, n), d in r || (r[d] = g.start, q && (g.end = g.start, g.start = "width" === d || "height" === d ? 1 : 0))
            }
        }
    }

    function jc(a, b) {
        var c, d, e, f, g;
        for (c in a) {
            if (d = m.camelCase(c), e = b[d], f = a[c], m.isArray(f) && (e = f[1], f = a[c] = f[0]), c !== d && (a[d] = f, delete a[c]), g = m.cssHooks[d], g && "expand" in g) {
                f = g.expand(f), delete a[d];
                for (c in f) {
                    c in a || (a[c] = f[c], b[c] = e)
                }
            } else {
                b[d] = e
            }
        }
    }

    function kc(a, b, c) {
        var d, e, f = 0,
            g = dc.length,
            h = m.Deferred().always(function() {
                delete i.elem
            }),
            i = function() {
                if (e) {
                    return !1
                }
                for (var b = $b || fc(), c = Math.max(0, j.startTime + j.duration - b), d = c / j.duration || 0, f = 1 - d, g = 0, i = j.tweens.length; i > g; g++) {
                    j.tweens[g].run(f)
                }
                return h.notifyWith(a, [j, f, c]), 1 > f && i ? c : (h.resolveWith(a, [j]), !1)
            },
            j = h.promise({
                elem: a,
                props: m.extend({}, b),
                opts: m.extend(!0, {
                    specialEasing: {}
                }, c),
                originalProperties: b,
                originalOptions: c,
                startTime: $b || fc(),
                duration: c.duration,
                tweens: [],
                createTween: function(b, c) {
                    var d = m.Tween(a, j.opts, b, c, j.opts.specialEasing[b] || j.opts.easing);
                    return j.tweens.push(d), d
                },
                stop: function(b) {
                    var c = 0,
                        d = b ? j.tweens.length : 0;
                    if (e) {
                        return this
                    }
                    for (e = !0; d > c; c++) {
                        j.tweens[c].run(1)
                    }
                    return b ? h.resolveWith(a, [j, b]) : h.rejectWith(a, [j, b]), this
                }
            }),
            k = j.props;
        for (jc(k, j.opts.specialEasing); g > f; f++) {
            if (d = dc[f].call(j, a, k, j.opts)) {
                return d
            }
        }
        return m.map(k, hc, j), m.isFunction(j.opts.start) && j.opts.start.call(a, j), m.fx.timer(m.extend(i, {
            elem: a,
            anim: j,
            queue: j.opts.queue
        })), j.progress(j.opts.progress).done(j.opts.done, j.opts.complete).fail(j.opts.fail).always(j.opts.always)
    }
    m.Animation = m.extend(kc, {
            tweener: function(a, b) {
                m.isFunction(a) ? (b = a, a = ["*"]) : a = a.split(" ");
                for (var c, d = 0, e = a.length; e > d; d++) {
                    c = a[d], ec[c] = ec[c] || [], ec[c].unshift(b)
                }
            },
            prefilter: function(a, b) {
                b ? dc.unshift(a) : dc.push(a)
            }
        }), m.speed = function(a, b, c) {
            var d = a && "object" == typeof a ? m.extend({}, a) : {
                complete: c || !c && b || m.isFunction(a) && a,
                duration: a,
                easing: c && b || b && !m.isFunction(b) && b
            };
            return d.duration = m.fx.off ? 0 : "number" == typeof d.duration ? d.duration : d.duration in m.fx.speeds ? m.fx.speeds[d.duration] : m.fx.speeds._default, (null == d.queue || d.queue === !0) && (d.queue = "fx"), d.old = d.complete, d.complete = function() {
                m.isFunction(d.old) && d.old.call(this), d.queue && m.dequeue(this, d.queue)
            }, d
        }, m.fn.extend({
            fadeTo: function(a, b, c, d) {
                return this.filter(U).css("opacity", 0).show().end().animate({
                    opacity: b
                }, a, c, d)
            },
            animate: function(a, b, c, d) {
                var e = m.isEmptyObject(a),
                    f = m.speed(b, c, d),
                    g = function() {
                        var b = kc(this, m.extend({}, a), f);
                        (e || m._data(this, "finish")) && b.stop(!0)
                    };
                return g.finish = g, e || f.queue === !1 ? this.each(g) : this.queue(f.queue, g)
            },
            stop: function(a, b, c) {
                var d = function(a) {
                    var b = a.stop;
                    delete a.stop, b(c)
                };
                return "string" != typeof a && (c = b, b = a, a = void 0), b && a !== !1 && this.queue(a || "fx", []), this.each(function() {
                    var b = !0,
                        e = null != a && a + "queueHooks",
                        f = m.timers,
                        g = m._data(this);
                    if (e) {
                        g[e] && g[e].stop && d(g[e])
                    } else {
                        for (e in g) {
                            g[e] && g[e].stop && cc.test(e) && d(g[e])
                        }
                    }
                    for (e = f.length; e--;) {
                        f[e].elem !== this || null != a && f[e].queue !== a || (f[e].anim.stop(c), b = !1, f.splice(e, 1))
                    }(b || !c) && m.dequeue(this, a)
                })
            },
            finish: function(a) {
                return a !== !1 && (a = a || "fx"), this.each(function() {
                    var b, c = m._data(this),
                        d = c[a + "queue"],
                        e = c[a + "queueHooks"],
                        f = m.timers,
                        g = d ? d.length : 0;
                    for (c.finish = !0, m.queue(this, a, []), e && e.stop && e.stop.call(this, !0), b = f.length; b--;) {
                        f[b].elem === this && f[b].queue === a && (f[b].anim.stop(!0), f.splice(b, 1))
                    }
                    for (b = 0; g > b; b++) {
                        d[b] && d[b].finish && d[b].finish.call(this)
                    }
                    delete c.finish
                })
            }
        }), m.each(["toggle", "show", "hide"], function(a, b) {
            var c = m.fn[b];
            m.fn[b] = function(a, d, e) {
                return null == a || "boolean" == typeof a ? c.apply(this, arguments) : this.animate(gc(b, !0), a, d, e)
            }
        }), m.each({
            slideDown: gc("show"),
            slideUp: gc("hide"),
            slideToggle: gc("toggle"),
            fadeIn: {
                opacity: "show"
            },
            fadeOut: {
                opacity: "hide"
            },
            fadeToggle: {
                opacity: "toggle"
            }
        }, function(a, b) {
            m.fn[a] = function(a, c, d) {
                return this.animate(b, a, c, d)
            }
        }), m.timers = [], m.fx.tick = function() {
            var a, b = m.timers,
                c = 0;
            for ($b = m.now(); c < b.length; c++) {
                a = b[c], a() || b[c] !== a || b.splice(c--, 1)
            }
            b.length || m.fx.stop(), $b = void 0
        }, m.fx.timer = function(a) {
            m.timers.push(a), a() ? m.fx.start() : m.timers.pop()
        }, m.fx.interval = 13, m.fx.start = function() {
            _b || (_b = setInterval(m.fx.tick, m.fx.interval))
        }, m.fx.stop = function() {
            clearInterval(_b), _b = null
        }, m.fx.speeds = {
            slow: 600,
            fast: 200,
            _default: 400
        }, m.fn.delay = function(a, b) {
            return a = m.fx ? m.fx.speeds[a] || a : a, b = b || "fx", this.queue(b, function(b, c) {
                var d = setTimeout(b, a);
                c.stop = function() {
                    clearTimeout(d)
                }
            })
        },
        function() {
            var a, b, c, d, e;
            b = y.createElement("div"), b.setAttribute("className", "t"), b.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", d = b.getElementsByTagName("a")[0], c = y.createElement("select"), e = c.appendChild(y.createElement("option")), a = b.getElementsByTagName("input")[0], d.style.cssText = "top:1px", k.getSetAttribute = "t" !== b.className, k.style = /top/.test(d.getAttribute("style")), k.hrefNormalized = "/a" === d.getAttribute("href"), k.checkOn = !!a.value, k.optSelected = e.selected, k.enctype = !!y.createElement("form").enctype, c.disabled = !0, k.optDisabled = !e.disabled, a = y.createElement("input"), a.setAttribute("value", ""), k.input = "" === a.getAttribute("value"), a.value = "t", a.setAttribute("type", "radio"), k.radioValue = "t" === a.value
        }();
    var lc = /\r/g;
    m.fn.extend({
        val: function(a) {
            var b, c, d, e = this[0];
            if (arguments.length) {
                return d = m.isFunction(a), this.each(function(c) {
                    var e;
                    1 === this.nodeType && (e = d ? a.call(this, c, m(this).val()) : a, null == e ? e = "" : "number" == typeof e ? e += "" : m.isArray(e) && (e = m.map(e, function(a) {
                        return null == a ? "" : a + ""
                    })), b = m.valHooks[this.type] || m.valHooks[this.nodeName.toLowerCase()], b && "set" in b && void 0 !== b.set(this, e, "value") || (this.value = e))
                })
            }
            if (e) {
                return b = m.valHooks[e.type] || m.valHooks[e.nodeName.toLowerCase()], b && "get" in b && void 0 !== (c = b.get(e, "value")) ? c : (c = e.value, "string" == typeof c ? c.replace(lc, "") : null == c ? "" : c)
            }
        }
    }), m.extend({
        valHooks: {
            option: {
                get: function(a) {
                    var b = m.find.attr(a, "value");
                    return null != b ? b : m.trim(m.text(a))
                }
            },
            select: {
                get: function(a) {
                    for (var b, c, d = a.options, e = a.selectedIndex, f = "select-one" === a.type || 0 > e, g = f ? null : [], h = f ? e + 1 : d.length, i = 0 > e ? h : f ? e : 0; h > i; i++) {
                        if (c = d[i], !(!c.selected && i !== e || (k.optDisabled ? c.disabled : null !== c.getAttribute("disabled")) || c.parentNode.disabled && m.nodeName(c.parentNode, "optgroup"))) {
                            if (b = m(c).val(), f) {
                                return b
                            }
                            g.push(b)
                        }
                    }
                    return g
                },
                set: function(a, b) {
                    var c, d, e = a.options,
                        f = m.makeArray(b),
                        g = e.length;
                    while (g--) {
                        if (d = e[g], m.inArray(m.valHooks.option.get(d), f) >= 0) {
                            try {
                                d.selected = c = !0
                            } catch (h) {
                                d.scrollHeight
                            }
                        } else {
                            d.selected = !1
                        }
                    }
                    return c || (a.selectedIndex = -1), e
                }
            }
        }
    }), m.each(["radio", "checkbox"], function() {
        m.valHooks[this] = {
            set: function(a, b) {
                return m.isArray(b) ? a.checked = m.inArray(m(a).val(), b) >= 0 : void 0
            }
        }, k.checkOn || (m.valHooks[this].get = function(a) {
            return null === a.getAttribute("value") ? "on" : a.value
        })
    });
    var mc, nc, oc = m.expr.attrHandle,
        pc = /^(?:checked|selected)$/i,
        qc = k.getSetAttribute,
        rc = k.input;
    m.fn.extend({
        attr: function(a, b) {
            return V(this, m.attr, a, b, arguments.length > 1)
        },
        removeAttr: function(a) {
            return this.each(function() {
                m.removeAttr(this, a)
            })
        }
    }), m.extend({
        attr: function(a, b, c) {
            var d, e, f = a.nodeType;
            if (a && 3 !== f && 8 !== f && 2 !== f) {
                return typeof a.getAttribute === K ? m.prop(a, b, c) : (1 === f && m.isXMLDoc(a) || (b = b.toLowerCase(), d = m.attrHooks[b] || (m.expr.match.bool.test(b) ? nc : mc)), void 0 === c ? d && "get" in d && null !== (e = d.get(a, b)) ? e : (e = m.find.attr(a, b), null == e ? void 0 : e) : null !== c ? d && "set" in d && void 0 !== (e = d.set(a, c, b)) ? e : (a.setAttribute(b, c + ""), c) : void m.removeAttr(a, b))
            }
        },
        removeAttr: function(a, b) {
            var c, d, e = 0,
                f = b && b.match(E);
            if (f && 1 === a.nodeType) {
                while (c = f[e++]) {
                    d = m.propFix[c] || c, m.expr.match.bool.test(c) ? rc && qc || !pc.test(c) ? a[d] = !1 : a[m.camelCase("default-" + c)] = a[d] = !1 : m.attr(a, c, ""), a.removeAttribute(qc ? c : d)
                }
            }
        },
        attrHooks: {
            type: {
                set: function(a, b) {
                    if (!k.radioValue && "radio" === b && m.nodeName(a, "input")) {
                        var c = a.value;
                        return a.setAttribute("type", b), c && (a.value = c), b
                    }
                }
            }
        }
    }), nc = {
        set: function(a, b, c) {
            return b === !1 ? m.removeAttr(a, c) : rc && qc || !pc.test(c) ? a.setAttribute(!qc && m.propFix[c] || c, c) : a[m.camelCase("default-" + c)] = a[c] = !0, c
        }
    }, m.each(m.expr.match.bool.source.match(/\w+/g), function(a, b) {
        var c = oc[b] || m.find.attr;
        oc[b] = rc && qc || !pc.test(b) ? function(a, b, d) {
            var e, f;
            return d || (f = oc[b], oc[b] = e, e = null != c(a, b, d) ? b.toLowerCase() : null, oc[b] = f), e
        } : function(a, b, c) {
            return c ? void 0 : a[m.camelCase("default-" + b)] ? b.toLowerCase() : null
        }
    }), rc && qc || (m.attrHooks.value = {
        set: function(a, b, c) {
            return m.nodeName(a, "input") ? void(a.defaultValue = b) : mc && mc.set(a, b, c)
        }
    }), qc || (mc = {
        set: function(a, b, c) {
            var d = a.getAttributeNode(c);
            return d || a.setAttributeNode(d = a.ownerDocument.createAttribute(c)), d.value = b += "", "value" === c || b === a.getAttribute(c) ? b : void 0
        }
    }, oc.id = oc.name = oc.coords = function(a, b, c) {
        var d;
        return c ? void 0 : (d = a.getAttributeNode(b)) && "" !== d.value ? d.value : null
    }, m.valHooks.button = {
        get: function(a, b) {
            var c = a.getAttributeNode(b);
            return c && c.specified ? c.value : void 0
        },
        set: mc.set
    }, m.attrHooks.contenteditable = {
        set: function(a, b, c) {
            mc.set(a, "" === b ? !1 : b, c)
        }
    }, m.each(["width", "height"], function(a, b) {
        m.attrHooks[b] = {
            set: function(a, c) {
                return "" === c ? (a.setAttribute(b, "auto"), c) : void 0
            }
        }
    })), k.style || (m.attrHooks.style = {
        get: function(a) {
            return a.style.cssText || void 0
        },
        set: function(a, b) {
            return a.style.cssText = b + ""
        }
    });
    var sc = /^(?:input|select|textarea|button|object)$/i,
        tc = /^(?:a|area)$/i;
    m.fn.extend({
        prop: function(a, b) {
            return V(this, m.prop, a, b, arguments.length > 1)
        },
        removeProp: function(a) {
            return a = m.propFix[a] || a, this.each(function() {
                try {
                    this[a] = void 0, delete this[a]
                } catch (b) {}
            })
        }
    }), m.extend({
        propFix: {
            "for": "htmlFor",
            "class": "className"
        },
        prop: function(a, b, c) {
            var d, e, f, g = a.nodeType;
            if (a && 3 !== g && 8 !== g && 2 !== g) {
                return f = 1 !== g || !m.isXMLDoc(a), f && (b = m.propFix[b] || b, e = m.propHooks[b]), void 0 !== c ? e && "set" in e && void 0 !== (d = e.set(a, c, b)) ? d : a[b] = c : e && "get" in e && null !== (d = e.get(a, b)) ? d : a[b]
            }
        },
        propHooks: {
            tabIndex: {
                get: function(a) {
                    var b = m.find.attr(a, "tabindex");
                    return b ? parseInt(b, 10) : sc.test(a.nodeName) || tc.test(a.nodeName) && a.href ? 0 : -1
                }
            }
        }
    }), k.hrefNormalized || m.each(["href", "src"], function(a, b) {
        m.propHooks[b] = {
            get: function(a) {
                return a.getAttribute(b, 4)
            }
        }
    }), k.optSelected || (m.propHooks.selected = {
        get: function(a) {
            var b = a.parentNode;
            return b && (b.selectedIndex, b.parentNode && b.parentNode.selectedIndex), null
        }
    }), m.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
        m.propFix[this.toLowerCase()] = this
    }), k.enctype || (m.propFix.enctype = "encoding");
    var uc = /[\t\r\n\f]/g;
    m.fn.extend({
        addClass: function(a) {
            var b, c, d, e, f, g, h = 0,
                i = this.length,
                j = "string" == typeof a && a;
            if (m.isFunction(a)) {
                return this.each(function(b) {
                    m(this).addClass(a.call(this, b, this.className))
                })
            }
            if (j) {
                for (b = (a || "").match(E) || []; i > h; h++) {
                    if (c = this[h], d = 1 === c.nodeType && (c.className ? (" " + c.className + " ").replace(uc, " ") : " ")) {
                        f = 0;
                        while (e = b[f++]) {
                            d.indexOf(" " + e + " ") < 0 && (d += e + " ")
                        }
                        g = m.trim(d), c.className !== g && (c.className = g)
                    }
                }
            }
            return this
        },
        removeClass: function(a) {
            var b, c, d, e, f, g, h = 0,
                i = this.length,
                j = 0 === arguments.length || "string" == typeof a && a;
            if (m.isFunction(a)) {
                return this.each(function(b) {
                    m(this).removeClass(a.call(this, b, this.className))
                })
            }
            if (j) {
                for (b = (a || "").match(E) || []; i > h; h++) {
                    if (c = this[h], d = 1 === c.nodeType && (c.className ? (" " + c.className + " ").replace(uc, " ") : "")) {
                        f = 0;
                        while (e = b[f++]) {
                            while (d.indexOf(" " + e + " ") >= 0) {
                                d = d.replace(" " + e + " ", " ")
                            }
                        }
                        g = a ? m.trim(d) : "", c.className !== g && (c.className = g)
                    }
                }
            }
            return this
        },
        toggleClass: function(a, b) {
            var c = typeof a;
            return "boolean" == typeof b && "string" === c ? b ? this.addClass(a) : this.removeClass(a) : this.each(m.isFunction(a) ? function(c) {
                m(this).toggleClass(a.call(this, c, this.className, b), b)
            } : function() {
                if ("string" === c) {
                    var b, d = 0,
                        e = m(this),
                        f = a.match(E) || [];
                    while (b = f[d++]) {
                        e.hasClass(b) ? e.removeClass(b) : e.addClass(b)
                    }
                } else {
                    (c === K || "boolean" === c) && (this.className && m._data(this, "__className__", this.className), this.className = this.className || a === !1 ? "" : m._data(this, "__className__") || "")
                }
            })
        },
        hasClass: function(a) {
            for (var b = " " + a + " ", c = 0, d = this.length; d > c; c++) {
                if (1 === this[c].nodeType && (" " + this[c].className + " ").replace(uc, " ").indexOf(b) >= 0) {
                    return !0
                }
            }
            return !1
        }
    }), m.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function(a, b) {
        m.fn[b] = function(a, c) {
            return arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b)
        }
    }), m.fn.extend({
        hover: function(a, b) {
            return this.mouseenter(a).mouseleave(b || a)
        },
        bind: function(a, b, c) {
            return this.on(a, null, b, c)
        },
        unbind: function(a, b) {
            return this.off(a, null, b)
        },
        delegate: function(a, b, c, d) {
            return this.on(b, a, c, d)
        },
        undelegate: function(a, b, c) {
            return 1 === arguments.length ? this.off(a, "**") : this.off(b, a || "**", c)
        }
    });
    var vc = m.now(),
        wc = /\?/,
        xc = /(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;
    m.parseJSON = function(b) {
        if (a.JSON && a.JSON.parse) {
            return a.JSON.parse(b + "")
        }
        var c, d = null,
            e = m.trim(b + "");
        return e && !m.trim(e.replace(xc, function(a, b, e, f) {
            return c && b && (d = 0), 0 === d ? a : (c = e || b, d += !f - !e, "")
        })) ? Function("return " + e)() : m.error("Invalid JSON: " + b)
    }, m.parseXML = function(b) {
        var c, d;
        if (!b || "string" != typeof b) {
            return null
        }
        try {
            a.DOMParser ? (d = new DOMParser, c = d.parseFromString(b, "text/xml")) : (c = new ActiveXObject("Microsoft.XMLDOM"), c.async = "false", c.loadXML(b))
        } catch (e) {
            c = void 0
        }
        return c && c.documentElement && !c.getElementsByTagName("parsererror").length || m.error("Invalid XML: " + b), c
    };
    var yc, zc, Ac = /#.*$/,
        Bc = /([?&])_=[^&]*/,
        Cc = /^(.*?):[ \t]*([^\r\n]*)\r?$/gm,
        Dc = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
        Ec = /^(?:GET|HEAD)$/,
        Fc = /^\/\//,
        Gc = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,
        Hc = {},
        Ic = {},
        Jc = "*/".concat("*");
    try {
        zc = location.href
    } catch (Kc) {
        zc = y.createElement("a"), zc.href = "", zc = zc.href
    }
    yc = Gc.exec(zc.toLowerCase()) || [];

    function Lc(a) {
        return function(b, c) {
            "string" != typeof b && (c = b, b = "*");
            var d, e = 0,
                f = b.toLowerCase().match(E) || [];
            if (m.isFunction(c)) {
                while (d = f[e++]) {
                    "+" === d.charAt(0) ? (d = d.slice(1) || "*", (a[d] = a[d] || []).unshift(c)) : (a[d] = a[d] || []).push(c)
                }
            }
        }
    }

    function Mc(a, b, c, d) {
        var e = {},
            f = a === Ic;

        function g(h) {
            var i;
            return e[h] = !0, m.each(a[h] || [], function(a, h) {
                var j = h(b, c, d);
                return "string" != typeof j || f || e[j] ? f ? !(i = j) : void 0 : (b.dataTypes.unshift(j), g(j), !1)
            }), i
        }
        return g(b.dataTypes[0]) || !e["*"] && g("*")
    }

    function Nc(a, b) {
        var c, d, e = m.ajaxSettings.flatOptions || {};
        for (d in b) {
            void 0 !== b[d] && ((e[d] ? a : c || (c = {}))[d] = b[d])
        }
        return c && m.extend(!0, a, c), a
    }

    function Oc(a, b, c) {
        var d, e, f, g, h = a.contents,
            i = a.dataTypes;
        while ("*" === i[0]) {
            i.shift(), void 0 === e && (e = a.mimeType || b.getResponseHeader("Content-Type"))
        }
        if (e) {
            for (g in h) {
                if (h[g] && h[g].test(e)) {
                    i.unshift(g);
                    break
                }
            }
        }
        if (i[0] in c) {
            f = i[0]
        } else {
            for (g in c) {
                if (!i[0] || a.converters[g + " " + i[0]]) {
                    f = g;
                    break
                }
                d || (d = g)
            }
            f = f || d
        }
        return f ? (f !== i[0] && i.unshift(f), c[f]) : void 0
    }

    function Pc(a, b, c, d) {
        var e, f, g, h, i, j = {},
            k = a.dataTypes.slice();
        if (k[1]) {
            for (g in a.converters) {
                j[g.toLowerCase()] = a.converters[g]
            }
        }
        f = k.shift();
        while (f) {
            if (a.responseFields[f] && (c[a.responseFields[f]] = b), !i && d && a.dataFilter && (b = a.dataFilter(b, a.dataType)), i = f, f = k.shift()) {
                if ("*" === f) {
                    f = i
                } else {
                    if ("*" !== i && i !== f) {
                        if (g = j[i + " " + f] || j["* " + f], !g) {
                            for (e in j) {
                                if (h = e.split(" "), h[1] === f && (g = j[i + " " + h[0]] || j["* " + h[0]])) {
                                    g === !0 ? g = j[e] : j[e] !== !0 && (f = h[0], k.unshift(h[1]));
                                    break
                                }
                            }
                        }
                        if (g !== !0) {
                            if (g && a["throws"]) {
                                b = g(b)
                            } else {
                                try {
                                    b = g(b)
                                } catch (l) {
                                    return {
                                        state: "parsererror",
                                        error: g ? l : "No conversion from " + i + " to " + f
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        return {
            state: "success",
            data: b
        }
    }
    m.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: zc,
            type: "GET",
            isLocal: Dc.test(yc[1]),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": Jc,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            converters: {
                "* text": String,
                "text html": !0,
                "text json": m.parseJSON,
                "text xml": m.parseXML
            },
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        ajaxSetup: function(a, b) {
            return b ? Nc(Nc(a, m.ajaxSettings), b) : Nc(m.ajaxSettings, a)
        },
        ajaxPrefilter: Lc(Hc),
        ajaxTransport: Lc(Ic),
        ajax: function(a, b) {
            "object" == typeof a && (b = a, a = void 0), b = b || {};
            var c, d, e, f, g, h, i, j, k = m.ajaxSetup({}, b),
                l = k.context || k,
                n = k.context && (l.nodeType || l.jquery) ? m(l) : m.event,
                o = m.Deferred(),
                p = m.Callbacks("once memory"),
                q = k.statusCode || {},
                r = {},
                s = {},
                t = 0,
                u = "canceled",
                v = {
                    readyState: 0,
                    getResponseHeader: function(a) {
                        var b;
                        if (2 === t) {
                            if (!j) {
                                j = {};
                                while (b = Cc.exec(f)) {
                                    j[b[1].toLowerCase()] = b[2]
                                }
                            }
                            b = j[a.toLowerCase()]
                        }
                        return null == b ? null : b
                    },
                    getAllResponseHeaders: function() {
                        return 2 === t ? f : null
                    },
                    setRequestHeader: function(a, b) {
                        var c = a.toLowerCase();
                        return t || (a = s[c] = s[c] || a, r[a] = b), this
                    },
                    overrideMimeType: function(a) {
                        return t || (k.mimeType = a), this
                    },
                    statusCode: function(a) {
                        var b;
                        if (a) {
                            if (2 > t) {
                                for (b in a) {
                                    q[b] = [q[b], a[b]]
                                }
                            } else {
                                v.always(a[v.status])
                            }
                        }
                        return this
                    },
                    abort: function(a) {
                        var b = a || u;
                        return i && i.abort(b), x(0, b), this
                    }
                };
            if (o.promise(v).complete = p.add, v.success = v.done, v.error = v.fail, k.url = ((a || k.url || zc) + "").replace(Ac, "").replace(Fc, yc[1] + "//"), k.type = b.method || b.type || k.method || k.type, k.dataTypes = m.trim(k.dataType || "*").toLowerCase().match(E) || [""], null == k.crossDomain && (c = Gc.exec(k.url.toLowerCase()), k.crossDomain = !(!c || c[1] === yc[1] && c[2] === yc[2] && (c[3] || ("http:" === c[1] ? "80" : "443")) === (yc[3] || ("http:" === yc[1] ? "80" : "443")))), k.data && k.processData && "string" != typeof k.data && (k.data = m.param(k.data, k.traditional)), Mc(Hc, k, b, v), 2 === t) {
                return v
            }
            h = m.event && k.global, h && 0 === m.active++ && m.event.trigger("ajaxStart"), k.type = k.type.toUpperCase(), k.hasContent = !Ec.test(k.type), e = k.url, k.hasContent || (k.data && (e = k.url += (wc.test(e) ? "&" : "?") + k.data, delete k.data), k.cache === !1 && (k.url = Bc.test(e) ? e.replace(Bc, "$1_=" + vc++) : e + (wc.test(e) ? "&" : "?") + "_=" + vc++)), k.ifModified && (m.lastModified[e] && v.setRequestHeader("If-Modified-Since", m.lastModified[e]), m.etag[e] && v.setRequestHeader("If-None-Match", m.etag[e])), (k.data && k.hasContent && k.contentType !== !1 || b.contentType) && v.setRequestHeader("Content-Type", k.contentType), v.setRequestHeader("Accept", k.dataTypes[0] && k.accepts[k.dataTypes[0]] ? k.accepts[k.dataTypes[0]] + ("*" !== k.dataTypes[0] ? ", " + Jc + "; q=0.01" : "") : k.accepts["*"]);
            for (d in k.headers) {
                v.setRequestHeader(d, k.headers[d])
            }
            if (k.beforeSend && (k.beforeSend.call(l, v, k) === !1 || 2 === t)) {
                return v.abort()
            }
            u = "abort";
            for (d in {
                    success: 1,
                    error: 1,
                    complete: 1
                }) {
                v[d](k[d])
            }
            if (i = Mc(Ic, k, b, v)) {
                v.readyState = 1, h && n.trigger("ajaxSend", [v, k]), k.async && k.timeout > 0 && (g = setTimeout(function() {
                    v.abort("timeout")
                }, k.timeout));
                try {
                    t = 1, i.send(r, x)
                } catch (w) {
                    if (!(2 > t)) {
                        throw w
                    }
                    x(-1, w)
                }
            } else {
                x(-1, "No Transport")
            }

            function x(a, b, c, d) {
                var j, r, s, u, w, x = b;
                2 !== t && (t = 2, g && clearTimeout(g), i = void 0, f = d || "", v.readyState = a > 0 ? 4 : 0, j = a >= 200 && 300 > a || 304 === a, c && (u = Oc(k, v, c)), u = Pc(k, u, v, j), j ? (k.ifModified && (w = v.getResponseHeader("Last-Modified"), w && (m.lastModified[e] = w), w = v.getResponseHeader("etag"), w && (m.etag[e] = w)), 204 === a || "HEAD" === k.type ? x = "nocontent" : 304 === a ? x = "notmodified" : (x = u.state, r = u.data, s = u.error, j = !s)) : (s = x, (a || !x) && (x = "error", 0 > a && (a = 0))), v.status = a, v.statusText = (b || x) + "", j ? o.resolveWith(l, [r, x, v]) : o.rejectWith(l, [v, x, s]), v.statusCode(q), q = void 0, h && n.trigger(j ? "ajaxSuccess" : "ajaxError", [v, k, j ? r : s]), p.fireWith(l, [v, x]), h && (n.trigger("ajaxComplete", [v, k]), --m.active || m.event.trigger("ajaxStop")))
            }
            return v
        },
        getJSON: function(a, b, c) {
            return m.get(a, b, c, "json")
        },
        getScript: function(a, b) {
            return m.get(a, void 0, b, "script")
        }
    }), m.each(["get", "post"], function(a, b) {
        m[b] = function(a, c, d, e) {
            return m.isFunction(c) && (e = e || d, d = c, c = void 0), m.ajax({
                url: a,
                type: b,
                dataType: e,
                data: c,
                success: d
            })
        }
    }), m._evalUrl = function(a) {
        return m.ajax({
            url: a,
            type: "GET",
            dataType: "script",
            async: !1,
            global: !1,
            "throws": !0
        })
    }, m.fn.extend({
        wrapAll: function(a) {
            if (m.isFunction(a)) {
                return this.each(function(b) {
                    m(this).wrapAll(a.call(this, b))
                })
            }
            if (this[0]) {
                var b = m(a, this[0].ownerDocument).eq(0).clone(!0);
                this[0].parentNode && b.insertBefore(this[0]), b.map(function() {
                    var a = this;
                    while (a.firstChild && 1 === a.firstChild.nodeType) {
                        a = a.firstChild
                    }
                    return a
                }).append(this)
            }
            return this
        },
        wrapInner: function(a) {
            return this.each(m.isFunction(a) ? function(b) {
                m(this).wrapInner(a.call(this, b))
            } : function() {
                var b = m(this),
                    c = b.contents();
                c.length ? c.wrapAll(a) : b.append(a)
            })
        },
        wrap: function(a) {
            var b = m.isFunction(a);
            return this.each(function(c) {
                m(this).wrapAll(b ? a.call(this, c) : a)
            })
        },
        unwrap: function() {
            return this.parent().each(function() {
                m.nodeName(this, "body") || m(this).replaceWith(this.childNodes)
            }).end()
        }
    }), m.expr.filters.hidden = function(a) {
        return a.offsetWidth <= 0 && a.offsetHeight <= 0 || !k.reliableHiddenOffsets() && "none" === (a.style && a.style.display || m.css(a, "display"))
    }, m.expr.filters.visible = function(a) {
        return !m.expr.filters.hidden(a)
    };
    var Qc = /%20/g,
        Rc = /\[\]$/,
        Sc = /\r?\n/g,
        Tc = /^(?:submit|button|image|reset|file)$/i,
        Uc = /^(?:input|select|textarea|keygen)/i;

    function Vc(a, b, c, d) {
        var e;
        if (m.isArray(b)) {
            m.each(b, function(b, e) {
                c || Rc.test(a) ? d(a, e) : Vc(a + "[" + ("object" == typeof e ? b : "") + "]", e, c, d)
            })
        } else {
            if (c || "object" !== m.type(b)) {
                d(a, b)
            } else {
                for (e in b) {
                    Vc(a + "[" + e + "]", b[e], c, d)
                }
            }
        }
    }
    m.param = function(a, b) {
        var c, d = [],
            e = function(a, b) {
                b = m.isFunction(b) ? b() : null == b ? "" : b, d[d.length] = encodeURIComponent(a) + "=" + encodeURIComponent(b)
            };
        if (void 0 === b && (b = m.ajaxSettings && m.ajaxSettings.traditional), m.isArray(a) || a.jquery && !m.isPlainObject(a)) {
            m.each(a, function() {
                e(this.name, this.value)
            })
        } else {
            for (c in a) {
                Vc(c, a[c], b, e)
            }
        }
        return d.join("&").replace(Qc, "+")
    }, m.fn.extend({
        serialize: function() {
            return m.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                var a = m.prop(this, "elements");
                return a ? m.makeArray(a) : this
            }).filter(function() {
                var a = this.type;
                return this.name && !m(this).is(":disabled") && Uc.test(this.nodeName) && !Tc.test(a) && (this.checked || !W.test(a))
            }).map(function(a, b) {
                var c = m(this).val();
                return null == c ? null : m.isArray(c) ? m.map(c, function(a) {
                    return {
                        name: b.name,
                        value: a.replace(Sc, "\r\n")
                    }
                }) : {
                    name: b.name,
                    value: c.replace(Sc, "\r\n")
                }
            }).get()
        }
    }), m.ajaxSettings.xhr = void 0 !== a.ActiveXObject ? function() {
        return !this.isLocal && /^(get|post|head|put|delete|options)$/i.test(this.type) && Zc() || $c()
    } : Zc;
    var Wc = 0,
        Xc = {},
        Yc = m.ajaxSettings.xhr();
    a.attachEvent && a.attachEvent("onunload", function() {
        for (var a in Xc) {
            Xc[a](void 0, !0)
        }
    }), k.cors = !!Yc && "withCredentials" in Yc, Yc = k.ajax = !!Yc, Yc && m.ajaxTransport(function(a) {
        if (!a.crossDomain || k.cors) {
            var b;
            return {
                send: function(c, d) {
                    var e, f = a.xhr(),
                        g = ++Wc;
                    if (f.open(a.type, a.url, a.async, a.username, a.password), a.xhrFields) {
                        for (e in a.xhrFields) {
                            f[e] = a.xhrFields[e]
                        }
                    }
                    a.mimeType && f.overrideMimeType && f.overrideMimeType(a.mimeType), a.crossDomain || c["X-Requested-With"] || (c["X-Requested-With"] = "XMLHttpRequest");
                    for (e in c) {
                        void 0 !== c[e] && f.setRequestHeader(e, c[e] + "")
                    }
                    f.send(a.hasContent && a.data || null), b = function(c, e) {
                        var h, i, j;
                        if (b && (e || 4 === f.readyState)) {
                            if (delete Xc[g], b = void 0, f.onreadystatechange = m.noop, e) {
                                4 !== f.readyState && f.abort()
                            } else {
                                j = {}, h = f.status, "string" == typeof f.responseText && (j.text = f.responseText);
                                try {
                                    i = f.statusText
                                } catch (k) {
                                    i = ""
                                }
                                h || !a.isLocal || a.crossDomain ? 1223 === h && (h = 204) : h = j.text ? 200 : 404
                            }
                        }
                        j && d(h, i, j, f.getAllResponseHeaders())
                    }, a.async ? 4 === f.readyState ? setTimeout(b) : f.onreadystatechange = Xc[g] = b : b()
                },
                abort: function() {
                    b && b(void 0, !0)
                }
            }
        }
    });

    function Zc() {
        try {
            return new a.XMLHttpRequest
        } catch (b) {}
    }

    function $c() {
        try {
            return new a.ActiveXObject("Microsoft.XMLHTTP")
        } catch (b) {}
    }
    m.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /(?:java|ecma)script/
        },
        converters: {
            "text script": function(a) {
                return m.globalEval(a), a
            }
        }
    }), m.ajaxPrefilter("script", function(a) {
        void 0 === a.cache && (a.cache = !1), a.crossDomain && (a.type = "GET", a.global = !1)
    }), m.ajaxTransport("script", function(a) {
        if (a.crossDomain) {
            var b, c = y.head || m("head")[0] || y.documentElement;
            return {
                send: function(d, e) {
                    b = y.createElement("script"), b.async = !0, a.scriptCharset && (b.charset = a.scriptCharset), b.src = a.url, b.onload = b.onreadystatechange = function(a, c) {
                        (c || !b.readyState || /loaded|complete/.test(b.readyState)) && (b.onload = b.onreadystatechange = null, b.parentNode && b.parentNode.removeChild(b), b = null, c || e(200, "success"))
                    }, c.insertBefore(b, c.firstChild)
                },
                abort: function() {
                    b && b.onload(void 0, !0)
                }
            }
        }
    });
    var _c = [],
        ad = /(=)\?(?=&|$)|\?\?/;
    m.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var a = _c.pop() || m.expando + "_" + vc++;
            return this[a] = !0, a
        }
    }), m.ajaxPrefilter("json jsonp", function(b, c, d) {
        var e, f, g, h = b.jsonp !== !1 && (ad.test(b.url) ? "url" : "string" == typeof b.data && !(b.contentType || "").indexOf("application/x-www-form-urlencoded") && ad.test(b.data) && "data");
        return h || "jsonp" === b.dataTypes[0] ? (e = b.jsonpCallback = m.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback, h ? b[h] = b[h].replace(ad, "$1" + e) : b.jsonp !== !1 && (b.url += (wc.test(b.url) ? "&" : "?") + b.jsonp + "=" + e), b.converters["script json"] = function() {
            return g || m.error(e + " was not called"), g[0]
        }, b.dataTypes[0] = "json", f = a[e], a[e] = function() {
            g = arguments
        }, d.always(function() {
            a[e] = f, b[e] && (b.jsonpCallback = c.jsonpCallback, _c.push(e)), g && m.isFunction(f) && f(g[0]), g = f = void 0
        }), "script") : void 0
    }), m.parseHTML = function(a, b, c) {
        if (!a || "string" != typeof a) {
            return null
        }
        "boolean" == typeof b && (c = b, b = !1), b = b || y;
        var d = u.exec(a),
            e = !c && [];
        return d ? [b.createElement(d[1])] : (d = m.buildFragment([a], b, e), e && e.length && m(e).remove(), m.merge([], d.childNodes))
    };
    var bd = m.fn.load;
    m.fn.load = function(a, b, c) {
        if ("string" != typeof a && bd) {
            return bd.apply(this, arguments)
        }
        var d, e, f, g = this,
            h = a.indexOf(" ");
        return h >= 0 && (d = m.trim(a.slice(h, a.length)), a = a.slice(0, h)), m.isFunction(b) ? (c = b, b = void 0) : b && "object" == typeof b && (f = "POST"), g.length > 0 && m.ajax({
            url: a,
            type: f,
            dataType: "html",
            data: b
        }).done(function(a) {
            e = arguments, g.html(d ? m("<div>").append(m.parseHTML(a)).find(d) : a)
        }).complete(c && function(a, b) {
            g.each(c, e || [a.responseText, b, a])
        }), this
    }, m.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(a, b) {
        m.fn[b] = function(a) {
            return this.on(b, a)
        }
    }), m.expr.filters.animated = function(a) {
        return m.grep(m.timers, function(b) {
            return a === b.elem
        }).length
    };
    var cd = a.document.documentElement;

    function dd(a) {
        return m.isWindow(a) ? a : 9 === a.nodeType ? a.defaultView || a.parentWindow : !1
    }
    m.offset = {
        setOffset: function(a, b, c) {
            var d, e, f, g, h, i, j, k = m.css(a, "position"),
                l = m(a),
                n = {};
            "static" === k && (a.style.position = "relative"), h = l.offset(), f = m.css(a, "top"), i = m.css(a, "left"), j = ("absolute" === k || "fixed" === k) && m.inArray("auto", [f, i]) > -1, j ? (d = l.position(), g = d.top, e = d.left) : (g = parseFloat(f) || 0, e = parseFloat(i) || 0), m.isFunction(b) && (b = b.call(a, c, h)), null != b.top && (n.top = b.top - h.top + g), null != b.left && (n.left = b.left - h.left + e), "using" in b ? b.using.call(a, n) : l.css(n)
        }
    }, m.fn.extend({
        offset: function(a) {
            if (arguments.length) {
                return void 0 === a ? this : this.each(function(b) {
                    m.offset.setOffset(this, a, b)
                })
            }
            var b, c, d = {
                    top: 0,
                    left: 0
                },
                e = this[0],
                f = e && e.ownerDocument;
            if (f) {
                return b = f.documentElement, m.contains(b, e) ? (typeof e.getBoundingClientRect !== K && (d = e.getBoundingClientRect()), c = dd(f), {
                    top: d.top + (c.pageYOffset || b.scrollTop) - (b.clientTop || 0),
                    left: d.left + (c.pageXOffset || b.scrollLeft) - (b.clientLeft || 0)
                }) : d
            }
        },
        position: function() {
            if (this[0]) {
                var a, b, c = {
                        top: 0,
                        left: 0
                    },
                    d = this[0];
                return "fixed" === m.css(d, "position") ? b = d.getBoundingClientRect() : (a = this.offsetParent(), b = this.offset(), m.nodeName(a[0], "html") || (c = a.offset()), c.top += m.css(a[0], "borderTopWidth", !0), c.left += m.css(a[0], "borderLeftWidth", !0)), {
                    top: b.top - c.top - m.css(d, "marginTop", !0),
                    left: b.left - c.left - m.css(d, "marginLeft", !0)
                }
            }
        },
        offsetParent: function() {
            return this.map(function() {
                var a = this.offsetParent || cd;
                while (a && !m.nodeName(a, "html") && "static" === m.css(a, "position")) {
                    a = a.offsetParent
                }
                return a || cd
            })
        }
    }), m.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(a, b) {
        var c = /Y/.test(b);
        m.fn[a] = function(d) {
            return V(this, function(a, d, e) {
                var f = dd(a);
                return void 0 === e ? f ? b in f ? f[b] : f.document.documentElement[d] : a[d] : void(f ? f.scrollTo(c ? m(f).scrollLeft() : e, c ? e : m(f).scrollTop()) : a[d] = e)
            }, a, d, arguments.length, null)
        }
    }), m.each(["top", "left"], function(a, b) {
        m.cssHooks[b] = Lb(k.pixelPosition, function(a, c) {
            return c ? (c = Jb(a, b), Hb.test(c) ? m(a).position()[b] + "px" : c) : void 0
        })
    }), m.each({
        Height: "height",
        Width: "width"
    }, function(a, b) {
        m.each({
            padding: "inner" + a,
            content: b,
            "": "outer" + a
        }, function(c, d) {
            m.fn[d] = function(d, e) {
                var f = arguments.length && (c || "boolean" != typeof d),
                    g = c || (d === !0 || e === !0 ? "margin" : "border");
                return V(this, function(b, c, d) {
                    var e;
                    return m.isWindow(b) ? b.document.documentElement["client" + a] : 9 === b.nodeType ? (e = b.documentElement, Math.max(b.body["scroll" + a], e["scroll" + a], b.body["offset" + a], e["offset" + a], e["client" + a])) : void 0 === d ? m.css(b, c, g) : m.style(b, c, d, g)
                }, b, f ? d : void 0, f, null)
            }
        })
    }), m.fn.size = function() {
        return this.length
    }, m.fn.andSelf = m.fn.addBack, "function" == typeof define && define.amd && define("jquery", [], function() {
        return m
    });
    var ed = a.jQuery,
        fd = a.$;
    return m.noConflict = function(b) {
        return a.$ === m && (a.$ = fd), b && a.jQuery === m && (a.jQuery = ed), m
    }, typeof b === K && (a.jQuery = a.$ = m), m
});
window.Granite = window.Granite || {};
Granite.Sling = {
    SELECTOR_INFINITY: ".infinity",
    CHARSET: "_charset_",
    STATUS: ":status",
    STATUS_BROWSER: "browser",
    OPERATION: ":operation",
    OPERATION_DELETE: "delete",
    OPERATION_MOVE: "move",
    DELETE_SUFFIX: "@Delete",
    TYPEHINT_SUFFIX: "@TypeHint",
    COPY_SUFFIX: "@CopyFrom",
    MOVE_SUFFIX: "@MoveFrom",
    ORDER: ":order",
    REPLACE: ":replace",
    DESTINATION: ":dest",
    SAVE_PARAM_PREFIX: ":saveParamPrefix",
    IGNORE_PARAM: ":ignore",
    REQUEST_LOGIN_PARAM: "sling:authRequestLogin",
    LOGIN_URL: "/system/sling/login.html",
    LOGOUT_URL: "/system/sling/logout.html"
};
(function(a, b) {
    a.Util = (function() {
        var c = {
            patchText: function(f, e) {
                if (e) {
                    if (!b.isArray(e)) {
                        f = f.replace("{0}", e)
                    } else {
                        for (var d = 0; d < e.length; d++) {
                            f = f.replace(("{" + d + "}"), e[d])
                        }
                    }
                }
                return f
            },
            getTopWindow: function() {
                var e = window;
                if (this.iFrameTopWindow) {
                    return this.iFrameTopWindow
                }
                try {
                    while (e.parent && e !== e.parent && e.parent.location.href) {
                        e = e.parent
                    }
                } catch (d) {}
                return e
            },
            setIFrameMode: function(d) {
                this.iFrameTopWindow = d || window
            },
            applyDefaults: function() {
                var f, h = arguments[0] || {};
                for (var e = 1; e < arguments.length; e++) {
                    f = arguments[e];
                    for (var d in f) {
                        var g = f[d];
                        if (f.hasOwnProperty(d) && g) {
                            if (typeof g === "object" && !(g instanceof Array)) {
                                h[d] = c.applyDefaults(h[d], g)
                            } else {
                                if (g instanceof Array) {
                                    h[d] = g.slice(0)
                                } else {
                                    h[d] = g
                                }
                            }
                        }
                    }
                }
                return h
            },
            getKeyCode: function(d) {
                return d.keyCode ? d.keyCode : d.which
            }
        };
        return c
    }())
}(Granite, jQuery));
(function(Granite, util, sling, $) {
    Granite.HTTP = (function() {
        var contextPath = null,
            SCRIPT_URL_REGEXP = /^(?:http|https):\/\/[^\/]+(\/[^\/]+)\/(?:etc|libs|apps)\/.*\.js(\?.*)?$/,
            ENCODE_PATH_REGEXP = /[^1\w-\.!~\*'\(\)\/%;:@&=\$,]/,
            loginRedirected = false,
            self = {};
        self.getSchemeAndAuthority = function(url) {
            var end;
            try {
                if (url.indexOf("://") == -1) {
                    return ""
                }
                end = url.indexOf("/", url.indexOf("://") + 3);
                return (end == -1) ? url : url.substring(0, end)
            } catch (e) {
                return ""
            }
        };
        self.getContextPath = function() {
            return contextPath
        };
        self.detectContextPath = function() {
            try {
                if (window.CQURLInfo) {
                    contextPath = CQURLInfo.contextPath || ""
                } else {
                    var scripts = document.getElementsByTagName("script");
                    for (var i = 0; i < scripts.length; i++) {
                        var result = SCRIPT_URL_REGEXP.exec(scripts[i].src);
                        if (result) {
                            contextPath = result[1];
                            return
                        }
                    }
                    contextPath = ""
                }
            } catch (e) {}
        };
        self.externalize = function(url) {
            try {
                if (url.indexOf("/") == 0 && contextPath && url.indexOf(contextPath + "/") != 0) {
                    url = contextPath + url
                }
            } catch (e) {}
            return url
        };
        self.internalize = function(url, doc) {
            if (url.charAt(0) == "/") {
                if (contextPath) {
                    return url.substring(contextPath.length)
                } else {
                    return url
                }
            }
            if (!doc) {
                doc = document
            }
            var docHost = self.getSchemeAndAuthority(doc.location.href);
            var urlHost = self.getSchemeAndAuthority(url);
            if (docHost == urlHost) {
                return url.substring(urlHost.length + (contextPath ? contextPath.length : 0))
            } else {
                return url
            }
        };
        self.getPath = function(url) {
            if (!url) {
                if (window.CQURLInfo && CQURLInfo.requestPath) {
                    return CQURLInfo.requestPath
                } else {
                    url = window.location.pathname
                }
            } else {
                url = self.removeParameters(url);
                url = self.removeAnchor(url)
            }
            url = self.internalize(url);
            var i = url.indexOf(".", url.lastIndexOf("/"));
            if (i != -1) {
                url = url.substring(0, i)
            }
            return url
        };
        self.removeAnchor = function(url) {
            if (url.indexOf("#") != -1) {
                return url.substring(0, url.indexOf("#"))
            }
            return url
        };
        self.removeParameters = function(url) {
            if (url.indexOf("?") != -1) {
                return url.substring(0, url.indexOf("?"))
            }
            return url
        };
        self.encodePathOfURI = function(url) {
            var parts, delim;
            if (url.indexOf("?") != -1) {
                parts = url.split("?");
                delim = "?"
            } else {
                if (url.indexOf("#") != -1) {
                    parts = url.split("#");
                    delim = "#"
                } else {
                    parts = [url]
                }
            }
            if (ENCODE_PATH_REGEXP.test(parts[0])) {
                parts[0] = self.encodePath(parts[0])
            }
            return parts.join(delim)
        };
        self.encodePath = function(path) {
            path = encodeURI(path).replace(/%5B/g, "[").replace(/%5D/g, "]");
            path = path.replace(/\+/g, "%2B");
            path = path.replace(/\?/g, "%3F");
            path = path.replace(/;/g, "%3B");
            path = path.replace(/#/g, "%23");
            path = path.replace(/=/g, "%3D");
            path = path.replace(/\$/g, "%24");
            path = path.replace(/,/g, "%2C");
            path = path.replace(/'/g, "%27");
            path = path.replace(/"/g, "%22");
            return path
        };
        self.handleLoginRedirect = function() {
            if (!loginRedirected) {
                loginRedirected = true;
                alert(Granite.I18n.get("Your request could not be completed because you have been signed out."));
                var l = util.getTopWindow().document.location;
                l.href = self.externalize(sling.LOGIN_URL) + "?resource=" + l.pathname + encodeURIComponent(l.search) + l.hash
            }
        };
        self.getXhrHook = function(url, method, params) {
            method = method || "GET";
            if (window.G_XHR_HOOK && $.isFunction(G_XHR_HOOK)) {
                var p = {
                    url: url,
                    method: method
                };
                if (params) {
                    p.params = params
                }
                return G_XHR_HOOK(p)
            }
            return null
        };
        self.eval = function(response) {
            if (typeof response != "object") {
                response = $.ajax({
                    url: response,
                    type: "get",
                    async: false
                })
            }
            try {
                return eval("(" + (response.body ? response.body : response.responseText) + ")")
            } catch (e) {}
            return null
        };
        return self
    }())
}(Granite, Granite.Util, Granite.Sling, jQuery));
(function(Granite, util, http, $) {
    Granite.I18n = (function() {
        var dicts = {},
            initialized = false,
            urlPrefix = "/libs/cq/i18n/dict.",
            urlSuffix = ".json",
            currentLocale = "en",
            pseudoTranslations = false,
            languages = null,
            self = {};
        self.LOCALE_DEFAULT = "en";
        self.PSEUDO_LANGUAGE = "zz";
        self.PSEUDO_PATTERN_KEY = "_pseudoPattern_";
        self.init = function(config) {
            if (!config) {
                config = new Object()
            }
            if (config.locale) {
                this.setLocale(config.locale)
            }
            urlPrefix = config.urlPrefix || urlPrefix;
            urlSuffix = config.urlSuffix || urlSuffix;
            initialized = true
        };
        self.setLocale = function(locale) {
            currentLocale = locale
        };
        self.getLocale = function() {
            if (currentLocale && $.isFunction(currentLocale)) {
                currentLocale = currentLocale()
            }
            return currentLocale
        };
        self.setUrlPrefix = function(prefix) {
            urlPrefix = prefix
        };
        self.setUrlSuffix = function(suffix) {
            urlSuffix = suffix
        };
        self.getDictionary = function(locale) {
            locale = locale || self.getLocale() || Granite.I18n.LOCALE_DEFAULT;
            if (!dicts[locale]) {
                pseudoTranslations = (locale.indexOf(self.PSEUDO_LANGUAGE) == 0);
                var url = urlPrefix + locale + urlSuffix;
                try {
                    var response = $.ajax(url, {
                        async: false,
                        dataType: "json"
                    });
                    dicts[locale] = $.parseJSON(response.responseText)
                } catch (e) {}
                if (!dicts[locale]) {
                    dicts[locale] = {}
                }
            }
            return dicts[locale]
        };
        self.get = function(text, snippets, note) {
            var dict, newText, lookupText;
            if (initialized) {
                dict = self.getDictionary()
            }
            lookupText = pseudoTranslations ? self.PSEUDO_PATTERN_KEY : note ? text + " ((" + note + "))" : text;
            if (dict) {
                newText = dict[lookupText]
            }
            if (!newText) {
                newText = text
            }
            if (pseudoTranslations) {
                newText = newText.replace("{string}", text).replace("{comment}", note ? note : "")
            }
            return util.patchText(newText, snippets)
        };
        self.getVar = function(text, note) {
            if (!text) {
                return null
            }
            return self.get(text, null, note)
        };
        self.getLanguages = function() {
            if (!languages) {
                try {
                    var json = http.eval("/libs/wcm/core/resources/languages.overlay.infinity.json");
                    $.each(json, function(name, lang) {
                        lang.title = self.getVar(lang.language);
                        if (lang.title && lang.country && lang.country != "*") {
                            lang.title += " (" + self.getVar(lang.country) + ")"
                        }
                    });
                    languages = json
                } catch (e) {
                    languages = {}
                }
            }
            return languages
        };
        self.parseLocale = function(langCode) {
            if (!langCode) {
                return null
            }
            var pos = langCode.indexOf("_");
            if (pos < 0) {
                pos = langCode.indexOf("-")
            }
            var language, country;
            if (pos < 0) {
                language = langCode;
                country = null
            } else {
                language = langCode.substring(0, pos);
                country = langCode.substring(pos + 1)
            }
            return {
                code: langCode,
                language: language,
                country: country
            }
        };
        return self
    }())
}(Granite, Granite.Util, Granite.HTTP, jQuery));
(function(b, c) {
    var a = function() {
        var e = {
            visibility: "hidden",
            position: "absolute",
            width: "30px",
            height: "30px",
            "-webkit-border-radius": "20px",
            "border-radius": "20px",
            border: "5px solid orange",
            "-webkit-user-select": "none",
            "user-select": "none",
            opacity: "0.5",
            "z-index": "2000",
            "pointer-events": "none"
        };
        var f = {};
        var d = [];
        return {
            debugWithMouse: false,
            init: function() {
                var g = this;
                c(document).on("touchstart.touchindicator touchmove.touchindicator touchend.touchindicator", function(j) {
                    var h = j.originalEvent.touches;
                    g.update(h);
                    return true
                });
                if (this.debugWithMouse) {
                    c(document).on("mousemove.touchindicator", function(h) {
                        h.identifer = "fake";
                        g.update([h]);
                        return true
                    })
                }
            },
            update: function(k) {
                var h = {};
                for (var j = 0; j < k.length; j++) {
                    var m = k[j];
                    var l = m.identifier;
                    var g = f[l];
                    if (!g) {
                        g = d.pop();
                        if (!g) {
                            g = c("<div></div>").css(e);
                            c("body").append(g)
                        }
                    }
                    h[l] = g;
                    g.offset({
                        left: m.pageX - 20,
                        top: m.pageY - 20
                    });
                    g.css("visibility", "visible")
                }
                for (l in f) {
                    if (f.hasOwnProperty(l) && !h[l]) {
                        g = f[l];
                        g.css("visibility", "hidden");
                        d.push(g)
                    }
                }
                f = h
            }
        }
    };
    b.TouchIndicator = new a()
}(Granite, jQuery));
(function(c, a, b, d) {
    c.OptOutUtil = (function() {
        var e = {};
        var f = [];
        var g = [];
        e.init = function(h) {
            if (h) {
                f = h.cookieNames ? h.cookieNames : f;
                g = h.whitelistCookieNames ? h.whitelistCookieNames : g
            }
        };
        e.getCookieNames = function() {
            return f
        };
        e.getWhitelistCookieNames = function() {
            return g
        };
        e.isOptedOut = function() {
            var k = document.cookie.split(";");
            for (var j = 0; j < k.length; j++) {
                var h = k[j];
                var l = d.trim(h.split("=")[0]);
                if (d.inArray(l, e.getCookieNames()) > -1) {
                    return true
                }
            }
            return false
        };
        e.maySetCookie = function(h) {
            return !(e.isOptedOut() && d.inArray(h, e.getWhitelistCookieNames()) === -1)
        };
        return e
    }())
}(Granite, Granite.Util, Granite.HTTP, jQuery));
Granite.OptOutUtil.init(window.GraniteOptOutConfig);
Granite.HTTP.detectContextPath();
Granite.I18n.init();
(function(c, b, d) {
    var a;
    b.Granite = b.Granite || {};
    b.Granite.$ = b.Granite.$ || c;
    b._g = b._g || {};
    b._g.$ = b._g.$ || c;
    a = Granite.HTTP;
    c.ajaxSetup({
        externalize: true,
        encodePath: true,
        hook: true,
        beforeSend: function(f, e) {
            if (typeof G_IS_HOOKED == "undefined" || !G_IS_HOOKED(e.url)) {
                if (e.externalize) {
                    e.url = a.externalize(e.url)
                }
                if (e.encodePath) {
                    e.url = a.encodePathOfURI(e.url)
                }
            }
            if (e.hook) {
                var g = a.getXhrHook(e.url, e.type, e.data);
                if (g) {
                    e.url = g.url;
                    if (g.params) {
                        if (e.type.toUpperCase() == "GET") {
                            e.url += "?" + c.param(g.params)
                        } else {
                            e.data = c.param(g.params)
                        }
                    }
                }
            }
        },
        statusCode: {
            403: function(e) {
                if (e.getResponseHeader("X-Reason") === "Authentication Failed") {
                    a.handleLoginRedirect()
                }
            }
        }
    });
    c.ajaxSettings.traditional = true
}(jQuery, this));
window.$CQ = _g.$;
window._g = window._g || {};
_g.shared = {};
if (window.console === undefined) {
    window.console = {
        log: function(a) {}
    }
}
_g.shared.HTTP = new function() {
    var createResponse = function() {
        var response = new Object();
        response.headers = new Object();
        response.body = new Object();
        return response
    };
    var getResponseFromXhr = function(request) {
        if (!request) {
            return null
        }
        var response = createResponse();
        response.body = request.responseText;
        response.headers[_g.HTTP.HEADER_STATUS] = request.status;
        response.responseText = request.responseText;
        response.status = request.status;
        return response
    };
    return {
        EXTENSION_HTML: ".html",
        EXTENSION_JSON: ".json",
        EXTENSION_RES: ".res",
        HEADER_STATUS: "Status",
        HEADER_MESSAGE: "Message",
        HEADER_LOCATION: "Location",
        HEADER_PATH: "Path",
        PARAM_NO_CACHE: "cq_ck",
        get: function(url, callback, scope, suppressForbiddenCheck) {
            url = _g.HTTP.getXhrHookedURL(_g.HTTP.externalize(url, true));
            if (callback != undefined) {
                return _g.$.ajax({
                    type: "GET",
                    url: url,
                    externalize: false,
                    encodePath: false,
                    hook: false,
                    complete: function(request, textStatus) {
                        var response = getResponseFromXhr(request);
                        if (!suppressForbiddenCheck) {
                            _g.HTTP.handleForbidden(response)
                        }
                        callback.call(scope || this, this, textStatus == "success", response)
                    }
                })
            } else {
                try {
                    var request = _g.$.ajax({
                        type: "GET",
                        url: url,
                        async: false,
                        externalize: false,
                        encodePath: false,
                        hook: false
                    });
                    var response = getResponseFromXhr(request);
                    if (!suppressForbiddenCheck) {
                        _g.HTTP.handleForbidden(response)
                    }
                    return response
                } catch (e) {
                    return null
                }
            }
        },
        post: function(url, callback, params, scope, suppressErrorMsg, suppressForbiddenCheck) {
            url = _g.HTTP.externalize(url, true);
            var hook = _g.HTTP.getXhrHook(url, "POST", params);
            if (hook) {
                url = hook.url;
                params = hook.params
            }
            if (callback != undefined) {
                return _g.$.ajax({
                    type: "POST",
                    url: url,
                    data: params,
                    externalize: false,
                    encodePath: false,
                    hook: false,
                    complete: function(request, textStatus) {
                        var response = _g.HTTP.buildPostResponseFromHTML(request.responseText);
                        if (!suppressForbiddenCheck) {
                            _g.HTTP.handleForbidden(request)
                        }
                        callback.call(scope || this, this, textStatus == "success", response)
                    }
                })
            } else {
                try {
                    var request = _g.$.ajax({
                        type: "POST",
                        url: url,
                        data: params,
                        async: false,
                        externalize: false,
                        encodePath: false,
                        hook: false
                    });
                    var response = _g.HTTP.buildPostResponseFromHTML(request.responseText);
                    if (!suppressForbiddenCheck) {
                        _g.HTTP.handleForbidden(request)
                    }
                    return response
                } catch (e) {
                    return null
                }
            }
        },
        getParameter: function(url, name) {
            var params = _g.HTTP.getParameters(url, name);
            return params != null ? params[0] : null
        },
        getParameters: function(url, name) {
            var values = [];
            if (!name) {
                return null
            }
            name = encodeURIComponent(name);
            if (url.indexOf("?") == -1) {
                return null
            }
            var query = url.substring(url.indexOf("?") + 1);
            if (query.indexOf(name) == -1) {
                return null
            }
            var queryPts = query.split("&");
            for (var i = 0; i < queryPts.length; i++) {
                var paramPts = queryPts[i].split("=");
                if (paramPts[0] == name) {
                    values.push(paramPts.length > 1 ? decodeURIComponent(paramPts[1]) : "")
                }
            }
            return values.length > 0 ? values : null
        },
        addParameter: function(url, name, value) {
            if (value && value instanceof Array) {
                for (var i = 0; i < value.length; i++) {
                    url = _g.HTTP.addParameter(url, name, value[i])
                }
                return url
            }
            var separator = url.indexOf("?") == -1 ? "?" : "&";
            var hashIdx = url.indexOf("#");
            if (hashIdx < 0) {
                return url + separator + encodeURIComponent(name) + "=" + encodeURIComponent(value)
            } else {
                var hash = url.substring(hashIdx);
                url = url.substring(0, hashIdx);
                return url + separator + encodeURIComponent(name) + "=" + encodeURIComponent(value) + hash
            }
        },
        setParameter: function(url, name, value) {
            url = _g.HTTP.removeParameter(url, name);
            return _g.HTTP.addParameter(url, name, value)
        },
        removeParameter: function(url, name) {
            var pattern0 = "?" + encodeURIComponent(name) + "=";
            var pattern1 = "&" + encodeURIComponent(name) + "=";
            var pattern;
            if (url.indexOf(pattern0) != -1) {
                pattern = pattern0
            } else {
                if (url.indexOf(pattern1) != -1) {
                    pattern = pattern1
                } else {
                    return url
                }
            }
            var indexCutStart = url.indexOf(pattern);
            var begin = url.substring(0, indexCutStart);
            var indexCutEnd = url.indexOf("&", indexCutStart + 1);
            var end = "";
            if (indexCutEnd != -1) {
                end = url.substring(indexCutEnd);
                if (end.indexOf("&") == 0) {
                    end = end.replace("&", "?")
                }
            }
            return begin + end
        },
        removeParameters: Granite.HTTP.removeParameters,
        addSelector: function(url, selector, index) {
            if (!index) {
                index = 0
            }
            var post = "";
            var pIndex = url.indexOf("?");
            if (pIndex == -1) {
                pIndex = url.indexOf("#")
            }
            if (pIndex != -1) {
                post = url.substring(pIndex);
                url = url.substring(0, pIndex)
            }
            var sIndex = url.lastIndexOf("/");
            var main = url.substring(sIndex);
            if (main.indexOf("." + selector + ".") == -1) {
                var path = url.substring(0, sIndex);
                var obj = main.split(".");
                var newMain = "";
                var delim = "";
                if (index > obj.length - 2 || index == -1) {
                    index = obj.length - 2
                }
                for (var i = 0; i < obj.length; i++) {
                    newMain += delim + obj[i];
                    delim = ".";
                    if (index == i) {
                        newMain += delim + selector
                    }
                }
                return path + newMain + post
            } else {
                return url
            }
        },
        setSelector: function(url, selector, index) {
            var post = "";
            var pIndex = url.indexOf("?");
            if (pIndex == -1) {
                pIndex = url.indexOf("#")
            }
            if (pIndex != -1) {
                post = url.substring(pIndex);
                url = url.substring(0, pIndex)
            }
            var selectors = _g.HTTP.getSelectors(url);
            var ext = url.substring(url.lastIndexOf("."));
            url = url.substring(0, url.lastIndexOf("."));
            var fragment = (selectors.length > 0) ? url.replace("." + selectors.join("."), "") : url;
            if (selectors.length > 0) {
                for (var i = 0; i < selectors.length; i++) {
                    if (index == i) {
                        fragment += "." + selector
                    } else {
                        fragment += "." + selectors[i]
                    }
                }
            } else {
                fragment += "." + selector
            }
            return fragment + ext + post
        },
        addSelectors: function(url, selectors) {
            var res = url;
            if (url && selectors && selectors.length) {
                for (var i = 0; i < selectors.length; i++) {
                    res = _g.HTTP.addSelector(res, selectors[i], i)
                }
            }
            return res
        },
        getAnchor: function(url) {
            if (url.indexOf("#") != -1) {
                return url.substring(url.indexOf("#") + 1)
            }
            return ""
        },
        setAnchor: function(url, anchor) {
            return _g.HTTP.removeAnchor(url) + "#" + anchor
        },
        removeAnchor: Granite.HTTP.removeAnchor,
        noCaching: function(url) {
            return _g.HTTP.setParameter(url, _g.HTTP.PARAM_NO_CACHE, new Date().valueOf())
        },
        buildPostResponseFromNode: function(node, response) {
            if (!node) {
                return null
            }
            if (response == undefined) {
                response = createResponse()
            }
            for (var i = 0; i < node.childNodes.length; i++) {
                var child = node.childNodes[i];
                if (child.tagName) {
                    if (child.id) {
                        if (child.href) {
                            response.headers[child.id] = child.href
                        } else {
                            response.headers[child.id] = child.innerHTML
                        }
                    }
                    response = _g.HTTP.buildPostResponseFromNode(child, response)
                }
            }
            return response
        },
        buildPostResponseFromHTML: function(html) {
            var response = createResponse();
            try {
                if (html.responseText != undefined) {
                    html = html.responseText
                } else {
                    if (typeof html != "string") {
                        html = html.toString()
                    }
                }
                var div = document.createElement("div");
                div.innerHTML = html;
                response = _g.HTTP.buildPostResponseFromNode(div, response);
                div = null
            } catch (e) {}
            return response
        },
        getCookie: function(name) {
            var cname = encodeURIComponent(name) + "=";
            var dc = document.cookie;
            if (dc.length > 0) {
                var begin = dc.indexOf(cname);
                if (begin != -1) {
                    begin += cname.length;
                    var end = dc.indexOf(";", begin);
                    if (end == -1) {
                        end = dc.length
                    }
                    return decodeURIComponent(dc.substring(begin, end))
                }
            }
            return null
        },
        setCookie: function(name, value, path, days, domain, secure) {
            if (typeof(days) != "number") {
                days = 7
            }
            var date;
            if (days > 0) {
                date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000))
            } else {
                date = new Date(0)
            }
            document.cookie = encodeURIComponent(name) + "=" + encodeURIComponent(value) + "; " + (days != 0 ? "expires=" + date.toGMTString() + "; " : "") + (domain ? "domain=" + domain + "; " : "") + (path ? "path=" + path : "") + (secure ? "; secure" : "");
            return value
        },
        clearCookie: function(name, path, domain, secure) {
            _g.HTTP.setCookie(name, "null", path || "", -1, domain || "", secure || "")
        },
        getSchemeAndAuthority: Granite.HTTP.getSchemeAndAuthority,
        getContextPath: Granite.HTTP.getContextPath,
        externalize: function(url, encode) {
            if ((typeof G_IS_HOOKED != "undefined") && G_IS_HOOKED(url)) {
                return url
            }
            if (encode) {
                url = _g.HTTP.encodePathOfURI(url)
            }
            url = Granite.HTTP.externalize(url);
            return url
        },
        internalize: Granite.HTTP.internalize,
        getPath: Granite.HTTP.getPath,
        getSuffix: function() {
            if (window.CQURLInfo && CQURLInfo.suffix) {
                return CQURLInfo.suffix
            }
            return null
        },
        getSelectors: function(url) {
            if (!url && window.CQURLInfo) {
                if (CQURLInfo.selectors) {
                    return CQURLInfo.selectors
                }
            }
            var selectors = [];
            url = url || window.location.href;
            url = _g.HTTP.removeParameters(url);
            url = _g.HTTP.removeAnchor(url);
            var fragment = url.substring(url.lastIndexOf("/"));
            if (fragment) {
                var split = fragment.split(".");
                if (split.length > 2) {
                    for (var i = 0; i < split.length; i++) {
                        if (i > 0 && i < split.length - 1) {
                            selectors.push(split[i])
                        }
                    }
                }
            }
            return selectors
        },
        getExtension: function(url) {
            if (!url && window.CQURLInfo) {
                if (CQURLInfo.extension) {
                    return CQURLInfo.extension
                }
            }
            url = url || window.location.href;
            url = _g.HTTP.removeParameters(url);
            url = _g.HTTP.removeAnchor(url);
            var pos = url.lastIndexOf(".");
            if (pos < 0) {
                return ""
            }
            url = url.substring(pos + 1);
            pos = url.indexOf("/");
            if (pos < 0) {
                return url
            }
            return url.substring(0, pos)
        },
        encodePathOfURI: Granite.HTTP.encodePathOfURI,
        encodePath: Granite.HTTP.encodePath,
        eval: Granite.HTTP.eval,
        isOkStatus: function(status) {
            try {
                return (new String(status).indexOf("2") == 0)
            } catch (e) {
                return false
            }
        },
        isOk: function(response) {
            try {
                return _g.HTTP.isOkStatus(response.headers[_g.HTTP.HEADER_STATUS])
            } catch (e) {
                return false
            }
        },
        handleForbidden: function(response, suppressLogin) {
            try {
                if (response[_g.HTTP.HEADER_STATUS.toLowerCase()] == 403) {
                    Granite.HTTP.handleLoginRedirect();
                    return true
                }
                return false
            } catch (e) {
                return false
            }
        },
        getXhrHook: Granite.HTTP.getXhrHook,
        getXhrHookedURL: function(url, method, params) {
            var hook = _g.HTTP.getXhrHook(url, method, params);
            if (hook) {
                return hook.url
            }
            return url
        },
        reloadHook: function(url) {
            if (typeof G_RELOAD_HOOK != "undefined" && _g.$.isFunction(G_RELOAD_HOOK)) {
                if (CQURLInfo.selectorString != "") {
                    url = _g.HTTP.addSelector(url, CQURLInfo.selectorString)
                }
                url = G_RELOAD_HOOK(url) || url
            }
            return url
        }
    }
};
_g.HTTP = _g.shared.HTTP;
_g.shared.Util = new function() {
    return {
        reload: function(win, url, preventHistory) {
            if (!win) {
                win = window
            }
            if (!url) {
                url = _g.HTTP.noCaching(win.location.href)
            }
            url = _g.HTTP.reloadHook(url);
            if (preventHistory) {
                win.location.replace(url)
            } else {
                win.location.href = url
            }
        },
        load: function(url, preventHistory) {
            _g.Util.reload(window, url, preventHistory)
        },
        open: function(url, win, name, options) {
            if (!win) {
                win = window
            }
            if (!url) {
                return
            }
            url = _g.HTTP.reloadHook(url);
            if (!name) {
                name = ""
            }
            if (!options) {
                options = ""
            }
            return win.open(url, name, options)
        },
        htmlEncode: function(value) {
            return !value ? value : String(value).replace(/&/g, "&amp;").replace(/>/g, "&gt;").replace(/</g, "&lt;").replace(/"/g, "&quot;")
        },
        htmlDecode: function(value) {
            return !value ? value : String(value).replace(/&gt;/g, ">").replace(/&lt;/g, "<").replace(/&quot;/g, '"').replace(/&amp;/g, "&")
        },
        ellipsis: function(value, length, word) {
            if (value && value.length > length) {
                if (word) {
                    var vs = value.substr(0, length - 2);
                    var index = Math.max(vs.lastIndexOf(" "), vs.lastIndexOf("."), vs.lastIndexOf("!"), vs.lastIndexOf("?"), vs.lastIndexOf(";"));
                    if (index == -1 || index < (length - 15)) {
                        return value.substr(0, length - 3) + "..."
                    } else {
                        return vs.substr(0, index) + "..."
                    }
                } else {
                    return value.substr(0, length - 3) + "..."
                }
            }
            return value
        },
        patchText: Granite.Util.patchText,
        eval: function(response) {
            return _g.HTTP.eval(response)
        },
        getTopWindow: Granite.Util.getTopWindow,
        setIFrameMode: Granite.Util.setIFrameMode
    }
};
_g.Util = _g.shared.Util;
_g.shared.Sling = function() {
    return {
        SELECTOR_INFINITY: Granite.Sling.SELECTOR_INFINITY,
        CHARSET: Granite.Sling.CHARSET,
        STATUS: Granite.Sling.STATUS,
        STATUS_BROWSER: Granite.Sling.STATUS_BROWSER,
        OPERATION: Granite.Sling.OPERATION,
        OPERATION_DELETE: Granite.Sling.OPERATION_DELETE,
        OPERATION_MOVE: Granite.Sling.OPERATION_MOVE,
        DELETE_SUFFIX: Granite.Sling.DELETE_SUFFIX,
        TYPEHINT_SUFFIX: Granite.Sling.TYPEHINT_SUFFIX,
        COPY_SUFFIX: Granite.Sling.COPY_SUFFIX,
        MOVE_SUFFIX: Granite.Sling.MOVE_SUFFIX,
        ORDER: Granite.Sling.ORDER,
        REPLACE: Granite.Sling.REPLACE,
        DESTINATION: Granite.Sling.DESTINATION,
        SAVE_PARAM_PREFIX: Granite.Sling.SAVE_PARAM_PREFIX,
        IGNORE_PARAM: Granite.Sling.IGNORE_PARAM,
        REQUEST_LOGIN_PARAM: Granite.Sling.REQUEST_LOGIN_PARAM,
        LOGIN_URL: Granite.Sling.LOGIN_URL,
        LOGOUT_URL: Granite.Sling.LOGOUT_URL,
        processBinaryData: function(a) {
            if (a && a[":jcr:data"] != undefined) {
                var b = new Object();
                b.size = a[":jcr:data"];
                b.type = a["jcr:mimeType"];
                b.date = a["jcr:lastModified"];
                a = b
            }
            return a
        },
        getContentPath: function(c, a, b) {
            var d = a;
            if (d.lastIndexOf(".") > d.lastIndexOf("/")) {
                d = d.substr(0, d.indexOf(".", d.lastIndexOf("/")))
            }
            if (c) {
                if (c.indexOf("/") == 0) {
                    d = c
                } else {
                    if (b) {
                        while (c.indexOf("../") == 0) {
                            c = c.substring(3);
                            d = d.substring(0, d.lastIndexOf("/"))
                        }
                    }
                    c = c.replace("./", "");
                    d = d + "/" + c
                }
            }
            return d
        }
    }
}();
_g.Sling = _g.shared.Sling;
_g.shared.XSS = new function() {
    return {
        getXSSPropertyName: function(a) {
            if (!a) {
                return ""
            }
            if (_g.XSS.KEY_REGEXP.test(a)) {
                return a
            }
            return a += _g.XSS.KEY_SUFFIX
        },
        getXSSRecordPropertyValue: function(e, c, a) {
            var d = "";
            if (e && c) {
                var b = e.get(this.getXSSPropertyName(c));
                if (b) {
                    d = b
                } else {
                    d = e.get(c)
                }
                if (a && !isNaN(a)) {
                    d = _g.Util.ellipsis(d, a, true)
                }
            }
            return d
        },
        getXSSTablePropertyValue: function(d, c, a) {
            var e = "";
            if (d && c) {
                var b = d[this.getXSSPropertyName(c)];
                if (b) {
                    e = b
                } else {
                    e = d[c]
                }
                if (a && !isNaN(a)) {
                    e = _g.Util.ellipsis(e, a, true)
                }
            }
            return e
        },
        getXSSValue: function(a) {
            if (a) {
                return _g.Util.htmlEncode(a)
            } else {
                return ""
            }
        },
        updatePropertyName: function(a, b) {
            if (!a || !b || !a[b]) {
                return
            }
            if (a.xssProtect && !a.xssKeepPropName) {
                a[b] = this.getXSSPropertyName(a[b])
            }
        },
        xssPropertyRenderer: function(d, b, c, a) {
            if (a && a.dataIndex && c && c.data && c.data[this.getXSSPropertyName(a.dataIndex)]) {
                d = c.data[this.getXSSPropertyName(a.dataIndex)];
                if (a.ellipsisLimit && !isNaN(a.ellipsisLimit)) {
                    d = _g.Util.ellipsis(d, a.ellipsisLimit, true)
                }
                return d
            } else {
                if (d) {
                    return d
                } else {
                    return ""
                }
            }
        }
    }
};
_g.XSS = _g.shared.XSS;
_g.XSS.KEY_SUFFIX = "_xss";
_g.XSS.KEY_REGEXP = new RegExp(_g.XSS.KEY_SUFFIX + "$");
_g.shared.I18n = Granite.I18n;
_g.I18n = _g.shared.I18n;
_g.shared.I18n.getMessage = Granite.I18n.get;
_g.shared.I18n.getVarMessage = Granite.I18n.getVar;
_g.shared.String = new function() {
    return {
        startsWith: function(d, b) {
            if (d == null || b == null) {
                return d == null && b == null
            }
            if (b.length > d.length) {
                return false
            }
            var a = d.toString();
            var c = b.toString();
            return (a.indexOf(c) == 0)
        },
        endsWith: function(b, a) {
            if (b == null || a == null) {
                return b == null && a == null
            }
            if (a.length > b.length) {
                return false
            }
            b = b.toString();
            a = a.toString();
            return (b.lastIndexOf(a) == (b.length - a.length))
        },
        contains: function(b, a) {
            if (b == null || a == null) {
                return false
            }
            b = b.toString();
            a = a.toString();
            return (b.indexOf(a) >= 0)
        }
    }
};
_g.String = _g.shared.String;
_g.shared.ClientSidePersistence = function(a) {
    var b = {
        PERSISTENCE_NAME: _g.shared.ClientSidePersistence.decoratePersistenceName("ClientSidePersistence"),
        config: {},
        cache: null,
        getMode: function() {
            return this.config.mode
        },
        getWindow: function() {
            return this.config.window || _g.shared.Util.getTopWindow()
        },
        debug: function() {
            if (console) {
                var c = this.getMap();
                var e = "[ClientSidePersistence -> mode=" + this.getMode().name + ", container=" + (this.config.container || "") + "]\n";
                var d = 0;
                var f = new RegExp("^" + this.config.container + "/");
                for (var h = 0, l = Object.keys(c).sort(), j = null; h < l.length; h++) {
                    var k = l[h];
                    if (this.config.container && (typeof(k) == "string") && !k.match(f)) {
                        continue
                    }
                    var g = c[k];
                    e += "-[" + ++d + "]-> '" + k.replace(f, "") + "' = '" + decodeURIComponent(g) + "'\n"
                }
                if (!d) {
                    e += "(container is empty)"
                }
                console.log(e)
            }
        },
        keyName: function(c) {
            return (this.config.container ? (this.config.container + "/") : "") + c
        },
        getKeys: function() {
            var f = this.getMap();
            var e = [];
            if (f) {
                for (var c in f) {
                    if (this.config.container) {
                        if (c.indexOf(this.config.container + "/") == 0) {
                            var d = c.substring(this.config.container.length + 1);
                            e.push(d)
                        }
                    } else {
                        e.push(c)
                    }
                }
            }
            return e
        },
        get: function(c) {
            var d = this.getMap()[this.keyName(c)];
            return d ? decodeURIComponent(d) : d
        },
        set: function(d, g) {
            d = (typeof d === "string") ? d.replace(/:=/g, "") : "";
            var f = {
                key: d
            };
            d = this.keyName(d);
            if (!d.length) {
                return
            }
            var c = [];
            var h = this.getMap();
            f.action = h[d] ? "update" : "set";
            if (g) {
                h[d] = encodeURIComponent(g)
            } else {
                f.action = "remove";
                delete h[d]
            }
            for (var e in h) {
                c.push(e + ":=" + h[e])
            }
            this.cache = h;
            this.write(c.join("|"));
            _g.$.extend(f, {
                value: g,
                mode: this.getMode().name,
                container: this.config.container
            });
            _g.$(_g.shared.ClientSidePersistence).trigger(_g.shared.ClientSidePersistence.EVENT_NAME, f)
        },
        getMap: function() {
            if (!this.cache || !this.config.useCache) {
                var f = this.read().split("|");
                var d = {};
                for (var c = 0; c < f.length; c++) {
                    var g = f[c].split(":=");
                    var e = g[0];
                    if (e && e.length) {
                        d[e] = g[1] || ""
                    }
                }
                this.cache = d
            }
            return this.cache
        },
        remove: function(c) {
            this.set(c)
        },
        clearMap: function() {
            this.write()
        },
        read: function() {
            return this.config.mode.read(this) || ""
        },
        write: function(c) {
            this.config.mode.write(this, c || "")
        }
    };
    _g.$.extend(b.config, _g.shared.ClientSidePersistence.getDefaultConfig(), a);
    if (b.config.useContainer === false) {
        b.config.container = null
    }
    if ((b.config.mode === _g.shared.ClientSidePersistence.MODE_SESSION) && (!window.sessionStorage || !window.sessionStorage.getItem || !window.sessionStorage.setItem)) {
        b.config.mode = _g.shared.ClientSidePersistence.MODE_LOCAL
    }
    if ((b.config.mode === _g.shared.ClientSidePersistence.MODE_LOCAL) && (!window.localStorage || !window.localStorage.getItem || !window.localStorage.setItem)) {
        b.config.mode = _g.shared.ClientSidePersistence.MODE_WINDOW
    }
    return b
};
_g.shared.ClientSidePersistence.EVENT_NAME = "ClientSidePersistence";
_g.shared.ClientSidePersistence.MODE_SESSION = {
    name: "session",
    read: function(a) {
        return a.getWindow().sessionStorage.getItem(a.PERSISTENCE_NAME)
    },
    write: function(a, b) {
        if (Granite.OptOutUtil.isOptedOut()) {
            return
        }
        a.getWindow().sessionStorage.setItem(a.PERSISTENCE_NAME, b)
    }
};
_g.shared.ClientSidePersistence.MODE_LOCAL = {
    name: "local",
    read: function(a) {
        return a.getWindow().localStorage.getItem(a.PERSISTENCE_NAME)
    },
    write: function(a, b) {
        if (Granite.OptOutUtil.isOptedOut()) {
            return
        }
        a.getWindow().localStorage.setItem(a.PERSISTENCE_NAME, b)
    }
};
_g.shared.ClientSidePersistence.decoratePersistenceName = function(a) {
    return a
};
_g.shared.ClientSidePersistence.MODE_WINDOW = {
    name: "window",
    read: function(a) {
        return a.getWindow().name
    },
    write: function(a, b) {
        if (Granite.OptOutUtil.isOptedOut()) {
            return
        }
        a.getWindow().name = b
    }
};
_g.shared.ClientSidePersistence.MODE_COOKIE = {
    COOKIE_NAME: _g.shared.ClientSidePersistence.decoratePersistenceName("SessionPersistence"),
    name: "cookie",
    read: function(a) {
        return _g.shared.ClientSidePersistence.CookieHelper.read(this.COOKIE_NAME)
    },
    write: function(a, b) {
        if (Granite.OptOutUtil.isOptedOut() && !Granite.OptOutUtil.maySetCookie(this.COOKIE_NAME)) {
            return
        }
        if (!b) {
            _g.shared.ClientSidePersistence.CookieHelper.erase(this.COOKIE_NAME)
        } else {
            _g.shared.ClientSidePersistence.CookieHelper.set(this.COOKIE_NAME, b, 365)
        }
    }
};
_g.shared.ClientSidePersistence.getDefaultConfig = function() {
    return {
        window: _g.shared.Util.getTopWindow(),
        useCache: false,
        container: null,
        mode: _g.shared.ClientSidePersistence.MODE_LOCAL
    }
};
_g.shared.ClientSidePersistence.CookieHelper = {
    set: function(c, d, e) {
        var a = "";
        if (e) {
            var b = new Date();
            b.setTime(b.getTime() + (e * 24 * 60 * 60 * 1000));
            a = "; expires=" + b.toGMTString()
        }
        if (d) {
            d = encodeURIComponent(d)
        }
        document.cookie = c + "=" + d + a + "; path=/"
    },
    read: function(b) {
        var f = b + "=";
        var a = document.cookie.split(";");
        for (var d = 0; d < a.length; d++) {
            var g = a[d];
            while (g.charAt(0) == " ") {
                g = g.substring(1, g.length)
            }
            if (g.indexOf(f) == 0) {
                var e = g.substring(f.length, g.length);
                return e ? decodeURIComponent(e) : null
            }
        }
        return null
    },
    erase: function(a) {
        _g.shared.ClientSidePersistence.CookieHelper.set(a, "", -1)
    }
};
_g.shared.ClientSidePersistence.clearAllMaps = function() {
    var a = [_g.shared.ClientSidePersistence.MODE_COOKIE, _g.shared.ClientSidePersistence.MODE_LOCAL, _g.shared.ClientSidePersistence.MODE_SESSION, _g.shared.ClientSidePersistence.MODE_WINDOW];
    _g.$.each(a, function(d, c) {
        var b = new _g.shared.ClientSidePersistence({
            mode: c
        });
        b.clearMap()
    })
};
_g.I18n.init();
window.CQ = window.CQ || {};
CQ.shared = _g.shared;
CQ.Sling = CQ.shared.Sling;
CQ.I18n = CQ.shared.I18n;
G_XHR_HOOK = typeof CQ_XHR_HOOK != "undefined" ? CQ_XHR_HOOK : undefined;
G_RELOAD_HOOK = typeof CQ_RELOAD_HOOK != "undefined" ? CQ_RELOAD_HOOK : undefined;
G_IS_HOOKED = typeof CQ_IS_HOOKED != "undefined" ? CQ_IS_HOOKED : undefined;
G_CONTENT_PATH = typeof CQ_CONTENT_PATH != "undefined" ? CQ_CONTENT_PATH : undefined;
CQ.shared.Form = function() {
    var e = function() {
        var j = new Object();
        var k = document.getElementsByTagName("label");
        for (var h = 0; h < k.length; h++) {
            var g = k[h].htmlFor;
            if (g) {
                j[g] = k[h]
            }
        }
        return j
    };
    var f = function(h) {
        var j = "";
        var g = function(l) {
            if (l.nodeType == 3) {
                j += l.nodeValue
            }
            if (l.nodeName.toLowerCase() == "select" || l.nodeName.toLowerCase() == "input" || l.nodeName.toLowerCase() == "textarea" || l.nodeName.toLowerCase() == "button") {
                return
            }
            for (var k = 0; l.childNodes && k < l.childNodes.length; k++) {
                g(l.childNodes[k])
            }
        };
        g(h);
        return j
    };
    var c = function(g) {
        return g.replace(/-\d+$/, "")
    };
    var b = function(h, g) {
        if (!g) {
            g = e()
        }
        if (g[h]) {
            return f(g[h])
        }
        return null
    };
    var a = function(j) {
        var h;
        var k = j.nodeName.toLowerCase();
        var g = d(j, "type") ? j.getAttribute("type") : undefined;
        if (k == "input") {
            if (g == "radio" || g == "checkbox") {
                if (d(j, "checked")) {
                    h = j.getAttribute("value")
                }
            } else {
                if (j.type == "text") {
                    h = j.defaultValue
                } else {
                    h = j.value
                }
            }
        } else {
            if (k == "textarea") {
                h = j.value
            } else {
                if (k == "option" && d(j, "selected")) {
                    h = j.getAttribute("value")
                }
            }
        }
        return h
    };
    var d = function(h, g) {
        if (h == null) {
            return false
        }
        return ($CQ(h).attr(g) != undefined)
    };
    return {
        searchArray: function(h, g, k) {
            for (var j = 0; j < h.length; j++) {
                if (h[j][g] && h[j][g] == k) {
                    return h[j]
                }
            }
            return null
        },
        getLabelForField: function(g, j) {
            if (!j) {
                j = e()
            }
            var k = g.getAttribute("id");
            if (k && j[k]) {
                return f(j[k])
            }
            var h = g.parentNode;
            while (h) {
                if (h.nodeName.toLowerCase() == "label") {
                    return f(h)
                }
                h = h.parentNode
            }
            return g.getAttribute("name")
        },
        getFields: function() {
            var k = e();
            var g = [];
            var h = function(o, p) {
                var n = o.getAttribute("name");
                var q = o.nodeName.toLowerCase();
                var s;
                if (q == "input" || q == "textarea") {
                    var m = d(o, "type") ? o.getAttribute("type").toLowerCase() : "text";
                    if (m == "button" || m == "submit" || m == "reset") {
                        return
                    }
                    s = CQ.shared.Form.searchArray(g, "value", n);
                    if (!s) {
                        g.push({
                            text: CQ.shared.Form.getLabelForField(o, k),
                            value: n,
                            name: n,
                            enumeration: undefined,
                            local: p,
                            type: q,
                            defaultValue: a(o),
                            node: o
                        });
                        s = g[g.length - 1]
                    }
                    if (m == "radio" || (s.local && m == "checkbox")) {
                        if (!s.enumeration) {
                            var t = o.getAttribute("id");
                            if (t) {
                                var v = c(t);
                                var u = b(v, k);
                                s.text = (u ? u : n)
                            } else {
                                s.text = n
                            }
                            s.enumeration = []
                        }
                        s.enumeration.push({
                            text: CQ.shared.Form.getLabelForField(o, k),
                            value: o.getAttribute("value"),
                            defaultValue: a(o),
                            node: o
                        })
                    }
                } else {
                    if (q == "select") {
                        g.push({
                            text: CQ.shared.Form.getLabelForField(o, k),
                            value: n,
                            name: n,
                            enumeration: [],
                            local: p,
                            type: q,
                            defaultValue: undefined,
                            node: o
                        });
                        s = g[g.length - 1];
                        var l = o.getElementsByTagName("option");
                        for (var r = 0; r < l.length; r++) {
                            s.enumeration.push({
                                text: l[r].innerHTML,
                                value: l[r].getAttribute("value"),
                                defaultValue: a(l[r]),
                                node: l[r]
                            })
                        }
                    }
                }
            };
            var j = function(n, m) {
                if (n.nodeName.toLowerCase() == "div" && $CQ(n).hasClass("section")) {
                    m = true
                }
                if (n.getAttribute && n.getAttribute("name")) {
                    h(n, m)
                }
                for (var l = 0; n.childNodes && l < n.childNodes.length; l++) {
                    var o = n.childNodes[l];
                    if (o.nodeType == 1) {
                        j(o, m)
                    }
                }
            };
            j(document, false);
            return g
        }
    }
}();
CQ.shared.User = function(infoData) {
    return {
        data: null,
        language: null,
        userPropsPath: null,
        getUserPropsUrl: function() {
            if (!this.userPropsPath) {
                this.userPropsPath = CQ.shared.User.PROXY_URI
            }
            return this.userPropsPath
        },
        load: function() {
            var url = this.getUserPropsUrl();
            url = CQ.shared.HTTP.noCaching(url);
            var response = CQ.shared.HTTP.get(url);
            if (CQ.shared.HTTP.isOk(response)) {
                this.data = CQ.shared.Util.eval(response)
            }
        },
        init: function(infoData, force) {
            if (!this.initialized || force) {
                if (infoData) {
                    this.data = infoData
                } else {
                    this.load()
                }
                this.initialized = true
            }
            return this.data
        },
        lazyInit: function() {
            this.lazyLoad = function() {
                this.load();
                this.initialized = true
            }
        },
        isInitialized: function() {
            return this.initialized
        },
        getLanguage: function() {
            if (!this.isInitialized() && this.lazyLoad) {
                this.lazyLoad.call(this)
            }
            this.language = this.data && this.data.preferences && this.data.preferences["language"] ? this.data.preferences["language"] : "en";
            return this.language
        }
    }
}();
CQ.shared.User.PROXY_URI = CQ.shared.HTTP.externalize("/libs/cq/security/userinfo" + CQ.shared.HTTP.EXTENSION_JSON);
CQ.shared.User.lazyInit();
CQ.shared.I18n.init({
    locale: function() {
        return CQ.shared.User.getLanguage()
    },
    urlPrefix: "/libs/cq/i18n/dict."
});
/*! jQuery UI - v1.9.2 - 2012-11-23
 * http://jqueryui.com
 * Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.position.js, jquery.ui.accordion.js, jquery.ui.autocomplete.js, jquery.ui.button.js, jquery.ui.datepicker.js, jquery.ui.dialog.js, jquery.ui.draggable.js, jquery.ui.droppable.js, jquery.ui.effect.js, jquery.ui.effect-blind.js, jquery.ui.effect-bounce.js, jquery.ui.effect-clip.js, jquery.ui.effect-drop.js, jquery.ui.effect-explode.js, jquery.ui.effect-fade.js, jquery.ui.effect-fold.js, jquery.ui.effect-highlight.js, jquery.ui.effect-pulsate.js, jquery.ui.effect-scale.js, jquery.ui.effect-shake.js, jquery.ui.effect-slide.js, jquery.ui.effect-transfer.js, jquery.ui.menu.js, jquery.ui.progressbar.js, jquery.ui.resizable.js, jquery.ui.selectable.js, jquery.ui.slider.js, jquery.ui.sortable.js, jquery.ui.spinner.js, jquery.ui.tabs.js, jquery.ui.tooltip.js
 * Copyright (c) 2012 jQuery Foundation and other contributors Licensed MIT */
(function(b, f) {
    var a = 0,
        e = /^ui-id-\d+$/;
    b.ui = b.ui || {};
    if (b.ui.version) {
        return
    }
    b.extend(b.ui, {
        version: "1.9.2",
        keyCode: {
            BACKSPACE: 8,
            COMMA: 188,
            DELETE: 46,
            DOWN: 40,
            END: 35,
            ENTER: 13,
            ESCAPE: 27,
            HOME: 36,
            LEFT: 37,
            NUMPAD_ADD: 107,
            NUMPAD_DECIMAL: 110,
            NUMPAD_DIVIDE: 111,
            NUMPAD_ENTER: 108,
            NUMPAD_MULTIPLY: 106,
            NUMPAD_SUBTRACT: 109,
            PAGE_DOWN: 34,
            PAGE_UP: 33,
            PERIOD: 190,
            RIGHT: 39,
            SPACE: 32,
            TAB: 9,
            UP: 38
        }
    });
    b.fn.extend({
        _focus: b.fn.focus,
        focus: function(g, h) {
            return typeof g === "number" ? this.each(function() {
                var j = this;
                setTimeout(function() {
                    b(j).focus();
                    if (h) {
                        h.call(j)
                    }
                }, g)
            }) : this._focus.apply(this, arguments)
        },
        scrollParent: function() {
            var g;
            if ((b.ui.ie && (/(static|relative)/).test(this.css("position"))) || (/absolute/).test(this.css("position"))) {
                g = this.parents().filter(function() {
                    return (/(relative|absolute|fixed)/).test(b.css(this, "position")) && (/(auto|scroll)/).test(b.css(this, "overflow") + b.css(this, "overflow-y") + b.css(this, "overflow-x"))
                }).eq(0)
            } else {
                g = this.parents().filter(function() {
                    return (/(auto|scroll)/).test(b.css(this, "overflow") + b.css(this, "overflow-y") + b.css(this, "overflow-x"))
                }).eq(0)
            }
            return (/fixed/).test(this.css("position")) || !g.length ? b(document) : g
        },
        zIndex: function(k) {
            if (k !== f) {
                return this.css("zIndex", k)
            }
            if (this.length) {
                var h = b(this[0]),
                    g, j;
                while (h.length && h[0] !== document) {
                    g = h.css("position");
                    if (g === "absolute" || g === "relative" || g === "fixed") {
                        j = parseInt(h.css("zIndex"), 10);
                        if (!isNaN(j) && j !== 0) {
                            return j
                        }
                    }
                    h = h.parent()
                }
            }
            return 0
        },
        uniqueId: function() {
            return this.each(function() {
                if (!this.id) {
                    this.id = "ui-id-" + (++a)
                }
            })
        },
        removeUniqueId: function() {
            return this.each(function() {
                if (e.test(this.id)) {
                    b(this).removeAttr("id")
                }
            })
        }
    });

    function d(j, g) {
        var l, k, h, m = j.nodeName.toLowerCase();
        if ("area" === m) {
            l = j.parentNode;
            k = l.name;
            if (!j.href || !k || l.nodeName.toLowerCase() !== "map") {
                return false
            }
            h = b("img[usemap=#" + k + "]")[0];
            return !!h && c(h)
        }
        return (/input|select|textarea|button|object/.test(m) ? !j.disabled : "a" === m ? j.href || g : g) && c(j)
    }

    function c(g) {
        return b.expr.filters.visible(g) && !b(g).parents().andSelf().filter(function() {
            return b.css(this, "visibility") === "hidden"
        }).length
    }
    b.extend(b.expr[":"], {
        data: b.expr.createPseudo ? b.expr.createPseudo(function(g) {
            return function(h) {
                return !!b.data(h, g)
            }
        }) : function(j, h, g) {
            return !!b.data(j, g[3])
        },
        focusable: function(g) {
            return d(g, !isNaN(b.attr(g, "tabindex")))
        },
        tabbable: function(j) {
            var g = b.attr(j, "tabindex"),
                h = isNaN(g);
            return (h || g >= 0) && d(j, !h)
        }
    });
    b(function() {
        var g = document.body,
            h = g.appendChild(h = document.createElement("div"));
        h.offsetHeight;
        b.extend(h.style, {
            minHeight: "100px",
            height: "auto",
            padding: 0,
            borderWidth: 0
        });
        b.support.minHeight = h.offsetHeight === 100;
        b.support.selectstart = "onselectstart" in h;
        g.removeChild(h).style.display = "none"
    });
    if (!b("<a>").outerWidth(1).jquery) {
        b.each(["Width", "Height"], function(j, g) {
            var h = g === "Width" ? ["Left", "Right"] : ["Top", "Bottom"],
                k = g.toLowerCase(),
                m = {
                    innerWidth: b.fn.innerWidth,
                    innerHeight: b.fn.innerHeight,
                    outerWidth: b.fn.outerWidth,
                    outerHeight: b.fn.outerHeight
                };

            function l(p, o, n, q) {
                b.each(h, function() {
                    o -= parseFloat(b.css(p, "padding" + this)) || 0;
                    if (n) {
                        o -= parseFloat(b.css(p, "border" + this + "Width")) || 0
                    }
                    if (q) {
                        o -= parseFloat(b.css(p, "margin" + this)) || 0
                    }
                });
                return o
            }
            b.fn["inner" + g] = function(n) {
                if (n === f) {
                    return m["inner" + g].call(this)
                }
                return this.each(function() {
                    b(this).css(k, l(this, n) + "px")
                })
            };
            b.fn["outer" + g] = function(n, o) {
                if (typeof n !== "number") {
                    return m["outer" + g].call(this, n)
                }
                return this.each(function() {
                    b(this).css(k, l(this, n, true, o) + "px")
                })
            }
        })
    }
    if (b("<a>").data("a-b", "a").removeData("a-b").data("a-b")) {
        b.fn.removeData = (function(g) {
            return function(h) {
                if (arguments.length) {
                    return g.call(this, b.camelCase(h))
                } else {
                    return g.call(this)
                }
            }
        })(b.fn.removeData)
    }(function() {
        var g = /msie ([\w.]+)/.exec(navigator.userAgent.toLowerCase()) || [];
        b.ui.ie = g.length ? true : false;
        b.ui.ie6 = parseFloat(g[1], 10) === 6
    })();
    b.fn.extend({
        disableSelection: function() {
            return this.bind((b.support.selectstart ? "selectstart" : "mousedown") + ".ui-disableSelection", function(g) {
                g.preventDefault()
            })
        },
        enableSelection: function() {
            return this.unbind(".ui-disableSelection")
        }
    });
    b.extend(b.ui, {
        plugin: {
            add: function(h, j, l) {
                var g, k = b.ui[h].prototype;
                for (g in l) {
                    k.plugins[g] = k.plugins[g] || [];
                    k.plugins[g].push([j, l[g]])
                }
            },
            call: function(g, j, h) {
                var k, l = g.plugins[j];
                if (!l || !g.element[0].parentNode || g.element[0].parentNode.nodeType === 11) {
                    return
                }
                for (k = 0; k < l.length; k++) {
                    if (g.options[l[k][0]]) {
                        l[k][1].apply(g.element, h)
                    }
                }
            }
        },
        contains: b.contains,
        hasScroll: function(k, h) {
            if (b(k).css("overflow") === "hidden") {
                return false
            }
            var g = (h && h === "left") ? "scrollLeft" : "scrollTop",
                j = false;
            if (k[g] > 0) {
                return true
            }
            k[g] = 1;
            j = (k[g] > 0);
            k[g] = 0;
            return j
        },
        isOverAxis: function(h, g, j) {
            return (h > g) && (h < (g + j))
        },
        isOver: function(m, h, l, k, g, j) {
            return b.ui.isOverAxis(m, l, g) && b.ui.isOverAxis(h, k, j)
        }
    })
})(jQuery);
(function(b, e) {
    var a = 0,
        d = Array.prototype.slice,
        c = b.cleanData;
    b.cleanData = function(f) {
        for (var g = 0, h;
            (h = f[g]) != null; g++) {
            try {
                b(h).triggerHandler("remove")
            } catch (j) {}
        }
        c(f)
    };
    b.widget = function(g, k, f) {
        var n, m, j, l, h = g.split(".")[0];
        g = g.split(".")[1];
        n = h + "-" + g;
        if (!f) {
            f = k;
            k = b.Widget
        }
        b.expr[":"][n.toLowerCase()] = function(o) {
            return !!b.data(o, n)
        };
        b[h] = b[h] || {};
        m = b[h][g];
        j = b[h][g] = function(o, p) {
            if (!this._createWidget) {
                return new j(o, p)
            }
            if (arguments.length) {
                this._createWidget(o, p)
            }
        };
        b.extend(j, m, {
            version: f.version,
            _proto: b.extend({}, f),
            _childConstructors: []
        });
        l = new k();
        l.options = b.widget.extend({}, l.options);
        b.each(f, function(p, o) {
            if (b.isFunction(o)) {
                f[p] = (function() {
                    var q = function() {
                            return k.prototype[p].apply(this, arguments)
                        },
                        r = function(s) {
                            return k.prototype[p].apply(this, s)
                        };
                    return function() {
                        var u = this._super,
                            s = this._superApply,
                            t;
                        this._super = q;
                        this._superApply = r;
                        t = o.apply(this, arguments);
                        this._super = u;
                        this._superApply = s;
                        return t
                    }
                })()
            }
        });
        j.prototype = b.widget.extend(l, {
            widgetEventPrefix: m ? l.widgetEventPrefix : g
        }, f, {
            constructor: j,
            namespace: h,
            widgetName: g,
            widgetBaseClass: n,
            widgetFullName: n
        });
        if (m) {
            b.each(m._childConstructors, function(p, q) {
                var o = q.prototype;
                b.widget(o.namespace + "." + o.widgetName, j, q._proto)
            });
            delete m._childConstructors
        } else {
            k._childConstructors.push(j)
        }
        b.widget.bridge(g, j)
    };
    b.widget.extend = function(l) {
        var g = d.call(arguments, 1),
            k = 0,
            f = g.length,
            h, j;
        for (; k < f; k++) {
            for (h in g[k]) {
                j = g[k][h];
                if (g[k].hasOwnProperty(h) && j !== e) {
                    if (b.isPlainObject(j)) {
                        l[h] = b.isPlainObject(l[h]) ? b.widget.extend({}, l[h], j) : b.widget.extend({}, j)
                    } else {
                        l[h] = j
                    }
                }
            }
        }
        return l
    };
    b.widget.bridge = function(g, f) {
        var h = f.prototype.widgetFullName || g;
        b.fn[g] = function(l) {
            var j = typeof l === "string",
                k = d.call(arguments, 1),
                m = this;
            l = !j && k.length ? b.widget.extend.apply(null, [l].concat(k)) : l;
            if (j) {
                this.each(function() {
                    var o, n = b.data(this, h);
                    if (!n) {
                        return b.error("cannot call methods on " + g + " prior to initialization; attempted to call method '" + l + "'")
                    }
                    if (!b.isFunction(n[l]) || l.charAt(0) === "_") {
                        return b.error("no such method '" + l + "' for " + g + " widget instance")
                    }
                    o = n[l].apply(n, k);
                    if (o !== n && o !== e) {
                        m = o && o.jquery ? m.pushStack(o.get()) : o;
                        return false
                    }
                })
            } else {
                this.each(function() {
                    var n = b.data(this, h);
                    if (n) {
                        n.option(l || {})._init()
                    } else {
                        b.data(this, h, new f(l, this))
                    }
                })
            }
            return m
        }
    };
    b.Widget = function() {};
    b.Widget._childConstructors = [];
    b.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",
        options: {
            disabled: false,
            create: null
        },
        _createWidget: function(f, g) {
            g = b(g || this.defaultElement || this)[0];
            this.element = b(g);
            this.uuid = a++;
            this.eventNamespace = "." + this.widgetName + this.uuid;
            this.options = b.widget.extend({}, this.options, this._getCreateOptions(), f);
            this.bindings = b();
            this.hoverable = b();
            this.focusable = b();
            if (g !== this) {
                b.data(g, this.widgetName, this);
                b.data(g, this.widgetFullName, this);
                this._on(true, this.element, {
                    remove: function(h) {
                        if (h.target === g) {
                            this.destroy()
                        }
                    }
                });
                this.document = b(g.style ? g.ownerDocument : g.document || g);
                this.window = b(this.document[0].defaultView || this.document[0].parentWindow)
            }
            this._create();
            this._trigger("create", null, this._getCreateEventData());
            this._init()
        },
        _getCreateOptions: b.noop,
        _getCreateEventData: b.noop,
        _create: b.noop,
        _init: b.noop,
        destroy: function() {
            this._destroy();
            this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(b.camelCase(this.widgetFullName));
            this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled ui-state-disabled");
            this.bindings.unbind(this.eventNamespace);
            this.hoverable.removeClass("ui-state-hover");
            this.focusable.removeClass("ui-state-focus")
        },
        _destroy: b.noop,
        widget: function() {
            return this.element
        },
        option: function(j, k) {
            var f = j,
                l, h, g;
            if (arguments.length === 0) {
                return b.widget.extend({}, this.options)
            }
            if (typeof j === "string") {
                f = {};
                l = j.split(".");
                j = l.shift();
                if (l.length) {
                    h = f[j] = b.widget.extend({}, this.options[j]);
                    for (g = 0; g < l.length - 1; g++) {
                        h[l[g]] = h[l[g]] || {};
                        h = h[l[g]]
                    }
                    j = l.pop();
                    if (k === e) {
                        return h[j] === e ? null : h[j]
                    }
                    h[j] = k
                } else {
                    if (k === e) {
                        return this.options[j] === e ? null : this.options[j]
                    }
                    f[j] = k
                }
            }
            this._setOptions(f);
            return this
        },
        _setOptions: function(f) {
            var g;
            for (g in f) {
                this._setOption(g, f[g])
            }
            return this
        },
        _setOption: function(f, g) {
            this.options[f] = g;
            if (f === "disabled") {
                this.widget().toggleClass(this.widgetFullName + "-disabled ui-state-disabled", !!g).attr("aria-disabled", g);
                this.hoverable.removeClass("ui-state-hover");
                this.focusable.removeClass("ui-state-focus")
            }
            return this
        },
        enable: function() {
            return this._setOption("disabled", false)
        },
        disable: function() {
            return this._setOption("disabled", true)
        },
        _on: function(j, h, g) {
            var k, f = this;
            if (typeof j !== "boolean") {
                g = h;
                h = j;
                j = false
            }
            if (!g) {
                g = h;
                h = this.element;
                k = this.widget()
            } else {
                h = k = b(h);
                this.bindings = this.bindings.add(h)
            }
            b.each(g, function(q, p) {
                function n() {
                    if (!j && (f.options.disabled === true || b(this).hasClass("ui-state-disabled"))) {
                        return
                    }
                    return (typeof p === "string" ? f[p] : p).apply(f, arguments)
                }
                if (typeof p !== "string") {
                    n.guid = p.guid = p.guid || n.guid || b.guid++
                }
                var o = q.match(/^(\w+)\s*(.*)$/),
                    m = o[1] + f.eventNamespace,
                    l = o[2];
                if (l) {
                    k.delegate(l, m, n)
                } else {
                    h.bind(m, n)
                }
            })
        },
        _off: function(g, f) {
            f = (f || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace;
            g.unbind(f).undelegate(f)
        },
        _delay: function(j, h) {
            function g() {
                return (typeof j === "string" ? f[j] : j).apply(f, arguments)
            }
            var f = this;
            return setTimeout(g, h || 0)
        },
        _hoverable: function(f) {
            this.hoverable = this.hoverable.add(f);
            this._on(f, {
                mouseenter: function(g) {
                    b(g.currentTarget).addClass("ui-state-hover")
                },
                mouseleave: function(g) {
                    b(g.currentTarget).removeClass("ui-state-hover")
                }
            })
        },
        _focusable: function(f) {
            this.focusable = this.focusable.add(f);
            this._on(f, {
                focusin: function(g) {
                    b(g.currentTarget).addClass("ui-state-focus")
                },
                focusout: function(g) {
                    b(g.currentTarget).removeClass("ui-state-focus")
                }
            })
        },
        _trigger: function(f, g, h) {
            var l, k, j = this.options[f];
            h = h || {};
            g = b.Event(g);
            g.type = (f === this.widgetEventPrefix ? f : this.widgetEventPrefix + f).toLowerCase();
            g.target = this.element[0];
            k = g.originalEvent;
            if (k) {
                for (l in k) {
                    if (!(l in g)) {
                        g[l] = k[l]
                    }
                }
            }
            this.element.trigger(g, h);
            return !(b.isFunction(j) && j.apply(this.element[0], [g].concat(h)) === false || g.isDefaultPrevented())
        }
    };
    b.each({
        show: "fadeIn",
        hide: "fadeOut"
    }, function(g, f) {
        b.Widget.prototype["_" + g] = function(k, j, m) {
            if (typeof j === "string") {
                j = {
                    effect: j
                }
            }
            var l, h = !j ? g : j === true || typeof j === "number" ? f : j.effect || f;
            j = j || {};
            if (typeof j === "number") {
                j = {
                    duration: j
                }
            }
            l = !b.isEmptyObject(j);
            j.complete = m;
            if (j.delay) {
                k.delay(j.delay)
            }
            if (l && b.effects && (b.effects.effect[h] || b.uiBackCompat !== false && b.effects[h])) {
                k[g](j)
            } else {
                if (h !== g && k[h]) {
                    k[h](j.duration, j.easing, m)
                } else {
                    k.queue(function(n) {
                        b(this)[g]();
                        if (m) {
                            m.call(k[0])
                        }
                        n()
                    })
                }
            }
        }
    });
    if (b.uiBackCompat !== false) {
        b.Widget.prototype._getCreateOptions = function() {
            return b.metadata && b.metadata.get(this.element[0])[this.widgetName]
        }
    }
})(jQuery);
(function(b, c) {
    var a = false;
    b(document).mouseup(function(d) {
        a = false
    });
    b.widget("ui.mouse", {
        version: "1.9.2",
        options: {
            cancel: "input,textarea,button,select,option",
            distance: 1,
            delay: 0
        },
        _mouseInit: function() {
            var d = this;
            this.element.bind("mousedown." + this.widgetName, function(e) {
                return d._mouseDown(e)
            }).bind("click." + this.widgetName, function(e) {
                if (true === b.data(e.target, d.widgetName + ".preventClickEvent")) {
                    b.removeData(e.target, d.widgetName + ".preventClickEvent");
                    e.stopImmediatePropagation();
                    return false
                }
            });
            this.started = false
        },
        _mouseDestroy: function() {
            this.element.unbind("." + this.widgetName);
            if (this._mouseMoveDelegate) {
                b(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate)
            }
        },
        _mouseDown: function(f) {
            if (a) {
                return
            }(this._mouseStarted && this._mouseUp(f));
            this._mouseDownEvent = f;
            var e = this,
                g = (f.which === 1),
                d = (typeof this.options.cancel === "string" && f.target.nodeName ? b(f.target).closest(this.options.cancel).length : false);
            if (!g || d || !this._mouseCapture(f)) {
                return true
            }
            this.mouseDelayMet = !this.options.delay;
            if (!this.mouseDelayMet) {
                this._mouseDelayTimer = setTimeout(function() {
                    e.mouseDelayMet = true
                }, this.options.delay)
            }
            if (this._mouseDistanceMet(f) && this._mouseDelayMet(f)) {
                this._mouseStarted = (this._mouseStart(f) !== false);
                if (!this._mouseStarted) {
                    f.preventDefault();
                    return true
                }
            }
            if (true === b.data(f.target, this.widgetName + ".preventClickEvent")) {
                b.removeData(f.target, this.widgetName + ".preventClickEvent")
            }
            this._mouseMoveDelegate = function(h) {
                return e._mouseMove(h)
            };
            this._mouseUpDelegate = function(h) {
                return e._mouseUp(h)
            };
            b(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate);
            f.preventDefault();
            a = true;
            return true
        },
        _mouseMove: function(d) {
            if (b.ui.ie && !(document.documentMode >= 9) && !d.button) {
                return this._mouseUp(d)
            }
            if (this._mouseStarted) {
                this._mouseDrag(d);
                return d.preventDefault()
            }
            if (this._mouseDistanceMet(d) && this._mouseDelayMet(d)) {
                this._mouseStarted = (this._mouseStart(this._mouseDownEvent, d) !== false);
                (this._mouseStarted ? this._mouseDrag(d) : this._mouseUp(d))
            }
            return !this._mouseStarted
        },
        _mouseUp: function(d) {
            b(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate);
            if (this._mouseStarted) {
                this._mouseStarted = false;
                if (d.target === this._mouseDownEvent.target) {
                    b.data(d.target, this.widgetName + ".preventClickEvent", true)
                }
                this._mouseStop(d)
            }
            return false
        },
        _mouseDistanceMet: function(d) {
            return (Math.max(Math.abs(this._mouseDownEvent.pageX - d.pageX), Math.abs(this._mouseDownEvent.pageY - d.pageY)) >= this.options.distance)
        },
        _mouseDelayMet: function(d) {
            return this.mouseDelayMet
        },
        _mouseStart: function(d) {},
        _mouseDrag: function(d) {},
        _mouseStop: function(d) {},
        _mouseCapture: function(d) {
            return true
        }
    })
})(jQuery);
(function(e, c) {
    e.ui = e.ui || {};
    var j, k = Math.max,
        o = Math.abs,
        m = Math.round,
        d = /left|center|right/,
        g = /top|center|bottom/,
        a = /[\+\-]\d+%?/,
        l = /^\w+/,
        b = /%$/,
        f = e.fn.position;

    function n(r, q, p) {
        return [parseInt(r[0], 10) * (b.test(r[0]) ? q / 100 : 1), parseInt(r[1], 10) * (b.test(r[1]) ? p / 100 : 1)]
    }

    function h(p, q) {
        return parseInt(e.css(p, q), 10) || 0
    }
    e.position = {
        scrollbarWidth: function() {
            if (j !== c) {
                return j
            }
            var q, p, s = e("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),
                r = s.children()[0];
            e("body").append(s);
            q = r.offsetWidth;
            s.css("overflow", "scroll");
            p = r.offsetWidth;
            if (q === p) {
                p = s[0].clientWidth
            }
            s.remove();
            return (j = q - p)
        },
        getScrollInfo: function(t) {
            var s = t.isWindow ? "" : t.element.css("overflow-x"),
                r = t.isWindow ? "" : t.element.css("overflow-y"),
                q = s === "scroll" || (s === "auto" && t.width < t.element[0].scrollWidth),
                p = r === "scroll" || (r === "auto" && t.height < t.element[0].scrollHeight);
            return {
                width: q ? e.position.scrollbarWidth() : 0,
                height: p ? e.position.scrollbarWidth() : 0
            }
        },
        getWithinInfo: function(q) {
            var r = e(q || window),
                p = e.isWindow(r[0]);
            return {
                element: r,
                isWindow: p,
                offset: r.offset() || {
                    left: 0,
                    top: 0
                },
                scrollLeft: r.scrollLeft(),
                scrollTop: r.scrollTop(),
                width: p ? r.width() : r.outerWidth(),
                height: p ? r.height() : r.outerHeight()
            }
        }
    };
    e.fn.position = function(z) {
        if (!z || !z.of) {
            return f.apply(this, arguments)
        }
        z = e.extend({}, z);
        var A, w, t, y, s, v = e(z.of),
            r = e.position.getWithinInfo(z.within),
            p = e.position.getScrollInfo(r),
            u = v[0],
            x = (z.collision || "flip").split(" "),
            q = {};
        if (u.nodeType === 9) {
            w = v.width();
            t = v.height();
            y = {
                top: 0,
                left: 0
            }
        } else {
            if (e.isWindow(u)) {
                w = v.width();
                t = v.height();
                y = {
                    top: v.scrollTop(),
                    left: v.scrollLeft()
                }
            } else {
                if (u.preventDefault) {
                    z.at = "left top";
                    w = t = 0;
                    y = {
                        top: u.pageY,
                        left: u.pageX
                    }
                } else {
                    w = v.outerWidth();
                    t = v.outerHeight();
                    y = v.offset()
                }
            }
        }
        s = e.extend({}, y);
        e.each(["my", "at"], function() {
            var D = (z[this] || "").split(" "),
                C, B;
            if (D.length === 1) {
                D = d.test(D[0]) ? D.concat(["center"]) : g.test(D[0]) ? ["center"].concat(D) : ["center", "center"]
            }
            D[0] = d.test(D[0]) ? D[0] : "center";
            D[1] = g.test(D[1]) ? D[1] : "center";
            C = a.exec(D[0]);
            B = a.exec(D[1]);
            q[this] = [C ? C[0] : 0, B ? B[0] : 0];
            z[this] = [l.exec(D[0])[0], l.exec(D[1])[0]]
        });
        if (x.length === 1) {
            x[1] = x[0]
        }
        if (z.at[0] === "right") {
            s.left += w
        } else {
            if (z.at[0] === "center") {
                s.left += w / 2
            }
        }
        if (z.at[1] === "bottom") {
            s.top += t
        } else {
            if (z.at[1] === "center") {
                s.top += t / 2
            }
        }
        A = n(q.at, w, t);
        s.left += A[0];
        s.top += A[1];
        return this.each(function() {
            var C, L, E = e(this),
                G = E.outerWidth(),
                D = E.outerHeight(),
                F = h(this, "marginLeft"),
                B = h(this, "marginTop"),
                K = G + F + h(this, "marginRight") + p.width,
                J = D + B + h(this, "marginBottom") + p.height,
                H = e.extend({}, s),
                I = n(q.my, E.outerWidth(), E.outerHeight());
            if (z.my[0] === "right") {
                H.left -= G
            } else {
                if (z.my[0] === "center") {
                    H.left -= G / 2
                }
            }
            if (z.my[1] === "bottom") {
                H.top -= D
            } else {
                if (z.my[1] === "center") {
                    H.top -= D / 2
                }
            }
            H.left += I[0];
            H.top += I[1];
            if (!e.support.offsetFractions) {
                H.left = m(H.left);
                H.top = m(H.top)
            }
            C = {
                marginLeft: F,
                marginTop: B
            };
            e.each(["left", "top"], function(N, M) {
                if (e.ui.position[x[N]]) {
                    e.ui.position[x[N]][M](H, {
                        targetWidth: w,
                        targetHeight: t,
                        elemWidth: G,
                        elemHeight: D,
                        collisionPosition: C,
                        collisionWidth: K,
                        collisionHeight: J,
                        offset: [A[0] + I[0], A[1] + I[1]],
                        my: z.my,
                        at: z.at,
                        within: r,
                        elem: E
                    })
                }
            });
            if (e.fn.bgiframe) {
                E.bgiframe()
            }
            if (z.using) {
                L = function(P) {
                    var R = y.left - H.left,
                        O = R + w - G,
                        Q = y.top - H.top,
                        N = Q + t - D,
                        M = {
                            target: {
                                element: v,
                                left: y.left,
                                top: y.top,
                                width: w,
                                height: t
                            },
                            element: {
                                element: E,
                                left: H.left,
                                top: H.top,
                                width: G,
                                height: D
                            },
                            horizontal: O < 0 ? "left" : R > 0 ? "right" : "center",
                            vertical: N < 0 ? "top" : Q > 0 ? "bottom" : "middle"
                        };
                    if (w < G && o(R + O) < w) {
                        M.horizontal = "center"
                    }
                    if (t < D && o(Q + N) < t) {
                        M.vertical = "middle"
                    }
                    if (k(o(R), o(O)) > k(o(Q), o(N))) {
                        M.important = "horizontal"
                    } else {
                        M.important = "vertical"
                    }
                    z.using.call(this, P, M)
                }
            }
            E.offset(e.extend(H, {
                using: L
            }))
        })
    };
    e.ui.position = {
        fit: {
            left: function(t, s) {
                var r = s.within,
                    v = r.isWindow ? r.scrollLeft : r.offset.left,
                    x = r.width,
                    u = t.left - s.collisionPosition.marginLeft,
                    w = v - u,
                    q = u + s.collisionWidth - x - v,
                    p;
                if (s.collisionWidth > x) {
                    if (w > 0 && q <= 0) {
                        p = t.left + w + s.collisionWidth - x - v;
                        t.left += w - p
                    } else {
                        if (q > 0 && w <= 0) {
                            t.left = v
                        } else {
                            if (w > q) {
                                t.left = v + x - s.collisionWidth
                            } else {
                                t.left = v
                            }
                        }
                    }
                } else {
                    if (w > 0) {
                        t.left += w
                    } else {
                        if (q > 0) {
                            t.left -= q
                        } else {
                            t.left = k(t.left - u, t.left)
                        }
                    }
                }
            },
            top: function(s, r) {
                var q = r.within,
                    w = q.isWindow ? q.scrollTop : q.offset.top,
                    x = r.within.height,
                    u = s.top - r.collisionPosition.marginTop,
                    v = w - u,
                    t = u + r.collisionHeight - x - w,
                    p;
                if (r.collisionHeight > x) {
                    if (v > 0 && t <= 0) {
                        p = s.top + v + r.collisionHeight - x - w;
                        s.top += v - p
                    } else {
                        if (t > 0 && v <= 0) {
                            s.top = w
                        } else {
                            if (v > t) {
                                s.top = w + x - r.collisionHeight
                            } else {
                                s.top = w
                            }
                        }
                    }
                } else {
                    if (v > 0) {
                        s.top += v
                    } else {
                        if (t > 0) {
                            s.top -= t
                        } else {
                            s.top = k(s.top - u, s.top)
                        }
                    }
                }
            }
        },
        flip: {
            left: function(v, u) {
                var t = u.within,
                    z = t.offset.left + t.scrollLeft,
                    C = t.width,
                    r = t.isWindow ? t.scrollLeft : t.offset.left,
                    w = v.left - u.collisionPosition.marginLeft,
                    A = w - r,
                    q = w + u.collisionWidth - C - r,
                    y = u.my[0] === "left" ? -u.elemWidth : u.my[0] === "right" ? u.elemWidth : 0,
                    B = u.at[0] === "left" ? u.targetWidth : u.at[0] === "right" ? -u.targetWidth : 0,
                    s = -2 * u.offset[0],
                    p, x;
                if (A < 0) {
                    p = v.left + y + B + s + u.collisionWidth - C - z;
                    if (p < 0 || p < o(A)) {
                        v.left += y + B + s
                    }
                } else {
                    if (q > 0) {
                        x = v.left - u.collisionPosition.marginLeft + y + B + s - r;
                        if (x > 0 || o(x) < q) {
                            v.left += y + B + s
                        }
                    }
                }
            },
            top: function(u, t) {
                var s = t.within,
                    B = s.offset.top + s.scrollTop,
                    C = s.height,
                    p = s.isWindow ? s.scrollTop : s.offset.top,
                    w = u.top - t.collisionPosition.marginTop,
                    y = w - p,
                    v = w + t.collisionHeight - C - p,
                    z = t.my[1] === "top",
                    x = z ? -t.elemHeight : t.my[1] === "bottom" ? t.elemHeight : 0,
                    D = t.at[1] === "top" ? t.targetHeight : t.at[1] === "bottom" ? -t.targetHeight : 0,
                    r = -2 * t.offset[1],
                    A, q;
                if (y < 0) {
                    q = u.top + x + D + r + t.collisionHeight - C - B;
                    if ((u.top + x + D + r) > y && (q < 0 || q < o(y))) {
                        u.top += x + D + r
                    }
                } else {
                    if (v > 0) {
                        A = u.top - t.collisionPosition.marginTop + x + D + r - p;
                        if ((u.top + x + D + r) > v && (A > 0 || o(A) < v)) {
                            u.top += x + D + r
                        }
                    }
                }
            }
        },
        flipfit: {
            left: function() {
                e.ui.position.flip.left.apply(this, arguments);
                e.ui.position.fit.left.apply(this, arguments)
            },
            top: function() {
                e.ui.position.flip.top.apply(this, arguments);
                e.ui.position.fit.top.apply(this, arguments)
            }
        }
    };
    (function() {
        var t, v, q, s, r, p = document.getElementsByTagName("body")[0],
            u = document.createElement("div");
        t = document.createElement(p ? "div" : "body");
        q = {
            visibility: "hidden",
            width: 0,
            height: 0,
            border: 0,
            margin: 0,
            background: "none"
        };
        if (p) {
            e.extend(q, {
                position: "absolute",
                left: "-1000px",
                top: "-1000px"
            })
        }
        for (r in q) {
            t.style[r] = q[r]
        }
        t.appendChild(u);
        v = p || document.documentElement;
        v.insertBefore(t, v.firstChild);
        u.style.cssText = "position: absolute; left: 10.7432222px;";
        s = e(u).offset().left;
        e.support.offsetFractions = s > 10 && s < 11;
        t.innerHTML = "";
        v.removeChild(t)
    })();
    if (e.uiBackCompat !== false) {
        (function(q) {
            var p = q.fn.position;
            q.fn.position = function(s) {
                if (!s || !s.offset) {
                    return p.call(this, s)
                }
                var t = s.offset.split(" "),
                    r = s.at.split(" ");
                if (t.length === 1) {
                    t[1] = t[0]
                }
                if (/^\d/.test(t[0])) {
                    t[0] = "+" + t[0]
                }
                if (/^\d/.test(t[1])) {
                    t[1] = "+" + t[1]
                }
                if (r.length === 1) {
                    if (/left|center|right/.test(r[0])) {
                        r[1] = "center"
                    } else {
                        r[1] = r[0];
                        r[0] = "center"
                    }
                }
                return p.call(this, q.extend(s, {
                    at: r[0] + t[0] + " " + r[1] + t[1],
                    offset: c
                }))
            }
        }(jQuery))
    }
}(jQuery));
(function(d, e) {
    var b = 0,
        c = {},
        a = {};
    c.height = c.paddingTop = c.paddingBottom = c.borderTopWidth = c.borderBottomWidth = "hide";
    a.height = a.paddingTop = a.paddingBottom = a.borderTopWidth = a.borderBottomWidth = "show";
    d.widget("ui.accordion", {
        version: "1.9.2",
        options: {
            active: 0,
            animate: {},
            collapsible: false,
            event: "click",
            header: "> li > :first-child,> :not(li):even",
            heightStyle: "auto",
            icons: {
                activeHeader: "ui-icon-triangle-1-s",
                header: "ui-icon-triangle-1-e"
            },
            activate: null,
            beforeActivate: null
        },
        _create: function() {
            var g = this.accordionId = "ui-accordion-" + (this.element.attr("id") || ++b),
                f = this.options;
            this.prevShow = this.prevHide = d();
            this.element.addClass("ui-accordion ui-widget ui-helper-reset");
            this.headers = this.element.find(f.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all");
            this._hoverable(this.headers);
            this._focusable(this.headers);
            this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").hide();
            if (!f.collapsible && (f.active === false || f.active == null)) {
                f.active = 0
            }
            if (f.active < 0) {
                f.active += this.headers.length
            }
            this.active = this._findActive(f.active).addClass("ui-accordion-header-active ui-state-active").toggleClass("ui-corner-all ui-corner-top");
            this.active.next().addClass("ui-accordion-content-active").show();
            this._createIcons();
            this.refresh();
            this.element.attr("role", "tablist");
            this.headers.attr("role", "tab").each(function(l) {
                var m = d(this),
                    k = m.attr("id"),
                    h = m.next(),
                    j = h.attr("id");
                if (!k) {
                    k = g + "-header-" + l;
                    m.attr("id", k)
                }
                if (!j) {
                    j = g + "-panel-" + l;
                    h.attr("id", j)
                }
                m.attr("aria-controls", j);
                h.attr("aria-labelledby", k)
            }).next().attr("role", "tabpanel");
            this.headers.not(this.active).attr({
                "aria-selected": "false",
                tabIndex: -1
            }).next().attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            }).hide();
            if (!this.active.length) {
                this.headers.eq(0).attr("tabIndex", 0)
            } else {
                this.active.attr({
                    "aria-selected": "true",
                    tabIndex: 0
                }).next().attr({
                    "aria-expanded": "true",
                    "aria-hidden": "false"
                })
            }
            this._on(this.headers, {
                keydown: "_keydown"
            });
            this._on(this.headers.next(), {
                keydown: "_panelKeyDown"
            });
            this._setupEvents(f.event)
        },
        _getCreateEventData: function() {
            return {
                header: this.active,
                content: !this.active.length ? d() : this.active.next()
            }
        },
        _createIcons: function() {
            var f = this.options.icons;
            if (f) {
                d("<span>").addClass("ui-accordion-header-icon ui-icon " + f.header).prependTo(this.headers);
                this.active.children(".ui-accordion-header-icon").removeClass(f.header).addClass(f.activeHeader);
                this.headers.addClass("ui-accordion-icons")
            }
        },
        _destroyIcons: function() {
            this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove()
        },
        _destroy: function() {
            var f;
            this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role");
            this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").each(function() {
                if (/^ui-accordion/.test(this.id)) {
                    this.removeAttribute("id")
                }
            });
            this._destroyIcons();
            f = this.headers.next().css("display", "").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").each(function() {
                if (/^ui-accordion/.test(this.id)) {
                    this.removeAttribute("id")
                }
            });
            if (this.options.heightStyle !== "content") {
                f.css("height", "")
            }
        },
        _setOption: function(f, g) {
            if (f === "active") {
                this._activate(g);
                return
            }
            if (f === "event") {
                if (this.options.event) {
                    this._off(this.headers, this.options.event)
                }
                this._setupEvents(g)
            }
            this._super(f, g);
            if (f === "collapsible" && !g && this.options.active === false) {
                this._activate(0)
            }
            if (f === "icons") {
                this._destroyIcons();
                if (g) {
                    this._createIcons()
                }
            }
            if (f === "disabled") {
                this.headers.add(this.headers.next()).toggleClass("ui-state-disabled", !!g)
            }
        },
        _keydown: function(j) {
            if (j.altKey || j.ctrlKey) {
                return
            }
            var k = d.ui.keyCode,
                h = this.headers.length,
                f = this.headers.index(j.target),
                g = false;
            switch (j.keyCode) {
                case k.RIGHT:
                case k.DOWN:
                    g = this.headers[(f + 1) % h];
                    break;
                case k.LEFT:
                case k.UP:
                    g = this.headers[(f - 1 + h) % h];
                    break;
                case k.SPACE:
                case k.ENTER:
                    this._eventHandler(j);
                    break;
                case k.HOME:
                    g = this.headers[0];
                    break;
                case k.END:
                    g = this.headers[h - 1];
                    break
            }
            if (g) {
                d(j.target).attr("tabIndex", -1);
                d(g).attr("tabIndex", 0);
                g.focus();
                j.preventDefault()
            }
        },
        _panelKeyDown: function(f) {
            if (f.keyCode === d.ui.keyCode.UP && f.ctrlKey) {
                d(f.currentTarget).prev().focus()
            }
        },
        refresh: function() {
            var h, j, f = this.options.heightStyle,
                g = this.element.parent();
            if (f === "fill") {
                if (!d.support.minHeight) {
                    j = g.css("overflow");
                    g.css("overflow", "hidden")
                }
                h = g.height();
                this.element.siblings(":visible").each(function() {
                    var l = d(this),
                        k = l.css("position");
                    if (k === "absolute" || k === "fixed") {
                        return
                    }
                    h -= l.outerHeight(true)
                });
                if (j) {
                    g.css("overflow", j)
                }
                this.headers.each(function() {
                    h -= d(this).outerHeight(true)
                });
                this.headers.next().each(function() {
                    d(this).height(Math.max(0, h - d(this).innerHeight() + d(this).height()))
                }).css("overflow", "auto")
            } else {
                if (f === "auto") {
                    h = 0;
                    this.headers.next().each(function() {
                        h = Math.max(h, d(this).css("height", "").height())
                    }).height(h)
                }
            }
        },
        _activate: function(f) {
            var g = this._findActive(f)[0];
            if (g === this.active[0]) {
                return
            }
            g = g || this.active[0];
            this._eventHandler({
                target: g,
                currentTarget: g,
                preventDefault: d.noop
            })
        },
        _findActive: function(f) {
            return typeof f === "number" ? this.headers.eq(f) : d()
        },
        _setupEvents: function(g) {
            var f = {};
            if (!g) {
                return
            }
            d.each(g.split(" "), function(j, h) {
                f[h] = "_eventHandler"
            });
            this._on(this.headers, f)
        },
        _eventHandler: function(f) {
            var o = this.options,
                j = this.active,
                k = d(f.currentTarget),
                m = k[0] === j[0],
                g = m && o.collapsible,
                h = g ? d() : k.next(),
                l = j.next(),
                n = {
                    oldHeader: j,
                    oldPanel: l,
                    newHeader: g ? d() : k,
                    newPanel: h
                };
            f.preventDefault();
            if ((m && !o.collapsible) || (this._trigger("beforeActivate", f, n) === false)) {
                return
            }
            o.active = g ? false : this.headers.index(k);
            this.active = m ? d() : k;
            this._toggle(n);
            j.removeClass("ui-accordion-header-active ui-state-active");
            if (o.icons) {
                j.children(".ui-accordion-header-icon").removeClass(o.icons.activeHeader).addClass(o.icons.header)
            }
            if (!m) {
                k.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top");
                if (o.icons) {
                    k.children(".ui-accordion-header-icon").removeClass(o.icons.header).addClass(o.icons.activeHeader)
                }
                k.next().addClass("ui-accordion-content-active")
            }
        },
        _toggle: function(h) {
            var f = h.newPanel,
                g = this.prevShow.length ? this.prevShow : h.oldPanel;
            this.prevShow.add(this.prevHide).stop(true, true);
            this.prevShow = f;
            this.prevHide = g;
            if (this.options.animate) {
                this._animate(f, g, h)
            } else {
                g.hide();
                f.show();
                this._toggleComplete(h)
            }
            g.attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            });
            g.prev().attr("aria-selected", "false");
            if (f.length && g.length) {
                g.prev().attr("tabIndex", -1)
            } else {
                if (f.length) {
                    this.headers.filter(function() {
                        return d(this).attr("tabIndex") === 0
                    }).attr("tabIndex", -1)
                }
            }
            f.attr({
                "aria-expanded": "true",
                "aria-hidden": "false"
            }).prev().attr({
                "aria-selected": "true",
                tabIndex: 0
            })
        },
        _animate: function(f, o, k) {
            var n, m, j, l = this,
                p = 0,
                q = f.length && (!o.length || (f.index() < o.index())),
                h = this.options.animate || {},
                r = q && h.down || h,
                g = function() {
                    l._toggleComplete(k)
                };
            if (typeof r === "number") {
                j = r
            }
            if (typeof r === "string") {
                m = r
            }
            m = m || r.easing || h.easing;
            j = j || r.duration || h.duration;
            if (!o.length) {
                return f.animate(a, j, m, g)
            }
            if (!f.length) {
                return o.animate(c, j, m, g)
            }
            n = f.show().outerHeight();
            o.animate(c, {
                duration: j,
                easing: m,
                step: function(s, t) {
                    t.now = Math.round(s)
                }
            });
            f.hide().animate(a, {
                duration: j,
                easing: m,
                complete: g,
                step: function(s, t) {
                    t.now = Math.round(s);
                    if (t.prop !== "height") {
                        p += t.now
                    } else {
                        if (l.options.heightStyle !== "content") {
                            t.now = Math.round(n - o.outerHeight() - p);
                            p = 0
                        }
                    }
                }
            })
        },
        _toggleComplete: function(g) {
            var f = g.oldPanel;
            f.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all");
            if (f.length) {
                f.parent()[0].className = f.parent()[0].className
            }
            this._trigger("activate", null, g)
        }
    });
    if (d.uiBackCompat !== false) {
        (function(g, f) {
            g.extend(f.options, {
                navigation: false,
                navigationFilter: function() {
                    return this.href.toLowerCase() === location.href.toLowerCase()
                }
            });
            var h = f._create;
            f._create = function() {
                if (this.options.navigation) {
                    var k = this,
                        m = this.element.find(this.options.header),
                        j = m.next(),
                        l = m.add(j).find("a").filter(this.options.navigationFilter)[0];
                    if (l) {
                        m.add(j).each(function(n) {
                            if (g.contains(this, l)) {
                                k.options.active = Math.floor(n / 2);
                                return false
                            }
                        })
                    }
                }
                h.call(this)
            }
        }(jQuery, jQuery.ui.accordion.prototype));
        (function(h, f) {
            h.extend(f.options, {
                heightStyle: null,
                autoHeight: true,
                clearStyle: false,
                fillSpace: false
            });
            var j = f._create,
                g = f._setOption;
            h.extend(f, {
                _create: function() {
                    this.options.heightStyle = this.options.heightStyle || this._mergeHeightStyle();
                    j.call(this)
                },
                _setOption: function(k) {
                    if (k === "autoHeight" || k === "clearStyle" || k === "fillSpace") {
                        this.options.heightStyle = this._mergeHeightStyle()
                    }
                    g.apply(this, arguments)
                },
                _mergeHeightStyle: function() {
                    var k = this.options;
                    if (k.fillSpace) {
                        return "fill"
                    }
                    if (k.clearStyle) {
                        return "content"
                    }
                    if (k.autoHeight) {
                        return "auto"
                    }
                }
            })
        }(jQuery, jQuery.ui.accordion.prototype));
        (function(h, g) {
            h.extend(g.options.icons, {
                activeHeader: null,
                headerSelected: "ui-icon-triangle-1-s"
            });
            var f = g._createIcons;
            g._createIcons = function() {
                if (this.options.icons) {
                    this.options.icons.activeHeader = this.options.icons.activeHeader || this.options.icons.headerSelected
                }
                f.call(this)
            }
        }(jQuery, jQuery.ui.accordion.prototype));
        (function(h, g) {
            g.activate = g._activate;
            var f = g._findActive;
            g._findActive = function(j) {
                if (j === -1) {
                    j = false
                }
                if (j && typeof j !== "number") {
                    j = this.headers.index(this.headers.filter(j));
                    if (j === -1) {
                        j = false
                    }
                }
                return f.call(this, j)
            }
        }(jQuery, jQuery.ui.accordion.prototype));
        jQuery.ui.accordion.prototype.resize = jQuery.ui.accordion.prototype.refresh;
        (function(h, g) {
            h.extend(g.options, {
                change: null,
                changestart: null
            });
            var f = g._trigger;
            g._trigger = function(k, l, m) {
                var j = f.apply(this, arguments);
                if (!j) {
                    return false
                }
                if (k === "beforeActivate") {
                    j = f.call(this, "changestart", l, {
                        oldHeader: m.oldHeader,
                        oldContent: m.oldPanel,
                        newHeader: m.newHeader,
                        newContent: m.newPanel
                    })
                } else {
                    if (k === "activate") {
                        j = f.call(this, "change", l, {
                            oldHeader: m.oldHeader,
                            oldContent: m.oldPanel,
                            newHeader: m.newHeader,
                            newContent: m.newPanel
                        })
                    }
                }
                return j
            }
        }(jQuery, jQuery.ui.accordion.prototype));
        (function(g, f) {
            g.extend(f.options, {
                animate: null,
                animated: "slide"
            });
            var h = f._create;
            f._create = function() {
                var j = this.options;
                if (j.animate === null) {
                    if (!j.animated) {
                        j.animate = false
                    } else {
                        if (j.animated === "slide") {
                            j.animate = 300
                        } else {
                            if (j.animated === "bounceslide") {
                                j.animate = {
                                    duration: 200,
                                    down: {
                                        easing: "easeOutBounce",
                                        duration: 1000
                                    }
                                }
                            } else {
                                j.animate = j.animated
                            }
                        }
                    }
                }
                h.call(this)
            }
        }(jQuery, jQuery.ui.accordion.prototype))
    }
})(jQuery);
(function(a, b) {
    var c = 0;
    a.widget("ui.autocomplete", {
        version: "1.9.2",
        defaultElement: "<input>",
        options: {
            appendTo: "body",
            autoFocus: false,
            delay: 300,
            minLength: 1,
            position: {
                my: "left top",
                at: "left bottom",
                collision: "none"
            },
            source: null,
            change: null,
            close: null,
            focus: null,
            open: null,
            response: null,
            search: null,
            select: null
        },
        pending: 0,
        _create: function() {
            var e, d, f;
            this.isMultiLine = this._isMultiLine();
            this.valueMethod = this.element[this.element.is("input,textarea") ? "val" : "text"];
            this.isNewMenu = true;
            this.element.addClass("ui-autocomplete-input").attr("autocomplete", "off");
            this._on(this.element, {
                keydown: function(g) {
                    if (this.element.prop("readOnly")) {
                        e = true;
                        f = true;
                        d = true;
                        return
                    }
                    e = false;
                    f = false;
                    d = false;
                    var h = a.ui.keyCode;
                    switch (g.keyCode) {
                        case h.PAGE_UP:
                            e = true;
                            this._move("previousPage", g);
                            break;
                        case h.PAGE_DOWN:
                            e = true;
                            this._move("nextPage", g);
                            break;
                        case h.UP:
                            e = true;
                            this._keyEvent("previous", g);
                            break;
                        case h.DOWN:
                            e = true;
                            this._keyEvent("next", g);
                            break;
                        case h.ENTER:
                        case h.NUMPAD_ENTER:
                            if (this.menu.active) {
                                e = true;
                                g.preventDefault();
                                this.menu.select(g)
                            }
                            break;
                        case h.TAB:
                            if (this.menu.active) {
                                this.menu.select(g)
                            }
                            break;
                        case h.ESCAPE:
                            if (this.menu.element.is(":visible")) {
                                this._value(this.term);
                                this.close(g);
                                g.preventDefault()
                            }
                            break;
                        default:
                            d = true;
                            this._searchTimeout(g);
                            break
                    }
                },
                keypress: function(g) {
                    if (e) {
                        e = false;
                        g.preventDefault();
                        return
                    }
                    if (d) {
                        return
                    }
                    var h = a.ui.keyCode;
                    switch (g.keyCode) {
                        case h.PAGE_UP:
                            this._move("previousPage", g);
                            break;
                        case h.PAGE_DOWN:
                            this._move("nextPage", g);
                            break;
                        case h.UP:
                            this._keyEvent("previous", g);
                            break;
                        case h.DOWN:
                            this._keyEvent("next", g);
                            break
                    }
                },
                input: function(g) {
                    if (f) {
                        f = false;
                        g.preventDefault();
                        return
                    }
                    this._searchTimeout(g)
                },
                focus: function() {
                    this.selectedItem = null;
                    this.previous = this._value()
                },
                blur: function(g) {
                    if (this.cancelBlur) {
                        delete this.cancelBlur;
                        return
                    }
                    clearTimeout(this.searching);
                    this.close(g);
                    this._change(g)
                }
            });
            this._initSource();
            this.menu = a("<ul>").addClass("ui-autocomplete").appendTo(this.document.find(this.options.appendTo || "body")[0]).menu({
                input: a(),
                role: null
            }).zIndex(this.element.zIndex() + 1).hide().data("menu");
            this._on(this.menu.element, {
                mousedown: function(g) {
                    g.preventDefault();
                    this.cancelBlur = true;
                    this._delay(function() {
                        delete this.cancelBlur
                    });
                    var h = this.menu.element[0];
                    if (!a(g.target).closest(".ui-menu-item").length) {
                        this._delay(function() {
                            var j = this;
                            this.document.one("mousedown", function(k) {
                                if (k.target !== j.element[0] && k.target !== h && !a.contains(h, k.target)) {
                                    j.close()
                                }
                            })
                        })
                    }
                },
                menufocus: function(h, j) {
                    if (this.isNewMenu) {
                        this.isNewMenu = false;
                        if (h.originalEvent && /^mouse/.test(h.originalEvent.type)) {
                            this.menu.blur();
                            this.document.one("mousemove", function() {
                                a(h.target).trigger(h.originalEvent)
                            });
                            return
                        }
                    }
                    var g = j.item.data("ui-autocomplete-item") || j.item.data("item.autocomplete");
                    if (false !== this._trigger("focus", h, {
                            item: g
                        })) {
                        if (h.originalEvent && /^key/.test(h.originalEvent.type)) {
                            this._value(g.value)
                        }
                    } else {
                        this.liveRegion.text(g.value)
                    }
                },
                menuselect: function(j, k) {
                    var h = k.item.data("ui-autocomplete-item") || k.item.data("item.autocomplete"),
                        g = this.previous;
                    if (this.element[0] !== this.document[0].activeElement) {
                        this.element.focus();
                        this.previous = g;
                        this._delay(function() {
                            this.previous = g;
                            this.selectedItem = h
                        })
                    }
                    if (false !== this._trigger("select", j, {
                            item: h
                        })) {
                        this._value(h.value)
                    }
                    this.term = this._value();
                    this.close(j);
                    this.selectedItem = h
                }
            });
            this.liveRegion = a("<span>", {
                role: "status",
                "aria-live": "polite"
            }).addClass("ui-helper-hidden-accessible").insertAfter(this.element);
            if (a.fn.bgiframe) {
                this.menu.element.bgiframe()
            }
            this._on(this.window, {
                beforeunload: function() {
                    this.element.removeAttr("autocomplete")
                }
            })
        },
        _destroy: function() {
            clearTimeout(this.searching);
            this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete");
            this.menu.element.remove();
            this.liveRegion.remove()
        },
        _setOption: function(d, e) {
            this._super(d, e);
            if (d === "source") {
                this._initSource()
            }
            if (d === "appendTo") {
                this.menu.element.appendTo(this.document.find(e || "body")[0])
            }
            if (d === "disabled" && e && this.xhr) {
                this.xhr.abort()
            }
        },
        _isMultiLine: function() {
            if (this.element.is("textarea")) {
                return true
            }
            if (this.element.is("input")) {
                return false
            }
            return this.element.prop("isContentEditable")
        },
        _initSource: function() {
            var f, d, e = this;
            if (a.isArray(this.options.source)) {
                f = this.options.source;
                this.source = function(h, g) {
                    g(a.ui.autocomplete.filter(f, h.term))
                }
            } else {
                if (typeof this.options.source === "string") {
                    d = this.options.source;
                    this.source = function(h, g) {
                        if (e.xhr) {
                            e.xhr.abort()
                        }
                        e.xhr = a.ajax({
                            url: d,
                            data: h,
                            dataType: "json",
                            success: function(j) {
                                g(j)
                            },
                            error: function() {
                                g([])
                            }
                        })
                    }
                } else {
                    this.source = this.options.source
                }
            }
        },
        _searchTimeout: function(d) {
            clearTimeout(this.searching);
            this.searching = this._delay(function() {
                if (this.term !== this._value()) {
                    this.selectedItem = null;
                    this.search(null, d)
                }
            }, this.options.delay)
        },
        search: function(e, d) {
            e = e != null ? e : this._value();
            this.term = this._value();
            if (e.length < this.options.minLength) {
                return this.close(d)
            }
            if (this._trigger("search", d) === false) {
                return
            }
            return this._search(e)
        },
        _search: function(d) {
            this.pending++;
            this.element.addClass("ui-autocomplete-loading");
            this.cancelSearch = false;
            this.source({
                term: d
            }, this._response())
        },
        _response: function() {
            var e = this,
                d = ++c;
            return function(f) {
                if (d === c) {
                    e.__response(f)
                }
                e.pending--;
                if (!e.pending) {
                    e.element.removeClass("ui-autocomplete-loading")
                }
            }
        },
        __response: function(d) {
            if (d) {
                d = this._normalize(d)
            }
            this._trigger("response", null, {
                content: d
            });
            if (!this.options.disabled && d && d.length && !this.cancelSearch) {
                this._suggest(d);
                this._trigger("open")
            } else {
                this._close()
            }
        },
        close: function(d) {
            this.cancelSearch = true;
            this._close(d)
        },
        _close: function(d) {
            if (this.menu.element.is(":visible")) {
                this.menu.element.hide();
                this.menu.blur();
                this.isNewMenu = true;
                this._trigger("close", d)
            }
        },
        _change: function(d) {
            if (this.previous !== this._value()) {
                this._trigger("change", d, {
                    item: this.selectedItem
                })
            }
        },
        _normalize: function(d) {
            if (d.length && d[0].label && d[0].value) {
                return d
            }
            return a.map(d, function(e) {
                if (typeof e === "string") {
                    return {
                        label: e,
                        value: e
                    }
                }
                return a.extend({
                    label: e.label || e.value,
                    value: e.value || e.label
                }, e)
            })
        },
        _suggest: function(d) {
            var e = this.menu.element.empty().zIndex(this.element.zIndex() + 1);
            this._renderMenu(e, d);
            this.menu.refresh();
            e.show();
            this._resizeMenu();
            e.position(a.extend({
                of: this.element
            }, this.options.position));
            if (this.options.autoFocus) {
                this.menu.next()
            }
        },
        _resizeMenu: function() {
            var d = this.menu.element;
            d.outerWidth(Math.max(d.width("").outerWidth() + 1, this.element.outerWidth()))
        },
        _renderMenu: function(e, d) {
            var f = this;
            a.each(d, function(g, h) {
                f._renderItemData(e, h)
            })
        },
        _renderItemData: function(d, e) {
            return this._renderItem(d, e).data("ui-autocomplete-item", e)
        },
        _renderItem: function(d, e) {
            return a("<li>").append(a("<a>").text(e.label)).appendTo(d)
        },
        _move: function(e, d) {
            if (!this.menu.element.is(":visible")) {
                this.search(null, d);
                return
            }
            if (this.menu.isFirstItem() && /^previous/.test(e) || this.menu.isLastItem() && /^next/.test(e)) {
                this._value(this.term);
                this.menu.blur();
                return
            }
            this.menu[e](d)
        },
        widget: function() {
            return this.menu.element
        },
        _value: function() {
            return this.valueMethod.apply(this.element, arguments)
        },
        _keyEvent: function(e, d) {
            if (!this.isMultiLine || this.menu.element.is(":visible")) {
                this._move(e, d);
                d.preventDefault()
            }
        }
    });
    a.extend(a.ui.autocomplete, {
        escapeRegex: function(d) {
            return d.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
        },
        filter: function(f, d) {
            var e = new RegExp(a.ui.autocomplete.escapeRegex(d), "i");
            return a.grep(f, function(g) {
                return e.test(g.label || g.value || g)
            })
        }
    });
    a.widget("ui.autocomplete", a.ui.autocomplete, {
        options: {
            messages: {
                noResults: "No search results.",
                results: function(d) {
                    return d + (d > 1 ? " results are" : " result is") + " available, use up and down arrow keys to navigate."
                }
            }
        },
        __response: function(e) {
            var d;
            this._superApply(arguments);
            if (this.options.disabled || this.cancelSearch) {
                return
            }
            if (e && e.length) {
                d = this.options.messages.results(e.length)
            } else {
                d = this.options.messages.noResults
            }
            this.liveRegion.text(d)
        }
    })
}(jQuery));
(function(f, b) {
    var l, e, a, h, j = "ui-button ui-widget ui-state-default ui-corner-all",
        c = "ui-state-hover ui-state-active ",
        g = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",
        k = function() {
            var m = f(this).find(":ui-button");
            setTimeout(function() {
                m.button("refresh")
            }, 1)
        },
        d = function(n) {
            var m = n.name,
                o = n.form,
                p = f([]);
            if (m) {
                if (o) {
                    p = f(o).find("[name='" + m + "']")
                } else {
                    p = f("[name='" + m + "']", n.ownerDocument).filter(function() {
                        return !this.form
                    })
                }
            }
            return p
        };
    f.widget("ui.button", {
        version: "1.9.2",
        defaultElement: "<button>",
        options: {
            disabled: null,
            text: true,
            label: null,
            icons: {
                primary: null,
                secondary: null
            }
        },
        _create: function() {
            this.element.closest("form").unbind("reset" + this.eventNamespace).bind("reset" + this.eventNamespace, k);
            if (typeof this.options.disabled !== "boolean") {
                this.options.disabled = !!this.element.prop("disabled")
            } else {
                this.element.prop("disabled", this.options.disabled)
            }
            this._determineButtonType();
            this.hasTitle = !!this.buttonElement.attr("title");
            var p = this,
                n = this.options,
                q = this.type === "checkbox" || this.type === "radio",
                o = !q ? "ui-state-active" : "",
                m = "ui-state-focus";
            if (n.label === null) {
                n.label = (this.type === "input" ? this.buttonElement.val() : this.buttonElement.html())
            }
            this._hoverable(this.buttonElement);
            this.buttonElement.addClass(j).attr("role", "button").bind("mouseenter" + this.eventNamespace, function() {
                if (n.disabled) {
                    return
                }
                if (this === l) {
                    f(this).addClass("ui-state-active")
                }
            }).bind("mouseleave" + this.eventNamespace, function() {
                if (n.disabled) {
                    return
                }
                f(this).removeClass(o)
            }).bind("click" + this.eventNamespace, function(r) {
                if (n.disabled) {
                    r.preventDefault();
                    r.stopImmediatePropagation()
                }
            });
            this.element.bind("focus" + this.eventNamespace, function() {
                p.buttonElement.addClass(m)
            }).bind("blur" + this.eventNamespace, function() {
                p.buttonElement.removeClass(m)
            });
            if (q) {
                this.element.bind("change" + this.eventNamespace, function() {
                    if (h) {
                        return
                    }
                    p.refresh()
                });
                this.buttonElement.bind("mousedown" + this.eventNamespace, function(r) {
                    if (n.disabled) {
                        return
                    }
                    h = false;
                    e = r.pageX;
                    a = r.pageY
                }).bind("mouseup" + this.eventNamespace, function(r) {
                    if (n.disabled) {
                        return
                    }
                    if (e !== r.pageX || a !== r.pageY) {
                        h = true
                    }
                })
            }
            if (this.type === "checkbox") {
                this.buttonElement.bind("click" + this.eventNamespace, function() {
                    if (n.disabled || h) {
                        return false
                    }
                    f(this).toggleClass("ui-state-active");
                    p.buttonElement.attr("aria-pressed", p.element[0].checked)
                })
            } else {
                if (this.type === "radio") {
                    this.buttonElement.bind("click" + this.eventNamespace, function() {
                        if (n.disabled || h) {
                            return false
                        }
                        f(this).addClass("ui-state-active");
                        p.buttonElement.attr("aria-pressed", "true");
                        var r = p.element[0];
                        d(r).not(r).map(function() {
                            return f(this).button("widget")[0]
                        }).removeClass("ui-state-active").attr("aria-pressed", "false")
                    })
                } else {
                    this.buttonElement.bind("mousedown" + this.eventNamespace, function() {
                        if (n.disabled) {
                            return false
                        }
                        f(this).addClass("ui-state-active");
                        l = this;
                        p.document.one("mouseup", function() {
                            l = null
                        })
                    }).bind("mouseup" + this.eventNamespace, function() {
                        if (n.disabled) {
                            return false
                        }
                        f(this).removeClass("ui-state-active")
                    }).bind("keydown" + this.eventNamespace, function(r) {
                        if (n.disabled) {
                            return false
                        }
                        if (r.keyCode === f.ui.keyCode.SPACE || r.keyCode === f.ui.keyCode.ENTER) {
                            f(this).addClass("ui-state-active")
                        }
                    }).bind("keyup" + this.eventNamespace, function() {
                        f(this).removeClass("ui-state-active")
                    });
                    if (this.buttonElement.is("a")) {
                        this.buttonElement.keyup(function(r) {
                            if (r.keyCode === f.ui.keyCode.SPACE) {
                                f(this).click()
                            }
                        })
                    }
                }
            }
            this._setOption("disabled", n.disabled);
            this._resetButton()
        },
        _determineButtonType: function() {
            var m, o, n;
            if (this.element.is("[type=checkbox]")) {
                this.type = "checkbox"
            } else {
                if (this.element.is("[type=radio]")) {
                    this.type = "radio"
                } else {
                    if (this.element.is("input")) {
                        this.type = "input"
                    } else {
                        this.type = "button"
                    }
                }
            }
            if (this.type === "checkbox" || this.type === "radio") {
                m = this.element.parents().last();
                o = "label[for='" + this.element.attr("id") + "']";
                this.buttonElement = m.find(o);
                if (!this.buttonElement.length) {
                    m = m.length ? m.siblings() : this.element.siblings();
                    this.buttonElement = m.filter(o);
                    if (!this.buttonElement.length) {
                        this.buttonElement = m.find(o)
                    }
                }
                this.element.addClass("ui-helper-hidden-accessible");
                n = this.element.is(":checked");
                if (n) {
                    this.buttonElement.addClass("ui-state-active")
                }
                this.buttonElement.prop("aria-pressed", n)
            } else {
                this.buttonElement = this.element
            }
        },
        widget: function() {
            return this.buttonElement
        },
        _destroy: function() {
            this.element.removeClass("ui-helper-hidden-accessible");
            this.buttonElement.removeClass(j + " " + c + " " + g).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html());
            if (!this.hasTitle) {
                this.buttonElement.removeAttr("title")
            }
        },
        _setOption: function(m, n) {
            this._super(m, n);
            if (m === "disabled") {
                if (n) {
                    this.element.prop("disabled", true)
                } else {
                    this.element.prop("disabled", false)
                }
                return
            }
            this._resetButton()
        },
        refresh: function() {
            var m = this.element.is("input, button") ? this.element.is(":disabled") : this.element.hasClass("ui-button-disabled");
            if (m !== this.options.disabled) {
                this._setOption("disabled", m)
            }
            if (this.type === "radio") {
                d(this.element[0]).each(function() {
                    if (f(this).is(":checked")) {
                        f(this).button("widget").addClass("ui-state-active").attr("aria-pressed", "true")
                    } else {
                        f(this).button("widget").removeClass("ui-state-active").attr("aria-pressed", "false")
                    }
                })
            } else {
                if (this.type === "checkbox") {
                    if (this.element.is(":checked")) {
                        this.buttonElement.addClass("ui-state-active").attr("aria-pressed", "true")
                    } else {
                        this.buttonElement.removeClass("ui-state-active").attr("aria-pressed", "false")
                    }
                }
            }
        },
        _resetButton: function() {
            if (this.type === "input") {
                if (this.options.label) {
                    this.element.val(this.options.label)
                }
                return
            }
            var q = this.buttonElement.removeClass(g),
                o = f("<span></span>", this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(q.empty()).text(),
                n = this.options.icons,
                m = n.primary && n.secondary,
                p = [];
            if (n.primary || n.secondary) {
                if (this.options.text) {
                    p.push("ui-button-text-icon" + (m ? "s" : (n.primary ? "-primary" : "-secondary")))
                }
                if (n.primary) {
                    q.prepend("<span class='ui-button-icon-primary ui-icon " + n.primary + "'></span>")
                }
                if (n.secondary) {
                    q.append("<span class='ui-button-icon-secondary ui-icon " + n.secondary + "'></span>")
                }
                if (!this.options.text) {
                    p.push(m ? "ui-button-icons-only" : "ui-button-icon-only");
                    if (!this.hasTitle) {
                        q.attr("title", f.trim(o))
                    }
                }
            } else {
                p.push("ui-button-text-only")
            }
            q.addClass(p.join(" "))
        }
    });
    f.widget("ui.buttonset", {
        version: "1.9.2",
        options: {
            items: "button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(button)"
        },
        _create: function() {
            this.element.addClass("ui-buttonset")
        },
        _init: function() {
            this.refresh()
        },
        _setOption: function(m, n) {
            if (m === "disabled") {
                this.buttons.button("option", m, n)
            }
            this._super(m, n)
        },
        refresh: function() {
            var m = this.element.css("direction") === "rtl";
            this.buttons = this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function() {
                return f(this).button("widget")[0]
            }).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(m ? "ui-corner-right" : "ui-corner-left").end().filter(":last").addClass(m ? "ui-corner-left" : "ui-corner-right").end().end()
        },
        _destroy: function() {
            this.element.removeClass("ui-buttonset");
            this.buttons.map(function() {
                return f(this).button("widget")[0]
            }).removeClass("ui-corner-left ui-corner-right").end().button("destroy")
        }
    })
}(jQuery));
(function($, undefined) {
    $.extend($.ui, {
        datepicker: {
            version: "1.9.2"
        }
    });
    var PROP_NAME = "datepicker";
    var dpuuid = new Date().getTime();
    var instActive;

    function Datepicker() {
        this.debug = false;
        this._curInst = null;
        this._keyEvent = false;
        this._disabledInputs = [];
        this._datepickerShowing = false;
        this._inDialog = false;
        this._mainDivId = "ui-datepicker-div";
        this._inlineClass = "ui-datepicker-inline";
        this._appendClass = "ui-datepicker-append";
        this._triggerClass = "ui-datepicker-trigger";
        this._dialogClass = "ui-datepicker-dialog";
        this._disableClass = "ui-datepicker-disabled";
        this._unselectableClass = "ui-datepicker-unselectable";
        this._currentClass = "ui-datepicker-current-day";
        this._dayOverClass = "ui-datepicker-days-cell-over";
        this.regional = [];
        this.regional[""] = {
            closeText: "Done",
            prevText: "Prev",
            nextText: "Next",
            currentText: "Today",
            monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
            weekHeader: "Wk",
            dateFormat: "mm/dd/yy",
            firstDay: 0,
            isRTL: false,
            showMonthAfterYear: false,
            yearSuffix: ""
        };
        this._defaults = {
            showOn: "focus",
            showAnim: "fadeIn",
            showOptions: {},
            defaultDate: null,
            appendText: "",
            buttonText: "...",
            buttonImage: "",
            buttonImageOnly: false,
            hideIfNoPrevNext: false,
            navigationAsDateFormat: false,
            gotoCurrent: false,
            changeMonth: false,
            changeYear: false,
            yearRange: "c-10:c+10",
            showOtherMonths: false,
            selectOtherMonths: false,
            showWeek: false,
            calculateWeek: this.iso8601Week,
            shortYearCutoff: "+10",
            minDate: null,
            maxDate: null,
            duration: "fast",
            beforeShowDay: null,
            beforeShow: null,
            onSelect: null,
            onChangeMonthYear: null,
            onClose: null,
            numberOfMonths: 1,
            showCurrentAtPos: 0,
            stepMonths: 1,
            stepBigMonths: 12,
            altField: "",
            altFormat: "",
            constrainInput: true,
            showButtonPanel: false,
            autoSize: false,
            disabled: false
        };
        $.extend(this._defaults, this.regional[""]);
        this.dpDiv = bindHover($('<div id="' + this._mainDivId + '" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))
    }
    $.extend(Datepicker.prototype, {
        markerClassName: "hasDatepicker",
        maxRows: 4,
        log: function() {
            if (this.debug) {
                console.log.apply("", arguments)
            }
        },
        _widgetDatepicker: function() {
            return this.dpDiv
        },
        setDefaults: function(settings) {
            extendRemove(this._defaults, settings || {});
            return this
        },
        _attachDatepicker: function(target, settings) {
            var inlineSettings = null;
            for (var attrName in this._defaults) {
                var attrValue = target.getAttribute("date:" + attrName);
                if (attrValue) {
                    inlineSettings = inlineSettings || {};
                    try {
                        inlineSettings[attrName] = eval(attrValue)
                    } catch (err) {
                        inlineSettings[attrName] = attrValue
                    }
                }
            }
            var nodeName = target.nodeName.toLowerCase();
            var inline = (nodeName == "div" || nodeName == "span");
            if (!target.id) {
                this.uuid += 1;
                target.id = "dp" + this.uuid
            }
            var inst = this._newInst($(target), inline);
            inst.settings = $.extend({}, settings || {}, inlineSettings || {});
            if (nodeName == "input") {
                this._connectDatepicker(target, inst)
            } else {
                if (inline) {
                    this._inlineDatepicker(target, inst)
                }
            }
        },
        _newInst: function(target, inline) {
            var id = target[0].id.replace(/([^A-Za-z0-9_-])/g, "\\\\$1");
            return {
                id: id,
                input: target,
                selectedDay: 0,
                selectedMonth: 0,
                selectedYear: 0,
                drawMonth: 0,
                drawYear: 0,
                inline: inline,
                dpDiv: (!inline ? this.dpDiv : bindHover($('<div class="' + this._inlineClass + ' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')))
            }
        },
        _connectDatepicker: function(target, inst) {
            var input = $(target);
            inst.append = $([]);
            inst.trigger = $([]);
            if (input.hasClass(this.markerClassName)) {
                return
            }
            this._attachments(input, inst);
            input.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker", function(event, key, value) {
                inst.settings[key] = value
            }).bind("getData.datepicker", function(event, key) {
                return this._get(inst, key)
            });
            this._autoSize(inst);
            $.data(target, PROP_NAME, inst);
            if (inst.settings.disabled) {
                this._disableDatepicker(target)
            }
        },
        _attachments: function(input, inst) {
            var appendText = this._get(inst, "appendText");
            var isRTL = this._get(inst, "isRTL");
            if (inst.append) {
                inst.append.remove()
            }
            if (appendText) {
                inst.append = $('<span class="' + this._appendClass + '">' + appendText + "</span>");
                input[isRTL ? "before" : "after"](inst.append)
            }
            input.unbind("focus", this._showDatepicker);
            if (inst.trigger) {
                inst.trigger.remove()
            }
            var showOn = this._get(inst, "showOn");
            if (showOn == "focus" || showOn == "both") {
                input.focus(this._showDatepicker)
            }
            if (showOn == "button" || showOn == "both") {
                var buttonText = this._get(inst, "buttonText");
                var buttonImage = this._get(inst, "buttonImage");
                inst.trigger = $(this._get(inst, "buttonImageOnly") ? $("<img/>").addClass(this._triggerClass).attr({
                    src: buttonImage,
                    alt: buttonText,
                    title: buttonText
                }) : $('<button type="button"></button>').addClass(this._triggerClass).html(buttonImage == "" ? buttonText : $("<img/>").attr({
                    src: buttonImage,
                    alt: buttonText,
                    title: buttonText
                })));
                input[isRTL ? "before" : "after"](inst.trigger);
                inst.trigger.click(function() {
                    if ($.datepicker._datepickerShowing && $.datepicker._lastInput == input[0]) {
                        $.datepicker._hideDatepicker()
                    } else {
                        if ($.datepicker._datepickerShowing && $.datepicker._lastInput != input[0]) {
                            $.datepicker._hideDatepicker();
                            $.datepicker._showDatepicker(input[0])
                        } else {
                            $.datepicker._showDatepicker(input[0])
                        }
                    }
                    return false
                })
            }
        },
        _autoSize: function(inst) {
            if (this._get(inst, "autoSize") && !inst.inline) {
                var date = new Date(2009, 12 - 1, 20);
                var dateFormat = this._get(inst, "dateFormat");
                if (dateFormat.match(/[DM]/)) {
                    var findMax = function(names) {
                        var max = 0;
                        var maxI = 0;
                        for (var i = 0; i < names.length; i++) {
                            if (names[i].length > max) {
                                max = names[i].length;
                                maxI = i
                            }
                        }
                        return maxI
                    };
                    date.setMonth(findMax(this._get(inst, (dateFormat.match(/MM/) ? "monthNames" : "monthNamesShort"))));
                    date.setDate(findMax(this._get(inst, (dateFormat.match(/DD/) ? "dayNames" : "dayNamesShort"))) + 20 - date.getDay())
                }
                inst.input.attr("size", this._formatDate(inst, date).length)
            }
        },
        _inlineDatepicker: function(target, inst) {
            var divSpan = $(target);
            if (divSpan.hasClass(this.markerClassName)) {
                return
            }
            divSpan.addClass(this.markerClassName).append(inst.dpDiv).bind("setData.datepicker", function(event, key, value) {
                inst.settings[key] = value
            }).bind("getData.datepicker", function(event, key) {
                return this._get(inst, key)
            });
            $.data(target, PROP_NAME, inst);
            this._setDate(inst, this._getDefaultDate(inst), true);
            this._updateDatepicker(inst);
            this._updateAlternate(inst);
            if (inst.settings.disabled) {
                this._disableDatepicker(target)
            }
            inst.dpDiv.css("display", "block")
        },
        _dialogDatepicker: function(input, date, onSelect, settings, pos) {
            var inst = this._dialogInst;
            if (!inst) {
                this.uuid += 1;
                var id = "dp" + this.uuid;
                this._dialogInput = $('<input type="text" id="' + id + '" style="position: absolute; top: -100px; width: 0px;"/>');
                this._dialogInput.keydown(this._doKeyDown);
                $("body").append(this._dialogInput);
                inst = this._dialogInst = this._newInst(this._dialogInput, false);
                inst.settings = {};
                $.data(this._dialogInput[0], PROP_NAME, inst)
            }
            extendRemove(inst.settings, settings || {});
            date = (date && date.constructor == Date ? this._formatDate(inst, date) : date);
            this._dialogInput.val(date);
            this._pos = (pos ? (pos.length ? pos : [pos.pageX, pos.pageY]) : null);
            if (!this._pos) {
                var browserWidth = document.documentElement.clientWidth;
                var browserHeight = document.documentElement.clientHeight;
                var scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;
                var scrollY = document.documentElement.scrollTop || document.body.scrollTop;
                this._pos = [(browserWidth / 2) - 100 + scrollX, (browserHeight / 2) - 150 + scrollY]
            }
            this._dialogInput.css("left", (this._pos[0] + 20) + "px").css("top", this._pos[1] + "px");
            inst.settings.onSelect = onSelect;
            this._inDialog = true;
            this.dpDiv.addClass(this._dialogClass);
            this._showDatepicker(this._dialogInput[0]);
            if ($.blockUI) {
                $.blockUI(this.dpDiv)
            }
            $.data(this._dialogInput[0], PROP_NAME, inst);
            return this
        },
        _destroyDatepicker: function(target) {
            var $target = $(target);
            var inst = $.data(target, PROP_NAME);
            if (!$target.hasClass(this.markerClassName)) {
                return
            }
            var nodeName = target.nodeName.toLowerCase();
            $.removeData(target, PROP_NAME);
            if (nodeName == "input") {
                inst.append.remove();
                inst.trigger.remove();
                $target.removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress).unbind("keyup", this._doKeyUp)
            } else {
                if (nodeName == "div" || nodeName == "span") {
                    $target.removeClass(this.markerClassName).empty()
                }
            }
        },
        _enableDatepicker: function(target) {
            var $target = $(target);
            var inst = $.data(target, PROP_NAME);
            if (!$target.hasClass(this.markerClassName)) {
                return
            }
            var nodeName = target.nodeName.toLowerCase();
            if (nodeName == "input") {
                target.disabled = false;
                inst.trigger.filter("button").each(function() {
                    this.disabled = false
                }).end().filter("img").css({
                    opacity: "1.0",
                    cursor: ""
                })
            } else {
                if (nodeName == "div" || nodeName == "span") {
                    var inline = $target.children("." + this._inlineClass);
                    inline.children().removeClass("ui-state-disabled");
                    inline.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", false)
                }
            }
            this._disabledInputs = $.map(this._disabledInputs, function(value) {
                return (value == target ? null : value)
            })
        },
        _disableDatepicker: function(target) {
            var $target = $(target);
            var inst = $.data(target, PROP_NAME);
            if (!$target.hasClass(this.markerClassName)) {
                return
            }
            var nodeName = target.nodeName.toLowerCase();
            if (nodeName == "input") {
                target.disabled = true;
                inst.trigger.filter("button").each(function() {
                    this.disabled = true
                }).end().filter("img").css({
                    opacity: "0.5",
                    cursor: "default"
                })
            } else {
                if (nodeName == "div" || nodeName == "span") {
                    var inline = $target.children("." + this._inlineClass);
                    inline.children().addClass("ui-state-disabled");
                    inline.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", true)
                }
            }
            this._disabledInputs = $.map(this._disabledInputs, function(value) {
                return (value == target ? null : value)
            });
            this._disabledInputs[this._disabledInputs.length] = target
        },
        _isDisabledDatepicker: function(target) {
            if (!target) {
                return false
            }
            for (var i = 0; i < this._disabledInputs.length; i++) {
                if (this._disabledInputs[i] == target) {
                    return true
                }
            }
            return false
        },
        _getInst: function(target) {
            try {
                return $.data(target, PROP_NAME)
            } catch (err) {
                throw "Missing instance data for this datepicker"
            }
        },
        _optionDatepicker: function(target, name, value) {
            var inst = this._getInst(target);
            if (arguments.length == 2 && typeof name == "string") {
                return (name == "defaults" ? $.extend({}, $.datepicker._defaults) : (inst ? (name == "all" ? $.extend({}, inst.settings) : this._get(inst, name)) : null))
            }
            var settings = name || {};
            if (typeof name == "string") {
                settings = {};
                settings[name] = value
            }
            if (inst) {
                if (this._curInst == inst) {
                    this._hideDatepicker()
                }
                var date = this._getDateDatepicker(target, true);
                var minDate = this._getMinMaxDate(inst, "min");
                var maxDate = this._getMinMaxDate(inst, "max");
                extendRemove(inst.settings, settings);
                if (minDate !== null && settings.dateFormat !== undefined && settings.minDate === undefined) {
                    inst.settings.minDate = this._formatDate(inst, minDate)
                }
                if (maxDate !== null && settings.dateFormat !== undefined && settings.maxDate === undefined) {
                    inst.settings.maxDate = this._formatDate(inst, maxDate)
                }
                this._attachments($(target), inst);
                this._autoSize(inst);
                this._setDate(inst, date);
                this._updateAlternate(inst);
                this._updateDatepicker(inst)
            }
        },
        _changeDatepicker: function(target, name, value) {
            this._optionDatepicker(target, name, value)
        },
        _refreshDatepicker: function(target) {
            var inst = this._getInst(target);
            if (inst) {
                this._updateDatepicker(inst)
            }
        },
        _setDateDatepicker: function(target, date) {
            var inst = this._getInst(target);
            if (inst) {
                this._setDate(inst, date);
                this._updateDatepicker(inst);
                this._updateAlternate(inst)
            }
        },
        _getDateDatepicker: function(target, noDefault) {
            var inst = this._getInst(target);
            if (inst && !inst.inline) {
                this._setDateFromField(inst, noDefault)
            }
            return (inst ? this._getDate(inst) : null)
        },
        _doKeyDown: function(event) {
            var inst = $.datepicker._getInst(event.target);
            var handled = true;
            var isRTL = inst.dpDiv.is(".ui-datepicker-rtl");
            inst._keyEvent = true;
            if ($.datepicker._datepickerShowing) {
                switch (event.keyCode) {
                    case 9:
                        $.datepicker._hideDatepicker();
                        handled = false;
                        break;
                    case 13:
                        var sel = $("td." + $.datepicker._dayOverClass + ":not(." + $.datepicker._currentClass + ")", inst.dpDiv);
                        if (sel[0]) {
                            $.datepicker._selectDay(event.target, inst.selectedMonth, inst.selectedYear, sel[0])
                        }
                        var onSelect = $.datepicker._get(inst, "onSelect");
                        if (onSelect) {
                            var dateStr = $.datepicker._formatDate(inst);
                            onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst])
                        } else {
                            $.datepicker._hideDatepicker()
                        }
                        return false;
                        break;
                    case 27:
                        $.datepicker._hideDatepicker();
                        break;
                    case 33:
                        $.datepicker._adjustDate(event.target, (event.ctrlKey ? -$.datepicker._get(inst, "stepBigMonths") : -$.datepicker._get(inst, "stepMonths")), "M");
                        break;
                    case 34:
                        $.datepicker._adjustDate(event.target, (event.ctrlKey ? +$.datepicker._get(inst, "stepBigMonths") : +$.datepicker._get(inst, "stepMonths")), "M");
                        break;
                    case 35:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._clearDate(event.target)
                        }
                        handled = event.ctrlKey || event.metaKey;
                        break;
                    case 36:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._gotoToday(event.target)
                        }
                        handled = event.ctrlKey || event.metaKey;
                        break;
                    case 37:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._adjustDate(event.target, (isRTL ? +1 : -1), "D")
                        }
                        handled = event.ctrlKey || event.metaKey;
                        if (event.originalEvent.altKey) {
                            $.datepicker._adjustDate(event.target, (event.ctrlKey ? -$.datepicker._get(inst, "stepBigMonths") : -$.datepicker._get(inst, "stepMonths")), "M")
                        }
                        break;
                    case 38:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._adjustDate(event.target, -7, "D")
                        }
                        handled = event.ctrlKey || event.metaKey;
                        break;
                    case 39:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._adjustDate(event.target, (isRTL ? -1 : +1), "D")
                        }
                        handled = event.ctrlKey || event.metaKey;
                        if (event.originalEvent.altKey) {
                            $.datepicker._adjustDate(event.target, (event.ctrlKey ? +$.datepicker._get(inst, "stepBigMonths") : +$.datepicker._get(inst, "stepMonths")), "M")
                        }
                        break;
                    case 40:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._adjustDate(event.target, +7, "D")
                        }
                        handled = event.ctrlKey || event.metaKey;
                        break;
                    default:
                        handled = false
                }
            } else {
                if (event.keyCode == 36 && event.ctrlKey) {
                    $.datepicker._showDatepicker(this)
                } else {
                    handled = false
                }
            }
            if (handled) {
                event.preventDefault();
                event.stopPropagation()
            }
        },
        _doKeyPress: function(event) {
            var inst = $.datepicker._getInst(event.target);
            if ($.datepicker._get(inst, "constrainInput")) {
                var chars = $.datepicker._possibleChars($.datepicker._get(inst, "dateFormat"));
                var chr = String.fromCharCode(event.charCode == undefined ? event.keyCode : event.charCode);
                return event.ctrlKey || event.metaKey || (chr < " " || !chars || chars.indexOf(chr) > -1)
            }
        },
        _doKeyUp: function(event) {
            var inst = $.datepicker._getInst(event.target);
            if (inst.input.val() != inst.lastVal) {
                try {
                    var date = $.datepicker.parseDate($.datepicker._get(inst, "dateFormat"), (inst.input ? inst.input.val() : null), $.datepicker._getFormatConfig(inst));
                    if (date) {
                        $.datepicker._setDateFromField(inst);
                        $.datepicker._updateAlternate(inst);
                        $.datepicker._updateDatepicker(inst)
                    }
                } catch (err) {
                    $.datepicker.log(err)
                }
            }
            return true
        },
        _showDatepicker: function(input) {
            input = input.target || input;
            if (input.nodeName.toLowerCase() != "input") {
                input = $("input", input.parentNode)[0]
            }
            if ($.datepicker._isDisabledDatepicker(input) || $.datepicker._lastInput == input) {
                return
            }
            var inst = $.datepicker._getInst(input);
            if ($.datepicker._curInst && $.datepicker._curInst != inst) {
                $.datepicker._curInst.dpDiv.stop(true, true);
                if (inst && $.datepicker._datepickerShowing) {
                    $.datepicker._hideDatepicker($.datepicker._curInst.input[0])
                }
            }
            var beforeShow = $.datepicker._get(inst, "beforeShow");
            var beforeShowSettings = beforeShow ? beforeShow.apply(input, [input, inst]) : {};
            if (beforeShowSettings === false) {
                return
            }
            extendRemove(inst.settings, beforeShowSettings);
            inst.lastVal = null;
            $.datepicker._lastInput = input;
            $.datepicker._setDateFromField(inst);
            if ($.datepicker._inDialog) {
                input.value = ""
            }
            if (!$.datepicker._pos) {
                $.datepicker._pos = $.datepicker._findPos(input);
                $.datepicker._pos[1] += input.offsetHeight
            }
            var isFixed = false;
            $(input).parents().each(function() {
                isFixed |= $(this).css("position") == "fixed";
                return !isFixed
            });
            var offset = {
                left: $.datepicker._pos[0],
                top: $.datepicker._pos[1]
            };
            $.datepicker._pos = null;
            inst.dpDiv.empty();
            inst.dpDiv.css({
                position: "absolute",
                display: "block",
                top: "-1000px"
            });
            $.datepicker._updateDatepicker(inst);
            offset = $.datepicker._checkOffset(inst, offset, isFixed);
            inst.dpDiv.css({
                position: ($.datepicker._inDialog && $.blockUI ? "static" : (isFixed ? "fixed" : "absolute")),
                display: "none",
                left: offset.left + "px",
                top: offset.top + "px"
            });
            if (!inst.inline) {
                var showAnim = $.datepicker._get(inst, "showAnim");
                var duration = $.datepicker._get(inst, "duration");
                var postProcess = function() {
                    var cover = inst.dpDiv.find("iframe.ui-datepicker-cover");
                    if (!!cover.length) {
                        var borders = $.datepicker._getBorders(inst.dpDiv);
                        cover.css({
                            left: -borders[0],
                            top: -borders[1],
                            width: inst.dpDiv.outerWidth(),
                            height: inst.dpDiv.outerHeight()
                        })
                    }
                };
                inst.dpDiv.zIndex($(input).zIndex() + 1);
                $.datepicker._datepickerShowing = true;
                if ($.effects && ($.effects.effect[showAnim] || $.effects[showAnim])) {
                    inst.dpDiv.show(showAnim, $.datepicker._get(inst, "showOptions"), duration, postProcess)
                } else {
                    inst.dpDiv[showAnim || "show"]((showAnim ? duration : null), postProcess)
                }
                if (!showAnim || !duration) {
                    postProcess()
                }
                if (inst.input.is(":visible") && !inst.input.is(":disabled")) {
                    inst.input.focus()
                }
                $.datepicker._curInst = inst
            }
        },
        _updateDatepicker: function(inst) {
            this.maxRows = 4;
            var borders = $.datepicker._getBorders(inst.dpDiv);
            instActive = inst;
            inst.dpDiv.empty().append(this._generateHTML(inst));
            this._attachHandlers(inst);
            var cover = inst.dpDiv.find("iframe.ui-datepicker-cover");
            if (!!cover.length) {
                cover.css({
                    left: -borders[0],
                    top: -borders[1],
                    width: inst.dpDiv.outerWidth(),
                    height: inst.dpDiv.outerHeight()
                })
            }
            inst.dpDiv.find("." + this._dayOverClass + " a").mouseover();
            var numMonths = this._getNumberOfMonths(inst);
            var cols = numMonths[1];
            var width = 17;
            inst.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");
            if (cols > 1) {
                inst.dpDiv.addClass("ui-datepicker-multi-" + cols).css("width", (width * cols) + "em")
            }
            inst.dpDiv[(numMonths[0] != 1 || numMonths[1] != 1 ? "add" : "remove") + "Class"]("ui-datepicker-multi");
            inst.dpDiv[(this._get(inst, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl");
            if (inst == $.datepicker._curInst && $.datepicker._datepickerShowing && inst.input && inst.input.is(":visible") && !inst.input.is(":disabled") && inst.input[0] != document.activeElement) {
                inst.input.focus()
            }
            if (inst.yearshtml) {
                var origyearshtml = inst.yearshtml;
                setTimeout(function() {
                    if (origyearshtml === inst.yearshtml && inst.yearshtml) {
                        inst.dpDiv.find("select.ui-datepicker-year:first").replaceWith(inst.yearshtml)
                    }
                    origyearshtml = inst.yearshtml = null
                }, 0)
            }
        },
        _getBorders: function(elem) {
            var convert = function(value) {
                return {
                    thin: 1,
                    medium: 2,
                    thick: 3
                }[value] || value
            };
            return [parseFloat(convert(elem.css("border-left-width"))), parseFloat(convert(elem.css("border-top-width")))]
        },
        _checkOffset: function(inst, offset, isFixed) {
            var dpWidth = inst.dpDiv.outerWidth();
            var dpHeight = inst.dpDiv.outerHeight();
            var inputWidth = inst.input ? inst.input.outerWidth() : 0;
            var inputHeight = inst.input ? inst.input.outerHeight() : 0;
            var viewWidth = document.documentElement.clientWidth + (isFixed ? 0 : $(document).scrollLeft());
            var viewHeight = document.documentElement.clientHeight + (isFixed ? 0 : $(document).scrollTop());
            offset.left -= (this._get(inst, "isRTL") ? (dpWidth - inputWidth) : 0);
            offset.left -= (isFixed && offset.left == inst.input.offset().left) ? $(document).scrollLeft() : 0;
            offset.top -= (isFixed && offset.top == (inst.input.offset().top + inputHeight)) ? $(document).scrollTop() : 0;
            offset.left -= Math.min(offset.left, (offset.left + dpWidth > viewWidth && viewWidth > dpWidth) ? Math.abs(offset.left + dpWidth - viewWidth) : 0);
            offset.top -= Math.min(offset.top, (offset.top + dpHeight > viewHeight && viewHeight > dpHeight) ? Math.abs(dpHeight + inputHeight) : 0);
            return offset
        },
        _findPos: function(obj) {
            var inst = this._getInst(obj);
            var isRTL = this._get(inst, "isRTL");
            while (obj && (obj.type == "hidden" || obj.nodeType != 1 || $.expr.filters.hidden(obj))) {
                obj = obj[isRTL ? "previousSibling" : "nextSibling"]
            }
            var position = $(obj).offset();
            return [position.left, position.top]
        },
        _hideDatepicker: function(input) {
            var inst = this._curInst;
            if (!inst || (input && inst != $.data(input, PROP_NAME))) {
                return
            }
            if (this._datepickerShowing) {
                var showAnim = this._get(inst, "showAnim");
                var duration = this._get(inst, "duration");
                var postProcess = function() {
                    $.datepicker._tidyDialog(inst)
                };
                if ($.effects && ($.effects.effect[showAnim] || $.effects[showAnim])) {
                    inst.dpDiv.hide(showAnim, $.datepicker._get(inst, "showOptions"), duration, postProcess)
                } else {
                    inst.dpDiv[(showAnim == "slideDown" ? "slideUp" : (showAnim == "fadeIn" ? "fadeOut" : "hide"))]((showAnim ? duration : null), postProcess)
                }
                if (!showAnim) {
                    postProcess()
                }
                this._datepickerShowing = false;
                var onClose = this._get(inst, "onClose");
                if (onClose) {
                    onClose.apply((inst.input ? inst.input[0] : null), [(inst.input ? inst.input.val() : ""), inst])
                }
                this._lastInput = null;
                if (this._inDialog) {
                    this._dialogInput.css({
                        position: "absolute",
                        left: "0",
                        top: "-100px"
                    });
                    if ($.blockUI) {
                        $.unblockUI();
                        $("body").append(this.dpDiv)
                    }
                }
                this._inDialog = false
            }
        },
        _tidyDialog: function(inst) {
            inst.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")
        },
        _checkExternalClick: function(event) {
            if (!$.datepicker._curInst) {
                return
            }
            var $target = $(event.target),
                inst = $.datepicker._getInst($target[0]);
            if ((($target[0].id != $.datepicker._mainDivId && $target.parents("#" + $.datepicker._mainDivId).length == 0 && !$target.hasClass($.datepicker.markerClassName) && !$target.closest("." + $.datepicker._triggerClass).length && $.datepicker._datepickerShowing && !($.datepicker._inDialog && $.blockUI))) || ($target.hasClass($.datepicker.markerClassName) && $.datepicker._curInst != inst)) {
                $.datepicker._hideDatepicker()
            }
        },
        _adjustDate: function(id, offset, period) {
            var target = $(id);
            var inst = this._getInst(target[0]);
            if (this._isDisabledDatepicker(target[0])) {
                return
            }
            this._adjustInstDate(inst, offset + (period == "M" ? this._get(inst, "showCurrentAtPos") : 0), period);
            this._updateDatepicker(inst)
        },
        _gotoToday: function(id) {
            var target = $(id);
            var inst = this._getInst(target[0]);
            if (this._get(inst, "gotoCurrent") && inst.currentDay) {
                inst.selectedDay = inst.currentDay;
                inst.drawMonth = inst.selectedMonth = inst.currentMonth;
                inst.drawYear = inst.selectedYear = inst.currentYear
            } else {
                var date = new Date();
                inst.selectedDay = date.getDate();
                inst.drawMonth = inst.selectedMonth = date.getMonth();
                inst.drawYear = inst.selectedYear = date.getFullYear()
            }
            this._notifyChange(inst);
            this._adjustDate(target)
        },
        _selectMonthYear: function(id, select, period) {
            var target = $(id);
            var inst = this._getInst(target[0]);
            inst["selected" + (period == "M" ? "Month" : "Year")] = inst["draw" + (period == "M" ? "Month" : "Year")] = parseInt(select.options[select.selectedIndex].value, 10);
            this._notifyChange(inst);
            this._adjustDate(target)
        },
        _selectDay: function(id, month, year, td) {
            var target = $(id);
            if ($(td).hasClass(this._unselectableClass) || this._isDisabledDatepicker(target[0])) {
                return
            }
            var inst = this._getInst(target[0]);
            inst.selectedDay = inst.currentDay = $("a", td).html();
            inst.selectedMonth = inst.currentMonth = month;
            inst.selectedYear = inst.currentYear = year;
            this._selectDate(id, this._formatDate(inst, inst.currentDay, inst.currentMonth, inst.currentYear))
        },
        _clearDate: function(id) {
            var target = $(id);
            var inst = this._getInst(target[0]);
            this._selectDate(target, "")
        },
        _selectDate: function(id, dateStr) {
            var target = $(id);
            var inst = this._getInst(target[0]);
            dateStr = (dateStr != null ? dateStr : this._formatDate(inst));
            if (inst.input) {
                inst.input.val(dateStr)
            }
            this._updateAlternate(inst);
            var onSelect = this._get(inst, "onSelect");
            if (onSelect) {
                onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst])
            } else {
                if (inst.input) {
                    inst.input.trigger("change")
                }
            }
            if (inst.inline) {
                this._updateDatepicker(inst)
            } else {
                this._hideDatepicker();
                this._lastInput = inst.input[0];
                if (typeof(inst.input[0]) != "object") {
                    inst.input.focus()
                }
                this._lastInput = null
            }
        },
        _updateAlternate: function(inst) {
            var altField = this._get(inst, "altField");
            if (altField) {
                var altFormat = this._get(inst, "altFormat") || this._get(inst, "dateFormat");
                var date = this._getDate(inst);
                var dateStr = this.formatDate(altFormat, date, this._getFormatConfig(inst));
                $(altField).each(function() {
                    $(this).val(dateStr)
                })
            }
        },
        noWeekends: function(date) {
            var day = date.getDay();
            return [(day > 0 && day < 6), ""]
        },
        iso8601Week: function(date) {
            var checkDate = new Date(date.getTime());
            checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));
            var time = checkDate.getTime();
            checkDate.setMonth(0);
            checkDate.setDate(1);
            return Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1
        },
        parseDate: function(format, value, settings) {
            if (format == null || value == null) {
                throw "Invalid arguments"
            }
            value = (typeof value == "object" ? value.toString() : value + "");
            if (value == "") {
                return null
            }
            var shortYearCutoff = (settings ? settings.shortYearCutoff : null) || this._defaults.shortYearCutoff;
            shortYearCutoff = (typeof shortYearCutoff != "string" ? shortYearCutoff : new Date().getFullYear() % 100 + parseInt(shortYearCutoff, 10));
            var dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort;
            var dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames;
            var monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort;
            var monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames;
            var year = -1;
            var month = -1;
            var day = -1;
            var doy = -1;
            var literal = false;
            var lookAhead = function(match) {
                var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) == match);
                if (matches) {
                    iFormat++
                }
                return matches
            };
            var getNumber = function(match) {
                var isDoubled = lookAhead(match);
                var size = (match == "@" ? 14 : (match == "!" ? 20 : (match == "y" && isDoubled ? 4 : (match == "o" ? 3 : 2))));
                var digits = new RegExp("^\\d{1," + size + "}");
                var num = value.substring(iValue).match(digits);
                if (!num) {
                    throw "Missing number at position " + iValue
                }
                iValue += num[0].length;
                return parseInt(num[0], 10)
            };
            var getName = function(match, shortNames, longNames) {
                var names = $.map(lookAhead(match) ? longNames : shortNames, function(v, k) {
                    return [
                        [k, v]
                    ]
                }).sort(function(a, b) {
                    return -(a[1].length - b[1].length)
                });
                var index = -1;
                $.each(names, function(i, pair) {
                    var name = pair[1];
                    if (value.substr(iValue, name.length).toLowerCase() == name.toLowerCase()) {
                        index = pair[0];
                        iValue += name.length;
                        return false
                    }
                });
                if (index != -1) {
                    return index + 1
                } else {
                    throw "Unknown name at position " + iValue
                }
            };
            var checkLiteral = function() {
                if (value.charAt(iValue) != format.charAt(iFormat)) {
                    throw "Unexpected literal at position " + iValue
                }
                iValue++
            };
            var iValue = 0;
            for (var iFormat = 0; iFormat < format.length; iFormat++) {
                if (literal) {
                    if (format.charAt(iFormat) == "'" && !lookAhead("'")) {
                        literal = false
                    } else {
                        checkLiteral()
                    }
                } else {
                    switch (format.charAt(iFormat)) {
                        case "d":
                            day = getNumber("d");
                            break;
                        case "D":
                            getName("D", dayNamesShort, dayNames);
                            break;
                        case "o":
                            doy = getNumber("o");
                            break;
                        case "m":
                            month = getNumber("m");
                            break;
                        case "M":
                            month = getName("M", monthNamesShort, monthNames);
                            break;
                        case "y":
                            year = getNumber("y");
                            break;
                        case "@":
                            var date = new Date(getNumber("@"));
                            year = date.getFullYear();
                            month = date.getMonth() + 1;
                            day = date.getDate();
                            break;
                        case "!":
                            var date = new Date((getNumber("!") - this._ticksTo1970) / 10000);
                            year = date.getFullYear();
                            month = date.getMonth() + 1;
                            day = date.getDate();
                            break;
                        case "'":
                            if (lookAhead("'")) {
                                checkLiteral()
                            } else {
                                literal = true
                            }
                            break;
                        default:
                            checkLiteral()
                    }
                }
            }
            if (iValue < value.length) {
                var extra = value.substr(iValue);
                if (!/^\s+/.test(extra)) {
                    throw "Extra/unparsed characters found in date: " + extra
                }
            }
            if (year == -1) {
                year = new Date().getFullYear()
            } else {
                if (year < 100) {
                    year += new Date().getFullYear() - new Date().getFullYear() % 100 + (year <= shortYearCutoff ? 0 : -100)
                }
            }
            if (doy > -1) {
                month = 1;
                day = doy;
                do {
                    var dim = this._getDaysInMonth(year, month - 1);
                    if (day <= dim) {
                        break
                    }
                    month++;
                    day -= dim
                } while (true)
            }
            var date = this._daylightSavingAdjust(new Date(year, month - 1, day));
            if (date.getFullYear() != year || date.getMonth() + 1 != month || date.getDate() != day) {
                throw "Invalid date"
            }
            return date
        },
        ATOM: "yy-mm-dd",
        COOKIE: "D, dd M yy",
        ISO_8601: "yy-mm-dd",
        RFC_822: "D, d M y",
        RFC_850: "DD, dd-M-y",
        RFC_1036: "D, d M y",
        RFC_1123: "D, d M yy",
        RFC_2822: "D, d M yy",
        RSS: "D, d M y",
        TICKS: "!",
        TIMESTAMP: "@",
        W3C: "yy-mm-dd",
        _ticksTo1970: (((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) + Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000),
        formatDate: function(format, date, settings) {
            if (!date) {
                return ""
            }
            var dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort;
            var dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames;
            var monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort;
            var monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames;
            var lookAhead = function(match) {
                var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) == match);
                if (matches) {
                    iFormat++
                }
                return matches
            };
            var formatNumber = function(match, value, len) {
                var num = "" + value;
                if (lookAhead(match)) {
                    while (num.length < len) {
                        num = "0" + num
                    }
                }
                return num
            };
            var formatName = function(match, value, shortNames, longNames) {
                return (lookAhead(match) ? longNames[value] : shortNames[value])
            };
            var output = "";
            var literal = false;
            if (date) {
                for (var iFormat = 0; iFormat < format.length; iFormat++) {
                    if (literal) {
                        if (format.charAt(iFormat) == "'" && !lookAhead("'")) {
                            literal = false
                        } else {
                            output += format.charAt(iFormat)
                        }
                    } else {
                        switch (format.charAt(iFormat)) {
                            case "d":
                                output += formatNumber("d", date.getDate(), 2);
                                break;
                            case "D":
                                output += formatName("D", date.getDay(), dayNamesShort, dayNames);
                                break;
                            case "o":
                                output += formatNumber("o", Math.round((new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / 86400000), 3);
                                break;
                            case "m":
                                output += formatNumber("m", date.getMonth() + 1, 2);
                                break;
                            case "M":
                                output += formatName("M", date.getMonth(), monthNamesShort, monthNames);
                                break;
                            case "y":
                                output += (lookAhead("y") ? date.getFullYear() : (date.getYear() % 100 < 10 ? "0" : "") + date.getYear() % 100);
                                break;
                            case "@":
                                output += date.getTime();
                                break;
                            case "!":
                                output += date.getTime() * 10000 + this._ticksTo1970;
                                break;
                            case "'":
                                if (lookAhead("'")) {
                                    output += "'"
                                } else {
                                    literal = true
                                }
                                break;
                            default:
                                output += format.charAt(iFormat)
                        }
                    }
                }
            }
            return output
        },
        _possibleChars: function(format) {
            var chars = "";
            var literal = false;
            var lookAhead = function(match) {
                var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) == match);
                if (matches) {
                    iFormat++
                }
                return matches
            };
            for (var iFormat = 0; iFormat < format.length; iFormat++) {
                if (literal) {
                    if (format.charAt(iFormat) == "'" && !lookAhead("'")) {
                        literal = false
                    } else {
                        chars += format.charAt(iFormat)
                    }
                } else {
                    switch (format.charAt(iFormat)) {
                        case "d":
                        case "m":
                        case "y":
                        case "@":
                            chars += "0123456789";
                            break;
                        case "D":
                        case "M":
                            return null;
                        case "'":
                            if (lookAhead("'")) {
                                chars += "'"
                            } else {
                                literal = true
                            }
                            break;
                        default:
                            chars += format.charAt(iFormat)
                    }
                }
            }
            return chars
        },
        _get: function(inst, name) {
            return inst.settings[name] !== undefined ? inst.settings[name] : this._defaults[name]
        },
        _setDateFromField: function(inst, noDefault) {
            if (inst.input.val() == inst.lastVal) {
                return
            }
            var dateFormat = this._get(inst, "dateFormat");
            var dates = inst.lastVal = inst.input ? inst.input.val() : null;
            var date, defaultDate;
            date = defaultDate = this._getDefaultDate(inst);
            var settings = this._getFormatConfig(inst);
            try {
                date = this.parseDate(dateFormat, dates, settings) || defaultDate
            } catch (event) {
                this.log(event);
                dates = (noDefault ? "" : dates)
            }
            inst.selectedDay = date.getDate();
            inst.drawMonth = inst.selectedMonth = date.getMonth();
            inst.drawYear = inst.selectedYear = date.getFullYear();
            inst.currentDay = (dates ? date.getDate() : 0);
            inst.currentMonth = (dates ? date.getMonth() : 0);
            inst.currentYear = (dates ? date.getFullYear() : 0);
            this._adjustInstDate(inst)
        },
        _getDefaultDate: function(inst) {
            return this._restrictMinMax(inst, this._determineDate(inst, this._get(inst, "defaultDate"), new Date()))
        },
        _determineDate: function(inst, date, defaultDate) {
            var offsetNumeric = function(offset) {
                var date = new Date();
                date.setDate(date.getDate() + offset);
                return date
            };
            var offsetString = function(offset) {
                try {
                    return $.datepicker.parseDate($.datepicker._get(inst, "dateFormat"), offset, $.datepicker._getFormatConfig(inst))
                } catch (e) {}
                var date = (offset.toLowerCase().match(/^c/) ? $.datepicker._getDate(inst) : null) || new Date();
                var year = date.getFullYear();
                var month = date.getMonth();
                var day = date.getDate();
                var pattern = /([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g;
                var matches = pattern.exec(offset);
                while (matches) {
                    switch (matches[2] || "d") {
                        case "d":
                        case "D":
                            day += parseInt(matches[1], 10);
                            break;
                        case "w":
                        case "W":
                            day += parseInt(matches[1], 10) * 7;
                            break;
                        case "m":
                        case "M":
                            month += parseInt(matches[1], 10);
                            day = Math.min(day, $.datepicker._getDaysInMonth(year, month));
                            break;
                        case "y":
                        case "Y":
                            year += parseInt(matches[1], 10);
                            day = Math.min(day, $.datepicker._getDaysInMonth(year, month));
                            break
                    }
                    matches = pattern.exec(offset)
                }
                return new Date(year, month, day)
            };
            var newDate = (date == null || date === "" ? defaultDate : (typeof date == "string" ? offsetString(date) : (typeof date == "number" ? (isNaN(date) ? defaultDate : offsetNumeric(date)) : new Date(date.getTime()))));
            newDate = (newDate && newDate.toString() == "Invalid Date" ? defaultDate : newDate);
            if (newDate) {
                newDate.setHours(0);
                newDate.setMinutes(0);
                newDate.setSeconds(0);
                newDate.setMilliseconds(0)
            }
            return this._daylightSavingAdjust(newDate)
        },
        _daylightSavingAdjust: function(date) {
            if (!date) {
                return null
            }
            date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);
            return date
        },
        _setDate: function(inst, date, noChange) {
            var clear = !date;
            var origMonth = inst.selectedMonth;
            var origYear = inst.selectedYear;
            var newDate = this._restrictMinMax(inst, this._determineDate(inst, date, new Date()));
            inst.selectedDay = inst.currentDay = newDate.getDate();
            inst.drawMonth = inst.selectedMonth = inst.currentMonth = newDate.getMonth();
            inst.drawYear = inst.selectedYear = inst.currentYear = newDate.getFullYear();
            if ((origMonth != inst.selectedMonth || origYear != inst.selectedYear) && !noChange) {
                this._notifyChange(inst)
            }
            this._adjustInstDate(inst);
            if (inst.input) {
                inst.input.val(clear ? "" : this._formatDate(inst))
            }
        },
        _getDate: function(inst) {
            var startDate = (!inst.currentYear || (inst.input && inst.input.val() == "") ? null : this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay)));
            return startDate
        },
        _attachHandlers: function(inst) {
            var stepMonths = this._get(inst, "stepMonths");
            var id = "#" + inst.id.replace(/\\\\/g, "\\");
            inst.dpDiv.find("[data-handler]").map(function() {
                var handler = {
                    prev: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._adjustDate(id, -stepMonths, "M")
                    },
                    next: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._adjustDate(id, +stepMonths, "M")
                    },
                    hide: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._hideDatepicker()
                    },
                    today: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._gotoToday(id)
                    },
                    selectDay: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._selectDay(id, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this);
                        return false
                    },
                    selectMonth: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._selectMonthYear(id, this, "M");
                        return false
                    },
                    selectYear: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._selectMonthYear(id, this, "Y");
                        return false
                    }
                };
                $(this).bind(this.getAttribute("data-event"), handler[this.getAttribute("data-handler")])
            })
        },
        _generateHTML: function(inst) {
            var today = new Date();
            today = this._daylightSavingAdjust(new Date(today.getFullYear(), today.getMonth(), today.getDate()));
            var isRTL = this._get(inst, "isRTL");
            var showButtonPanel = this._get(inst, "showButtonPanel");
            var hideIfNoPrevNext = this._get(inst, "hideIfNoPrevNext");
            var navigationAsDateFormat = this._get(inst, "navigationAsDateFormat");
            var numMonths = this._getNumberOfMonths(inst);
            var showCurrentAtPos = this._get(inst, "showCurrentAtPos");
            var stepMonths = this._get(inst, "stepMonths");
            var isMultiMonth = (numMonths[0] != 1 || numMonths[1] != 1);
            var currentDate = this._daylightSavingAdjust((!inst.currentDay ? new Date(9999, 9, 9) : new Date(inst.currentYear, inst.currentMonth, inst.currentDay)));
            var minDate = this._getMinMaxDate(inst, "min");
            var maxDate = this._getMinMaxDate(inst, "max");
            var drawMonth = inst.drawMonth - showCurrentAtPos;
            var drawYear = inst.drawYear;
            if (drawMonth < 0) {
                drawMonth += 12;
                drawYear--
            }
            if (maxDate) {
                var maxDraw = this._daylightSavingAdjust(new Date(maxDate.getFullYear(), maxDate.getMonth() - (numMonths[0] * numMonths[1]) + 1, maxDate.getDate()));
                maxDraw = (minDate && maxDraw < minDate ? minDate : maxDraw);
                while (this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1)) > maxDraw) {
                    drawMonth--;
                    if (drawMonth < 0) {
                        drawMonth = 11;
                        drawYear--
                    }
                }
            }
            inst.drawMonth = drawMonth;
            inst.drawYear = drawYear;
            var prevText = this._get(inst, "prevText");
            prevText = (!navigationAsDateFormat ? prevText : this.formatDate(prevText, this._daylightSavingAdjust(new Date(drawYear, drawMonth - stepMonths, 1)), this._getFormatConfig(inst)));
            var prev = (this._canAdjustMonth(inst, -1, drawYear, drawMonth) ? '<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="' + prevText + '"><span class="ui-icon ui-icon-circle-triangle-' + (isRTL ? "e" : "w") + '">' + prevText + "</span></a>" : (hideIfNoPrevNext ? "" : '<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="' + prevText + '"><span class="ui-icon ui-icon-circle-triangle-' + (isRTL ? "e" : "w") + '">' + prevText + "</span></a>"));
            var nextText = this._get(inst, "nextText");
            nextText = (!navigationAsDateFormat ? nextText : this.formatDate(nextText, this._daylightSavingAdjust(new Date(drawYear, drawMonth + stepMonths, 1)), this._getFormatConfig(inst)));
            var next = (this._canAdjustMonth(inst, +1, drawYear, drawMonth) ? '<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="' + nextText + '"><span class="ui-icon ui-icon-circle-triangle-' + (isRTL ? "w" : "e") + '">' + nextText + "</span></a>" : (hideIfNoPrevNext ? "" : '<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="' + nextText + '"><span class="ui-icon ui-icon-circle-triangle-' + (isRTL ? "w" : "e") + '">' + nextText + "</span></a>"));
            var currentText = this._get(inst, "currentText");
            var gotoDate = (this._get(inst, "gotoCurrent") && inst.currentDay ? currentDate : today);
            currentText = (!navigationAsDateFormat ? currentText : this.formatDate(currentText, gotoDate, this._getFormatConfig(inst)));
            var controls = (!inst.inline ? '<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">' + this._get(inst, "closeText") + "</button>" : "");
            var buttonPanel = (showButtonPanel) ? '<div class="ui-datepicker-buttonpane ui-widget-content">' + (isRTL ? controls : "") + (this._isInRange(inst, gotoDate) ? '<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">' + currentText + "</button>" : "") + (isRTL ? "" : controls) + "</div>" : "";
            var firstDay = parseInt(this._get(inst, "firstDay"), 10);
            firstDay = (isNaN(firstDay) ? 0 : firstDay);
            var showWeek = this._get(inst, "showWeek");
            var dayNames = this._get(inst, "dayNames");
            var dayNamesShort = this._get(inst, "dayNamesShort");
            var dayNamesMin = this._get(inst, "dayNamesMin");
            var monthNames = this._get(inst, "monthNames");
            var monthNamesShort = this._get(inst, "monthNamesShort");
            var beforeShowDay = this._get(inst, "beforeShowDay");
            var showOtherMonths = this._get(inst, "showOtherMonths");
            var selectOtherMonths = this._get(inst, "selectOtherMonths");
            var calculateWeek = this._get(inst, "calculateWeek") || this.iso8601Week;
            var defaultDate = this._getDefaultDate(inst);
            var html = "";
            for (var row = 0; row < numMonths[0]; row++) {
                var group = "";
                this.maxRows = 4;
                for (var col = 0; col < numMonths[1]; col++) {
                    var selectedDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, inst.selectedDay));
                    var cornerClass = " ui-corner-all";
                    var calender = "";
                    if (isMultiMonth) {
                        calender += '<div class="ui-datepicker-group';
                        if (numMonths[1] > 1) {
                            switch (col) {
                                case 0:
                                    calender += " ui-datepicker-group-first";
                                    cornerClass = " ui-corner-" + (isRTL ? "right" : "left");
                                    break;
                                case numMonths[1] - 1:
                                    calender += " ui-datepicker-group-last";
                                    cornerClass = " ui-corner-" + (isRTL ? "left" : "right");
                                    break;
                                default:
                                    calender += " ui-datepicker-group-middle";
                                    cornerClass = "";
                                    break
                            }
                        }
                        calender += '">'
                    }
                    calender += '<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix' + cornerClass + '">' + (/all|left/.test(cornerClass) && row == 0 ? (isRTL ? next : prev) : "") + (/all|right/.test(cornerClass) && row == 0 ? (isRTL ? prev : next) : "") + this._generateMonthYearHeader(inst, drawMonth, drawYear, minDate, maxDate, row > 0 || col > 0, monthNames, monthNamesShort) + '</div><table class="ui-datepicker-calendar"><thead><tr>';
                    var thead = (showWeek ? '<th class="ui-datepicker-week-col">' + this._get(inst, "weekHeader") + "</th>" : "");
                    for (var dow = 0; dow < 7; dow++) {
                        var day = (dow + firstDay) % 7;
                        thead += "<th" + ((dow + firstDay + 6) % 7 >= 5 ? ' class="ui-datepicker-week-end"' : "") + '><span title="' + dayNames[day] + '">' + dayNamesMin[day] + "</span></th>"
                    }
                    calender += thead + "</tr></thead><tbody>";
                    var daysInMonth = this._getDaysInMonth(drawYear, drawMonth);
                    if (drawYear == inst.selectedYear && drawMonth == inst.selectedMonth) {
                        inst.selectedDay = Math.min(inst.selectedDay, daysInMonth)
                    }
                    var leadDays = (this._getFirstDayOfMonth(drawYear, drawMonth) - firstDay + 7) % 7;
                    var curRows = Math.ceil((leadDays + daysInMonth) / 7);
                    var numRows = (isMultiMonth ? this.maxRows > curRows ? this.maxRows : curRows : curRows);
                    this.maxRows = numRows;
                    var printDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1 - leadDays));
                    for (var dRow = 0; dRow < numRows; dRow++) {
                        calender += "<tr>";
                        var tbody = (!showWeek ? "" : '<td class="ui-datepicker-week-col">' + this._get(inst, "calculateWeek")(printDate) + "</td>");
                        for (var dow = 0; dow < 7; dow++) {
                            var daySettings = (beforeShowDay ? beforeShowDay.apply((inst.input ? inst.input[0] : null), [printDate]) : [true, ""]);
                            var otherMonth = (printDate.getMonth() != drawMonth);
                            var unselectable = (otherMonth && !selectOtherMonths) || !daySettings[0] || (minDate && printDate < minDate) || (maxDate && printDate > maxDate);
                            tbody += '<td class="' + ((dow + firstDay + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (otherMonth ? " ui-datepicker-other-month" : "") + ((printDate.getTime() == selectedDate.getTime() && drawMonth == inst.selectedMonth && inst._keyEvent) || (defaultDate.getTime() == printDate.getTime() && defaultDate.getTime() == selectedDate.getTime()) ? " " + this._dayOverClass : "") + (unselectable ? " " + this._unselectableClass + " ui-state-disabled" : "") + (otherMonth && !showOtherMonths ? "" : " " + daySettings[1] + (printDate.getTime() == currentDate.getTime() ? " " + this._currentClass : "") + (printDate.getTime() == today.getTime() ? " ui-datepicker-today" : "")) + '"' + ((!otherMonth || showOtherMonths) && daySettings[2] ? ' title="' + daySettings[2] + '"' : "") + (unselectable ? "" : ' data-handler="selectDay" data-event="click" data-month="' + printDate.getMonth() + '" data-year="' + printDate.getFullYear() + '"') + ">" + (otherMonth && !showOtherMonths ? "&#xa0;" : (unselectable ? '<span class="ui-state-default">' + printDate.getDate() + "</span>" : '<a class="ui-state-default' + (printDate.getTime() == today.getTime() ? " ui-state-highlight" : "") + (printDate.getTime() == currentDate.getTime() ? " ui-state-active" : "") + (otherMonth ? " ui-priority-secondary" : "") + '" href="#">' + printDate.getDate() + "</a>")) + "</td>";
                            printDate.setDate(printDate.getDate() + 1);
                            printDate = this._daylightSavingAdjust(printDate)
                        }
                        calender += tbody + "</tr>"
                    }
                    drawMonth++;
                    if (drawMonth > 11) {
                        drawMonth = 0;
                        drawYear++
                    }
                    calender += "</tbody></table>" + (isMultiMonth ? "</div>" + ((numMonths[0] > 0 && col == numMonths[1] - 1) ? '<div class="ui-datepicker-row-break"></div>' : "") : "");
                    group += calender
                }
                html += group
            }
            html += buttonPanel + ($.ui.ie6 && !inst.inline ? '<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>' : "");
            inst._keyEvent = false;
            return html
        },
        _generateMonthYearHeader: function(inst, drawMonth, drawYear, minDate, maxDate, secondary, monthNames, monthNamesShort) {
            var changeMonth = this._get(inst, "changeMonth");
            var changeYear = this._get(inst, "changeYear");
            var showMonthAfterYear = this._get(inst, "showMonthAfterYear");
            var html = '<div class="ui-datepicker-title">';
            var monthHtml = "";
            if (secondary || !changeMonth) {
                monthHtml += '<span class="ui-datepicker-month">' + monthNames[drawMonth] + "</span>"
            } else {
                var inMinYear = (minDate && minDate.getFullYear() == drawYear);
                var inMaxYear = (maxDate && maxDate.getFullYear() == drawYear);
                monthHtml += '<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';
                for (var month = 0; month < 12; month++) {
                    if ((!inMinYear || month >= minDate.getMonth()) && (!inMaxYear || month <= maxDate.getMonth())) {
                        monthHtml += '<option value="' + month + '"' + (month == drawMonth ? ' selected="selected"' : "") + ">" + monthNamesShort[month] + "</option>"
                    }
                }
                monthHtml += "</select>"
            }
            if (!showMonthAfterYear) {
                html += monthHtml + (secondary || !(changeMonth && changeYear) ? "&#xa0;" : "")
            }
            if (!inst.yearshtml) {
                inst.yearshtml = "";
                if (secondary || !changeYear) {
                    html += '<span class="ui-datepicker-year">' + drawYear + "</span>"
                } else {
                    var years = this._get(inst, "yearRange").split(":");
                    var thisYear = new Date().getFullYear();
                    var determineYear = function(value) {
                        var year = (value.match(/c[+-].*/) ? drawYear + parseInt(value.substring(1), 10) : (value.match(/[+-].*/) ? thisYear + parseInt(value, 10) : parseInt(value, 10)));
                        return (isNaN(year) ? thisYear : year)
                    };
                    var year = determineYear(years[0]);
                    var endYear = Math.max(year, determineYear(years[1] || ""));
                    year = (minDate ? Math.max(year, minDate.getFullYear()) : year);
                    endYear = (maxDate ? Math.min(endYear, maxDate.getFullYear()) : endYear);
                    inst.yearshtml += '<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';
                    for (; year <= endYear; year++) {
                        inst.yearshtml += '<option value="' + year + '"' + (year == drawYear ? ' selected="selected"' : "") + ">" + year + "</option>"
                    }
                    inst.yearshtml += "</select>";
                    html += inst.yearshtml;
                    inst.yearshtml = null
                }
            }
            html += this._get(inst, "yearSuffix");
            if (showMonthAfterYear) {
                html += (secondary || !(changeMonth && changeYear) ? "&#xa0;" : "") + monthHtml
            }
            html += "</div>";
            return html
        },
        _adjustInstDate: function(inst, offset, period) {
            var year = inst.drawYear + (period == "Y" ? offset : 0);
            var month = inst.drawMonth + (period == "M" ? offset : 0);
            var day = Math.min(inst.selectedDay, this._getDaysInMonth(year, month)) + (period == "D" ? offset : 0);
            var date = this._restrictMinMax(inst, this._daylightSavingAdjust(new Date(year, month, day)));
            inst.selectedDay = date.getDate();
            inst.drawMonth = inst.selectedMonth = date.getMonth();
            inst.drawYear = inst.selectedYear = date.getFullYear();
            if (period == "M" || period == "Y") {
                this._notifyChange(inst)
            }
        },
        _restrictMinMax: function(inst, date) {
            var minDate = this._getMinMaxDate(inst, "min");
            var maxDate = this._getMinMaxDate(inst, "max");
            var newDate = (minDate && date < minDate ? minDate : date);
            newDate = (maxDate && newDate > maxDate ? maxDate : newDate);
            return newDate
        },
        _notifyChange: function(inst) {
            var onChange = this._get(inst, "onChangeMonthYear");
            if (onChange) {
                onChange.apply((inst.input ? inst.input[0] : null), [inst.selectedYear, inst.selectedMonth + 1, inst])
            }
        },
        _getNumberOfMonths: function(inst) {
            var numMonths = this._get(inst, "numberOfMonths");
            return (numMonths == null ? [1, 1] : (typeof numMonths == "number" ? [1, numMonths] : numMonths))
        },
        _getMinMaxDate: function(inst, minMax) {
            return this._determineDate(inst, this._get(inst, minMax + "Date"), null)
        },
        _getDaysInMonth: function(year, month) {
            return 32 - this._daylightSavingAdjust(new Date(year, month, 32)).getDate()
        },
        _getFirstDayOfMonth: function(year, month) {
            return new Date(year, month, 1).getDay()
        },
        _canAdjustMonth: function(inst, offset, curYear, curMonth) {
            var numMonths = this._getNumberOfMonths(inst);
            var date = this._daylightSavingAdjust(new Date(curYear, curMonth + (offset < 0 ? offset : numMonths[0] * numMonths[1]), 1));
            if (offset < 0) {
                date.setDate(this._getDaysInMonth(date.getFullYear(), date.getMonth()))
            }
            return this._isInRange(inst, date)
        },
        _isInRange: function(inst, date) {
            var minDate = this._getMinMaxDate(inst, "min");
            var maxDate = this._getMinMaxDate(inst, "max");
            return ((!minDate || date.getTime() >= minDate.getTime()) && (!maxDate || date.getTime() <= maxDate.getTime()))
        },
        _getFormatConfig: function(inst) {
            var shortYearCutoff = this._get(inst, "shortYearCutoff");
            shortYearCutoff = (typeof shortYearCutoff != "string" ? shortYearCutoff : new Date().getFullYear() % 100 + parseInt(shortYearCutoff, 10));
            return {
                shortYearCutoff: shortYearCutoff,
                dayNamesShort: this._get(inst, "dayNamesShort"),
                dayNames: this._get(inst, "dayNames"),
                monthNamesShort: this._get(inst, "monthNamesShort"),
                monthNames: this._get(inst, "monthNames")
            }
        },
        _formatDate: function(inst, day, month, year) {
            if (!day) {
                inst.currentDay = inst.selectedDay;
                inst.currentMonth = inst.selectedMonth;
                inst.currentYear = inst.selectedYear
            }
            var date = (day ? (typeof day == "object" ? day : this._daylightSavingAdjust(new Date(year, month, day))) : this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay)));
            return this.formatDate(this._get(inst, "dateFormat"), date, this._getFormatConfig(inst))
        }
    });

    function bindHover(dpDiv) {
        var selector = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
        return dpDiv.delegate(selector, "mouseout", function() {
            $(this).removeClass("ui-state-hover");
            if (this.className.indexOf("ui-datepicker-prev") != -1) {
                $(this).removeClass("ui-datepicker-prev-hover")
            }
            if (this.className.indexOf("ui-datepicker-next") != -1) {
                $(this).removeClass("ui-datepicker-next-hover")
            }
        }).delegate(selector, "mouseover", function() {
            if (!$.datepicker._isDisabledDatepicker(instActive.inline ? dpDiv.parent()[0] : instActive.input[0])) {
                $(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");
                $(this).addClass("ui-state-hover");
                if (this.className.indexOf("ui-datepicker-prev") != -1) {
                    $(this).addClass("ui-datepicker-prev-hover")
                }
                if (this.className.indexOf("ui-datepicker-next") != -1) {
                    $(this).addClass("ui-datepicker-next-hover")
                }
            }
        })
    }

    function extendRemove(target, props) {
        $.extend(target, props);
        for (var name in props) {
            if (props[name] == null || props[name] == undefined) {
                target[name] = props[name]
            }
        }
        return target
    }
    $.fn.datepicker = function(options) {
        if (!this.length) {
            return this
        }
        if (!$.datepicker.initialized) {
            $(document).mousedown($.datepicker._checkExternalClick).find(document.body).append($.datepicker.dpDiv);
            $.datepicker.initialized = true
        }
        var otherArgs = Array.prototype.slice.call(arguments, 1);
        if (typeof options == "string" && (options == "isDisabled" || options == "getDate" || options == "widget")) {
            return $.datepicker["_" + options + "Datepicker"].apply($.datepicker, [this[0]].concat(otherArgs))
        }
        if (options == "option" && arguments.length == 2 && typeof arguments[1] == "string") {
            return $.datepicker["_" + options + "Datepicker"].apply($.datepicker, [this[0]].concat(otherArgs))
        }
        return this.each(function() {
            typeof options == "string" ? $.datepicker["_" + options + "Datepicker"].apply($.datepicker, [this].concat(otherArgs)) : $.datepicker._attachDatepicker(this, options)
        })
    };
    $.datepicker = new Datepicker();
    $.datepicker.initialized = false;
    $.datepicker.uuid = new Date().getTime();
    $.datepicker.version = "1.9.2";
    window["DP_jQuery_" + dpuuid] = $
})(jQuery);
(function(d, e) {
    var b = "ui-dialog ui-widget ui-widget-content ui-corner-all ",
        a = {
            buttons: true,
            height: true,
            maxHeight: true,
            maxWidth: true,
            minHeight: true,
            minWidth: true,
            width: true
        },
        c = {
            maxHeight: true,
            maxWidth: true,
            minHeight: true,
            minWidth: true
        };
    d.widget("ui.dialog", {
        version: "1.9.2",
        options: {
            autoOpen: true,
            buttons: {},
            closeOnEscape: true,
            closeText: "close",
            dialogClass: "",
            draggable: true,
            hide: null,
            height: "auto",
            maxHeight: false,
            maxWidth: false,
            minHeight: 150,
            minWidth: 150,
            modal: false,
            position: {
                my: "center",
                at: "center",
                of: window,
                collision: "fit",
                using: function(g) {
                    var f = d(this).css(g).offset().top;
                    if (f < 0) {
                        d(this).css("top", g.top - f)
                    }
                }
            },
            resizable: true,
            show: null,
            stack: true,
            title: "",
            width: 300,
            zIndex: 1000
        },
        _create: function() {
            this.originalTitle = this.element.attr("title");
            if (typeof this.originalTitle !== "string") {
                this.originalTitle = ""
            }
            this.oldPosition = {
                parent: this.element.parent(),
                index: this.element.parent().children().index(this.element)
            };
            this.options.title = this.options.title || this.originalTitle;
            var l = this,
                k = this.options,
                n = k.title || "&#160;",
                h, m, f, j, g;
            h = (this.uiDialog = d("<div>")).addClass(b + k.dialogClass).css({
                display: "none",
                outline: 0,
                zIndex: k.zIndex
            }).attr("tabIndex", -1).keydown(function(o) {
                if (k.closeOnEscape && !o.isDefaultPrevented() && o.keyCode && o.keyCode === d.ui.keyCode.ESCAPE) {
                    l.close(o);
                    o.preventDefault()
                }
            }).mousedown(function(o) {
                l.moveToTop(false, o)
            }).appendTo("body");
            this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(h);
            m = (this.uiDialogTitlebar = d("<div>")).addClass("ui-dialog-titlebar  ui-widget-header  ui-corner-all  ui-helper-clearfix").bind("mousedown", function() {
                h.focus()
            }).prependTo(h);
            f = d("<a href='#'></a>").addClass("ui-dialog-titlebar-close  ui-corner-all").attr("role", "button").click(function(o) {
                o.preventDefault();
                l.close(o)
            }).appendTo(m);
            (this.uiDialogTitlebarCloseText = d("<span>")).addClass("ui-icon ui-icon-closethick").text(k.closeText).appendTo(f);
            j = d("<span>").uniqueId().addClass("ui-dialog-title").html(n).prependTo(m);
            g = (this.uiDialogButtonPane = d("<div>")).addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix");
            (this.uiButtonSet = d("<div>")).addClass("ui-dialog-buttonset").appendTo(g);
            h.attr({
                role: "dialog",
                "aria-labelledby": j.attr("id")
            });
            m.find("*").add(m).disableSelection();
            this._hoverable(f);
            this._focusable(f);
            if (k.draggable && d.fn.draggable) {
                this._makeDraggable()
            }
            if (k.resizable && d.fn.resizable) {
                this._makeResizable()
            }
            this._createButtons(k.buttons);
            this._isOpen = false;
            if (d.fn.bgiframe) {
                h.bgiframe()
            }
            this._on(h, {
                keydown: function(q) {
                    if (!k.modal || q.keyCode !== d.ui.keyCode.TAB) {
                        return
                    }
                    var p = d(":tabbable", h),
                        r = p.filter(":first"),
                        o = p.filter(":last");
                    if (q.target === o[0] && !q.shiftKey) {
                        r.focus(1);
                        return false
                    } else {
                        if (q.target === r[0] && q.shiftKey) {
                            o.focus(1);
                            return false
                        }
                    }
                }
            })
        },
        _init: function() {
            if (this.options.autoOpen) {
                this.open()
            }
        },
        _destroy: function() {
            var g, f = this.oldPosition;
            if (this.overlay) {
                this.overlay.destroy()
            }
            this.uiDialog.hide();
            this.element.removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body");
            this.uiDialog.remove();
            if (this.originalTitle) {
                this.element.attr("title", this.originalTitle)
            }
            g = f.parent.children().eq(f.index);
            if (g.length && g[0] !== this.element[0]) {
                g.before(this.element)
            } else {
                f.parent.append(this.element)
            }
        },
        widget: function() {
            return this.uiDialog
        },
        close: function(j) {
            var h = this,
                g, f;
            if (!this._isOpen) {
                return
            }
            if (false === this._trigger("beforeClose", j)) {
                return
            }
            this._isOpen = false;
            if (this.overlay) {
                this.overlay.destroy()
            }
            if (this.options.hide) {
                this._hide(this.uiDialog, this.options.hide, function() {
                    h._trigger("close", j)
                })
            } else {
                this.uiDialog.hide();
                this._trigger("close", j)
            }
            d.ui.dialog.overlay.resize();
            if (this.options.modal) {
                g = 0;
                d(".ui-dialog").each(function() {
                    if (this !== h.uiDialog[0]) {
                        f = d(this).css("z-index");
                        if (!isNaN(f)) {
                            g = Math.max(g, f)
                        }
                    }
                });
                d.ui.dialog.maxZ = g
            }
            return this
        },
        isOpen: function() {
            return this._isOpen
        },
        moveToTop: function(j, h) {
            var g = this.options,
                f;
            if ((g.modal && !j) || (!g.stack && !g.modal)) {
                return this._trigger("focus", h)
            }
            if (g.zIndex > d.ui.dialog.maxZ) {
                d.ui.dialog.maxZ = g.zIndex
            }
            if (this.overlay) {
                d.ui.dialog.maxZ += 1;
                d.ui.dialog.overlay.maxZ = d.ui.dialog.maxZ;
                this.overlay.$el.css("z-index", d.ui.dialog.overlay.maxZ)
            }
            f = {
                scrollTop: this.element.scrollTop(),
                scrollLeft: this.element.scrollLeft()
            };
            d.ui.dialog.maxZ += 1;
            this.uiDialog.css("z-index", d.ui.dialog.maxZ);
            this.element.attr(f);
            this._trigger("focus", h);
            return this
        },
        open: function() {
            if (this._isOpen) {
                return
            }
            var h, g = this.options,
                f = this.uiDialog;
            this._size();
            this._position(g.position);
            f.show(g.show);
            this.overlay = g.modal ? new d.ui.dialog.overlay(this) : null;
            this.moveToTop(true);
            h = this.element.find(":tabbable");
            if (!h.length) {
                h = this.uiDialogButtonPane.find(":tabbable");
                if (!h.length) {
                    h = f
                }
            }
            h.eq(0).focus();
            this._isOpen = true;
            this._trigger("open");
            return this
        },
        _createButtons: function(h) {
            var g = this,
                f = false;
            this.uiDialogButtonPane.remove();
            this.uiButtonSet.empty();
            if (typeof h === "object" && h !== null) {
                d.each(h, function() {
                    return !(f = true)
                })
            }
            if (f) {
                d.each(h, function(j, l) {
                    var k, m;
                    l = d.isFunction(l) ? {
                        click: l,
                        text: j
                    } : l;
                    l = d.extend({
                        type: "button"
                    }, l);
                    m = l.click;
                    l.click = function() {
                        m.apply(g.element[0], arguments)
                    };
                    k = d("<button></button>", l).appendTo(g.uiButtonSet);
                    if (d.fn.button) {
                        k.button()
                    }
                });
                this.uiDialog.addClass("ui-dialog-buttons");
                this.uiDialogButtonPane.appendTo(this.uiDialog)
            } else {
                this.uiDialog.removeClass("ui-dialog-buttons")
            }
        },
        _makeDraggable: function() {
            var h = this,
                g = this.options;

            function f(j) {
                return {
                    position: j.position,
                    offset: j.offset
                }
            }
            this.uiDialog.draggable({
                cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
                handle: ".ui-dialog-titlebar",
                containment: "document",
                start: function(j, k) {
                    d(this).addClass("ui-dialog-dragging");
                    h._trigger("dragStart", j, f(k))
                },
                drag: function(j, k) {
                    h._trigger("drag", j, f(k))
                },
                stop: function(j, k) {
                    g.position = [k.position.left - h.document.scrollLeft(), k.position.top - h.document.scrollTop()];
                    d(this).removeClass("ui-dialog-dragging");
                    h._trigger("dragStop", j, f(k));
                    d.ui.dialog.overlay.resize()
                }
            })
        },
        _makeResizable: function(k) {
            k = (k === e ? this.options.resizable : k);
            var l = this,
                j = this.options,
                f = this.uiDialog.css("position"),
                h = typeof k === "string" ? k : "n,e,s,w,se,sw,ne,nw";

            function g(m) {
                return {
                    originalPosition: m.originalPosition,
                    originalSize: m.originalSize,
                    position: m.position,
                    size: m.size
                }
            }
            this.uiDialog.resizable({
                cancel: ".ui-dialog-content",
                containment: "document",
                alsoResize: this.element,
                maxWidth: j.maxWidth,
                maxHeight: j.maxHeight,
                minWidth: j.minWidth,
                minHeight: this._minHeight(),
                handles: h,
                start: function(m, n) {
                    d(this).addClass("ui-dialog-resizing");
                    l._trigger("resizeStart", m, g(n))
                },
                resize: function(m, n) {
                    l._trigger("resize", m, g(n))
                },
                stop: function(m, n) {
                    d(this).removeClass("ui-dialog-resizing");
                    j.height = d(this).height();
                    j.width = d(this).width();
                    l._trigger("resizeStop", m, g(n));
                    d.ui.dialog.overlay.resize()
                }
            }).css("position", f).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se")
        },
        _minHeight: function() {
            var f = this.options;
            if (f.height === "auto") {
                return f.minHeight
            } else {
                return Math.min(f.minHeight, f.height)
            }
        },
        _position: function(g) {
            var h = [],
                j = [0, 0],
                f;
            if (g) {
                if (typeof g === "string" || (typeof g === "object" && "0" in g)) {
                    h = g.split ? g.split(" ") : [g[0], g[1]];
                    if (h.length === 1) {
                        h[1] = h[0]
                    }
                    d.each(["left", "top"], function(l, k) {
                        if (+h[l] === h[l]) {
                            j[l] = h[l];
                            h[l] = k
                        }
                    });
                    g = {
                        my: h[0] + (j[0] < 0 ? j[0] : "+" + j[0]) + " " + h[1] + (j[1] < 0 ? j[1] : "+" + j[1]),
                        at: h.join(" ")
                    }
                }
                g = d.extend({}, d.ui.dialog.prototype.options.position, g)
            } else {
                g = d.ui.dialog.prototype.options.position
            }
            f = this.uiDialog.is(":visible");
            if (!f) {
                this.uiDialog.show()
            }
            this.uiDialog.position(g);
            if (!f) {
                this.uiDialog.hide()
            }
        },
        _setOptions: function(h) {
            var j = this,
                f = {},
                g = false;
            d.each(h, function(k, l) {
                j._setOption(k, l);
                if (k in a) {
                    g = true
                }
                if (k in c) {
                    f[k] = l
                }
            });
            if (g) {
                this._size()
            }
            if (this.uiDialog.is(":data(resizable)")) {
                this.uiDialog.resizable("option", f)
            }
        },
        _setOption: function(h, j) {
            var g, k, f = this.uiDialog;
            switch (h) {
                case "buttons":
                    this._createButtons(j);
                    break;
                case "closeText":
                    this.uiDialogTitlebarCloseText.text("" + j);
                    break;
                case "dialogClass":
                    f.removeClass(this.options.dialogClass).addClass(b + j);
                    break;
                case "disabled":
                    if (j) {
                        f.addClass("ui-dialog-disabled")
                    } else {
                        f.removeClass("ui-dialog-disabled")
                    }
                    break;
                case "draggable":
                    g = f.is(":data(draggable)");
                    if (g && !j) {
                        f.draggable("destroy")
                    }
                    if (!g && j) {
                        this._makeDraggable()
                    }
                    break;
                case "position":
                    this._position(j);
                    break;
                case "resizable":
                    k = f.is(":data(resizable)");
                    if (k && !j) {
                        f.resizable("destroy")
                    }
                    if (k && typeof j === "string") {
                        f.resizable("option", "handles", j)
                    }
                    if (!k && j !== false) {
                        this._makeResizable(j)
                    }
                    break;
                case "title":
                    d(".ui-dialog-title", this.uiDialogTitlebar).html("" + (j || "&#160;"));
                    break
            }
            this._super(h, j)
        },
        _size: function() {
            var g, k, j, h = this.options,
                f = this.uiDialog.is(":visible");
            this.element.show().css({
                width: "auto",
                minHeight: 0,
                height: 0
            });
            if (h.minWidth > h.width) {
                h.width = h.minWidth
            }
            g = this.uiDialog.css({
                height: "auto",
                width: h.width
            }).outerHeight();
            k = Math.max(0, h.minHeight - g);
            if (h.height === "auto") {
                if (d.support.minHeight) {
                    this.element.css({
                        minHeight: k,
                        height: "auto"
                    })
                } else {
                    this.uiDialog.show();
                    j = this.element.css("height", "auto").height();
                    if (!f) {
                        this.uiDialog.hide()
                    }
                    this.element.height(Math.max(j, k))
                }
            } else {
                this.element.height(Math.max(h.height - g, 0))
            }
            if (this.uiDialog.is(":data(resizable)")) {
                this.uiDialog.resizable("option", "minHeight", this._minHeight())
            }
        }
    });
    d.extend(d.ui.dialog, {
        uuid: 0,
        maxZ: 0,
        getTitleId: function(f) {
            var g = f.attr("id");
            if (!g) {
                this.uuid += 1;
                g = this.uuid
            }
            return "ui-dialog-title-" + g
        },
        overlay: function(f) {
            this.$el = d.ui.dialog.overlay.create(f)
        }
    });
    d.extend(d.ui.dialog.overlay, {
        instances: [],
        oldInstances: [],
        maxZ: 0,
        events: d.map("focus,mousedown,mouseup,keydown,keypress,click".split(","), function(f) {
            return f + ".dialog-overlay"
        }).join(" "),
        create: function(g) {
            if (this.instances.length === 0) {
                setTimeout(function() {
                    if (d.ui.dialog.overlay.instances.length) {
                        d(document).bind(d.ui.dialog.overlay.events, function(h) {
                            if (d(h.target).zIndex() < d.ui.dialog.overlay.maxZ) {
                                return false
                            }
                        })
                    }
                }, 1);
                d(window).bind("resize.dialog-overlay", d.ui.dialog.overlay.resize)
            }
            var f = (this.oldInstances.pop() || d("<div>").addClass("ui-widget-overlay"));
            d(document).bind("keydown.dialog-overlay", function(h) {
                var j = d.ui.dialog.overlay.instances;
                if (j.length !== 0 && j[j.length - 1] === f && g.options.closeOnEscape && !h.isDefaultPrevented() && h.keyCode && h.keyCode === d.ui.keyCode.ESCAPE) {
                    g.close(h);
                    h.preventDefault()
                }
            });
            f.appendTo(document.body).css({
                width: this.width(),
                height: this.height()
            });
            if (d.fn.bgiframe) {
                f.bgiframe()
            }
            this.instances.push(f);
            return f
        },
        destroy: function(f) {
            var g = d.inArray(f, this.instances),
                h = 0;
            if (g !== -1) {
                this.oldInstances.push(this.instances.splice(g, 1)[0])
            }
            if (this.instances.length === 0) {
                d([document, window]).unbind(".dialog-overlay")
            }
            f.height(0).width(0).remove();
            d.each(this.instances, function() {
                h = Math.max(h, this.css("z-index"))
            });
            this.maxZ = h
        },
        height: function() {
            var g, f;
            if (d.ui.ie) {
                g = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);
                f = Math.max(document.documentElement.offsetHeight, document.body.offsetHeight);
                if (g < f) {
                    return d(window).height() + "px"
                } else {
                    return g + "px"
                }
            } else {
                return d(document).height() + "px"
            }
        },
        width: function() {
            var f, g;
            if (d.ui.ie) {
                f = Math.max(document.documentElement.scrollWidth, document.body.scrollWidth);
                g = Math.max(document.documentElement.offsetWidth, document.body.offsetWidth);
                if (f < g) {
                    return d(window).width() + "px"
                } else {
                    return f + "px"
                }
            } else {
                return d(document).width() + "px"
            }
        },
        resize: function() {
            var f = d([]);
            d.each(d.ui.dialog.overlay.instances, function() {
                f = f.add(this)
            });
            f.css({
                width: 0,
                height: 0
            }).css({
                width: d.ui.dialog.overlay.width(),
                height: d.ui.dialog.overlay.height()
            })
        }
    });
    d.extend(d.ui.dialog.overlay.prototype, {
        destroy: function() {
            d.ui.dialog.overlay.destroy(this.$el)
        }
    })
}(jQuery));
(function(a, b) {
    a.widget("ui.draggable", a.ui.mouse, {
        version: "1.9.2",
        widgetEventPrefix: "drag",
        options: {
            addClasses: true,
            appendTo: "parent",
            axis: false,
            connectToSortable: false,
            containment: false,
            cursor: "auto",
            cursorAt: false,
            grid: false,
            handle: false,
            helper: "original",
            iframeFix: false,
            opacity: false,
            refreshPositions: false,
            revert: false,
            revertDuration: 500,
            scope: "default",
            scroll: true,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            snap: false,
            snapMode: "both",
            snapTolerance: 20,
            stack: false,
            zIndex: false
        },
        _create: function() {
            if (this.options.helper == "original" && !(/^(?:r|a|f)/).test(this.element.css("position"))) {
                this.element[0].style.position = "relative"
            }(this.options.addClasses && this.element.addClass("ui-draggable"));
            (this.options.disabled && this.element.addClass("ui-draggable-disabled"));
            this._mouseInit()
        },
        _destroy: function() {
            this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");
            this._mouseDestroy()
        },
        _mouseCapture: function(c) {
            var d = this.options;
            if (this.helper || d.disabled || a(c.target).is(".ui-resizable-handle")) {
                return false
            }
            this.handle = this._getHandle(c);
            if (!this.handle) {
                return false
            }
            a(d.iframeFix === true ? "iframe" : d.iframeFix).each(function() {
                a('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({
                    width: this.offsetWidth + "px",
                    height: this.offsetHeight + "px",
                    position: "absolute",
                    opacity: "0.001",
                    zIndex: 1000
                }).css(a(this).offset()).appendTo("body")
            });
            return true
        },
        _mouseStart: function(c) {
            var d = this.options;
            this.helper = this._createHelper(c);
            this.helper.addClass("ui-draggable-dragging");
            this._cacheHelperProportions();
            if (a.ui.ddmanager) {
                a.ui.ddmanager.current = this
            }
            this._cacheMargins();
            this.cssPosition = this.helper.css("position");
            this.scrollParent = this.helper.scrollParent();
            this.offset = this.positionAbs = this.element.offset();
            this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            };
            a.extend(this.offset, {
                click: {
                    left: c.pageX - this.offset.left,
                    top: c.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            });
            this.originalPosition = this.position = this._generatePosition(c);
            this.originalPageX = c.pageX;
            this.originalPageY = c.pageY;
            (d.cursorAt && this._adjustOffsetFromHelper(d.cursorAt));
            if (d.containment) {
                this._setContainment()
            }
            if (this._trigger("start", c) === false) {
                this._clear();
                return false
            }
            this._cacheHelperProportions();
            if (a.ui.ddmanager && !d.dropBehaviour) {
                a.ui.ddmanager.prepareOffsets(this, c)
            }
            this._mouseDrag(c, true);
            if (a.ui.ddmanager) {
                a.ui.ddmanager.dragStart(this, c)
            }
            return true
        },
        _mouseDrag: function(c, e) {
            this.position = this._generatePosition(c);
            this.positionAbs = this._convertPositionTo("absolute");
            if (!e) {
                var d = this._uiHash();
                if (this._trigger("drag", c, d) === false) {
                    this._mouseUp({});
                    return false
                }
                this.position = d.position
            }
            if (!this.options.axis || this.options.axis != "y") {
                this.helper[0].style.left = this.position.left + "px"
            }
            if (!this.options.axis || this.options.axis != "x") {
                this.helper[0].style.top = this.position.top + "px"
            }
            if (a.ui.ddmanager) {
                a.ui.ddmanager.drag(this, c)
            }
            return false
        },
        _mouseStop: function(e) {
            var g = false;
            if (a.ui.ddmanager && !this.options.dropBehaviour) {
                g = a.ui.ddmanager.drop(this, e)
            }
            if (this.dropped) {
                g = this.dropped;
                this.dropped = false
            }
            var c = this.element[0],
                f = false;
            while (c && (c = c.parentNode)) {
                if (c == document) {
                    f = true
                }
            }
            if (!f && this.options.helper === "original") {
                return false
            }
            if ((this.options.revert == "invalid" && !g) || (this.options.revert == "valid" && g) || this.options.revert === true || (a.isFunction(this.options.revert) && this.options.revert.call(this.element, g))) {
                var d = this;
                a(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
                    if (d._trigger("stop", e) !== false) {
                        d._clear()
                    }
                })
            } else {
                if (this._trigger("stop", e) !== false) {
                    this._clear()
                }
            }
            return false
        },
        _mouseUp: function(c) {
            a("div.ui-draggable-iframeFix").each(function() {
                this.parentNode.removeChild(this)
            });
            if (a.ui.ddmanager) {
                a.ui.ddmanager.dragStop(this, c)
            }
            return a.ui.mouse.prototype._mouseUp.call(this, c)
        },
        cancel: function() {
            if (this.helper.is(".ui-draggable-dragging")) {
                this._mouseUp({})
            } else {
                this._clear()
            }
            return this
        },
        _getHandle: function(c) {
            var d = !this.options.handle || !a(this.options.handle, this.element).length ? true : false;
            a(this.options.handle, this.element).find("*").andSelf().each(function() {
                if (this == c.target) {
                    d = true
                }
            });
            return d
        },
        _createHelper: function(d) {
            var e = this.options;
            var c = a.isFunction(e.helper) ? a(e.helper.apply(this.element[0], [d])) : (e.helper == "clone" ? this.element.clone().removeAttr("id") : this.element);
            if (!c.parents("body").length) {
                c.appendTo((e.appendTo == "parent" ? this.element[0].parentNode : e.appendTo))
            }
            if (c[0] != this.element[0] && !(/(fixed|absolute)/).test(c.css("position"))) {
                c.css("position", "absolute")
            }
            return c
        },
        _adjustOffsetFromHelper: function(c) {
            if (typeof c == "string") {
                c = c.split(" ")
            }
            if (a.isArray(c)) {
                c = {
                    left: +c[0],
                    top: +c[1] || 0
                }
            }
            if ("left" in c) {
                this.offset.click.left = c.left + this.margins.left
            }
            if ("right" in c) {
                this.offset.click.left = this.helperProportions.width - c.right + this.margins.left
            }
            if ("top" in c) {
                this.offset.click.top = c.top + this.margins.top
            }
            if ("bottom" in c) {
                this.offset.click.top = this.helperProportions.height - c.bottom + this.margins.top
            }
        },
        _getParentOffset: function() {
            this.offsetParent = this.helper.offsetParent();
            var c = this.offsetParent.offset();
            if (this.cssPosition == "absolute" && this.scrollParent[0] != document && a.contains(this.scrollParent[0], this.offsetParent[0])) {
                c.left += this.scrollParent.scrollLeft();
                c.top += this.scrollParent.scrollTop()
            }
            if ((this.offsetParent[0] == document.body) || (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && a.ui.ie)) {
                c = {
                    top: 0,
                    left: 0
                }
            }
            return {
                top: c.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: c.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function() {
            if (this.cssPosition == "relative") {
                var c = this.element.position();
                return {
                    top: c.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: c.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                }
            } else {
                return {
                    top: 0,
                    left: 0
                }
            }
        },
        _cacheMargins: function() {
            this.margins = {
                left: (parseInt(this.element.css("marginLeft"), 10) || 0),
                top: (parseInt(this.element.css("marginTop"), 10) || 0),
                right: (parseInt(this.element.css("marginRight"), 10) || 0),
                bottom: (parseInt(this.element.css("marginBottom"), 10) || 0)
            }
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function() {
            var g = this.options;
            if (g.containment == "parent") {
                g.containment = this.helper[0].parentNode
            }
            if (g.containment == "document" || g.containment == "window") {
                this.containment = [g.containment == "document" ? 0 : a(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, g.containment == "document" ? 0 : a(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, (g.containment == "document" ? 0 : a(window).scrollLeft()) + a(g.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (g.containment == "document" ? 0 : a(window).scrollTop()) + (a(g.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]
            }
            if (!(/^(document|window|parent)$/).test(g.containment) && g.containment.constructor != Array) {
                var h = a(g.containment);
                var e = h[0];
                if (!e) {
                    return
                }
                var f = h.offset();
                var d = (a(e).css("overflow") != "hidden");
                this.containment = [(parseInt(a(e).css("borderLeftWidth"), 10) || 0) + (parseInt(a(e).css("paddingLeft"), 10) || 0), (parseInt(a(e).css("borderTopWidth"), 10) || 0) + (parseInt(a(e).css("paddingTop"), 10) || 0), (d ? Math.max(e.scrollWidth, e.offsetWidth) : e.offsetWidth) - (parseInt(a(e).css("borderLeftWidth"), 10) || 0) - (parseInt(a(e).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (d ? Math.max(e.scrollHeight, e.offsetHeight) : e.offsetHeight) - (parseInt(a(e).css("borderTopWidth"), 10) || 0) - (parseInt(a(e).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom];
                this.relative_container = h
            } else {
                if (g.containment.constructor == Array) {
                    this.containment = g.containment
                }
            }
        },
        _convertPositionTo: function(g, j) {
            if (!j) {
                j = this.position
            }
            var e = g == "absolute" ? 1 : -1;
            var f = this.options,
                c = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                h = (/(html|body)/i).test(c[0].tagName);
            return {
                top: (j.top + this.offset.relative.top * e + this.offset.parent.top * e - ((this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : (h ? 0 : c.scrollTop())) * e)),
                left: (j.left + this.offset.relative.left * e + this.offset.parent.left * e - ((this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : h ? 0 : c.scrollLeft()) * e))
            }
        },
        _generatePosition: function(d) {
            var e = this.options,
                m = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                j = (/(html|body)/i).test(m[0].tagName);
            var h = d.pageX;
            var g = d.pageY;
            if (this.originalPosition) {
                var c;
                if (this.containment) {
                    if (this.relative_container) {
                        var l = this.relative_container.offset();
                        c = [this.containment[0] + l.left, this.containment[1] + l.top, this.containment[2] + l.left, this.containment[3] + l.top]
                    } else {
                        c = this.containment
                    }
                    if (d.pageX - this.offset.click.left < c[0]) {
                        h = c[0] + this.offset.click.left
                    }
                    if (d.pageY - this.offset.click.top < c[1]) {
                        g = c[1] + this.offset.click.top
                    }
                    if (d.pageX - this.offset.click.left > c[2]) {
                        h = c[2] + this.offset.click.left
                    }
                    if (d.pageY - this.offset.click.top > c[3]) {
                        g = c[3] + this.offset.click.top
                    }
                }
                if (e.grid) {
                    var k = e.grid[1] ? this.originalPageY + Math.round((g - this.originalPageY) / e.grid[1]) * e.grid[1] : this.originalPageY;
                    g = c ? (!(k - this.offset.click.top < c[1] || k - this.offset.click.top > c[3]) ? k : (!(k - this.offset.click.top < c[1]) ? k - e.grid[1] : k + e.grid[1])) : k;
                    var f = e.grid[0] ? this.originalPageX + Math.round((h - this.originalPageX) / e.grid[0]) * e.grid[0] : this.originalPageX;
                    h = c ? (!(f - this.offset.click.left < c[0] || f - this.offset.click.left > c[2]) ? f : (!(f - this.offset.click.left < c[0]) ? f - e.grid[0] : f + e.grid[0])) : f
                }
            }
            return {
                top: (g - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ((this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : (j ? 0 : m.scrollTop())))),
                left: (h - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ((this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : j ? 0 : m.scrollLeft())))
            }
        },
        _clear: function() {
            this.helper.removeClass("ui-draggable-dragging");
            if (this.helper[0] != this.element[0] && !this.cancelHelperRemoval) {
                this.helper.remove()
            }
            this.helper = null;
            this.cancelHelperRemoval = false
        },
        _trigger: function(c, d, e) {
            e = e || this._uiHash();
            a.ui.plugin.call(this, c, [d, e]);
            if (c == "drag") {
                this.positionAbs = this._convertPositionTo("absolute")
            }
            return a.Widget.prototype._trigger.call(this, c, d, e)
        },
        plugins: {},
        _uiHash: function(c) {
            return {
                helper: this.helper,
                position: this.position,
                originalPosition: this.originalPosition,
                offset: this.positionAbs
            }
        }
    });
    a.ui.plugin.add("draggable", "connectToSortable", {
        start: function(d, f) {
            var e = a(this).data("draggable"),
                g = e.options,
                c = a.extend({}, f, {
                    item: e.element
                });
            e.sortables = [];
            a(g.connectToSortable).each(function() {
                var h = a.data(this, "sortable");
                if (h && !h.options.disabled) {
                    e.sortables.push({
                        instance: h,
                        shouldRevert: h.options.revert
                    });
                    h.refreshPositions();
                    h._trigger("activate", d, c)
                }
            })
        },
        stop: function(d, f) {
            var e = a(this).data("draggable"),
                c = a.extend({}, f, {
                    item: e.element
                });
            a.each(e.sortables, function() {
                if (this.instance.isOver) {
                    this.instance.isOver = 0;
                    e.cancelHelperRemoval = true;
                    this.instance.cancelHelperRemoval = false;
                    if (this.shouldRevert) {
                        this.instance.options.revert = true
                    }
                    this.instance._mouseStop(d);
                    this.instance.options.helper = this.instance.options._helper;
                    if (e.options.helper == "original") {
                        this.instance.currentItem.css({
                            top: "auto",
                            left: "auto"
                        })
                    }
                } else {
                    this.instance.cancelHelperRemoval = false;
                    this.instance._trigger("deactivate", d, c)
                }
            })
        },
        drag: function(d, g) {
            var f = a(this).data("draggable"),
                c = this;
            var e = function(k) {
                var q = this.offset.click.top,
                    p = this.offset.click.left;
                var h = this.positionAbs.top,
                    m = this.positionAbs.left;
                var l = k.height,
                    n = k.width;
                var r = k.top,
                    j = k.left;
                return a.ui.isOver(h + q, m + p, r, j, l, n)
            };
            a.each(f.sortables, function(j) {
                var h = false;
                var k = this;
                this.instance.positionAbs = f.positionAbs;
                this.instance.helperProportions = f.helperProportions;
                this.instance.offset.click = f.offset.click;
                if (this.instance._intersectsWith(this.instance.containerCache)) {
                    h = true;
                    a.each(f.sortables, function() {
                        this.instance.positionAbs = f.positionAbs;
                        this.instance.helperProportions = f.helperProportions;
                        this.instance.offset.click = f.offset.click;
                        if (this != k && this.instance._intersectsWith(this.instance.containerCache) && a.ui.contains(k.instance.element[0], this.instance.element[0])) {
                            h = false
                        }
                        return h
                    })
                }
                if (h) {
                    if (!this.instance.isOver) {
                        this.instance.isOver = 1;
                        this.instance.currentItem = a(c).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item", true);
                        this.instance.options._helper = this.instance.options.helper;
                        this.instance.options.helper = function() {
                            return g.helper[0]
                        };
                        d.target = this.instance.currentItem[0];
                        this.instance._mouseCapture(d, true);
                        this.instance._mouseStart(d, true, true);
                        this.instance.offset.click.top = f.offset.click.top;
                        this.instance.offset.click.left = f.offset.click.left;
                        this.instance.offset.parent.left -= f.offset.parent.left - this.instance.offset.parent.left;
                        this.instance.offset.parent.top -= f.offset.parent.top - this.instance.offset.parent.top;
                        f._trigger("toSortable", d);
                        f.dropped = this.instance.element;
                        f.currentItem = f.element;
                        this.instance.fromOutside = f
                    }
                    if (this.instance.currentItem) {
                        this.instance._mouseDrag(d)
                    }
                } else {
                    if (this.instance.isOver) {
                        this.instance.isOver = 0;
                        this.instance.cancelHelperRemoval = true;
                        this.instance.options.revert = false;
                        this.instance._trigger("out", d, this.instance._uiHash(this.instance));
                        this.instance._mouseStop(d, true);
                        this.instance.options.helper = this.instance.options._helper;
                        this.instance.currentItem.remove();
                        if (this.instance.placeholder) {
                            this.instance.placeholder.remove()
                        }
                        f._trigger("fromSortable", d);
                        f.dropped = false
                    }
                }
            })
        }
    });
    a.ui.plugin.add("draggable", "cursor", {
        start: function(d, e) {
            var c = a("body"),
                f = a(this).data("draggable").options;
            if (c.css("cursor")) {
                f._cursor = c.css("cursor")
            }
            c.css("cursor", f.cursor)
        },
        stop: function(c, d) {
            var e = a(this).data("draggable").options;
            if (e._cursor) {
                a("body").css("cursor", e._cursor)
            }
        }
    });
    a.ui.plugin.add("draggable", "opacity", {
        start: function(d, e) {
            var c = a(e.helper),
                f = a(this).data("draggable").options;
            if (c.css("opacity")) {
                f._opacity = c.css("opacity")
            }
            c.css("opacity", f.opacity)
        },
        stop: function(c, d) {
            var e = a(this).data("draggable").options;
            if (e._opacity) {
                a(d.helper).css("opacity", e._opacity)
            }
        }
    });
    a.ui.plugin.add("draggable", "scroll", {
        start: function(d, e) {
            var c = a(this).data("draggable");
            if (c.scrollParent[0] != document && c.scrollParent[0].tagName != "HTML") {
                c.overflowOffset = c.scrollParent.offset()
            }
        },
        drag: function(e, f) {
            var d = a(this).data("draggable"),
                g = d.options,
                c = false;
            if (d.scrollParent[0] != document && d.scrollParent[0].tagName != "HTML") {
                if (!g.axis || g.axis != "x") {
                    if ((d.overflowOffset.top + d.scrollParent[0].offsetHeight) - e.pageY < g.scrollSensitivity) {
                        d.scrollParent[0].scrollTop = c = d.scrollParent[0].scrollTop + g.scrollSpeed
                    } else {
                        if (e.pageY - d.overflowOffset.top < g.scrollSensitivity) {
                            d.scrollParent[0].scrollTop = c = d.scrollParent[0].scrollTop - g.scrollSpeed
                        }
                    }
                }
                if (!g.axis || g.axis != "y") {
                    if ((d.overflowOffset.left + d.scrollParent[0].offsetWidth) - e.pageX < g.scrollSensitivity) {
                        d.scrollParent[0].scrollLeft = c = d.scrollParent[0].scrollLeft + g.scrollSpeed
                    } else {
                        if (e.pageX - d.overflowOffset.left < g.scrollSensitivity) {
                            d.scrollParent[0].scrollLeft = c = d.scrollParent[0].scrollLeft - g.scrollSpeed
                        }
                    }
                }
            } else {
                if (!g.axis || g.axis != "x") {
                    if (e.pageY - a(document).scrollTop() < g.scrollSensitivity) {
                        c = a(document).scrollTop(a(document).scrollTop() - g.scrollSpeed)
                    } else {
                        if (a(window).height() - (e.pageY - a(document).scrollTop()) < g.scrollSensitivity) {
                            c = a(document).scrollTop(a(document).scrollTop() + g.scrollSpeed)
                        }
                    }
                }
                if (!g.axis || g.axis != "y") {
                    if (e.pageX - a(document).scrollLeft() < g.scrollSensitivity) {
                        c = a(document).scrollLeft(a(document).scrollLeft() - g.scrollSpeed)
                    } else {
                        if (a(window).width() - (e.pageX - a(document).scrollLeft()) < g.scrollSensitivity) {
                            c = a(document).scrollLeft(a(document).scrollLeft() + g.scrollSpeed)
                        }
                    }
                }
            }
            if (c !== false && a.ui.ddmanager && !g.dropBehaviour) {
                a.ui.ddmanager.prepareOffsets(d, e)
            }
        }
    });
    a.ui.plugin.add("draggable", "snap", {
        start: function(d, e) {
            var c = a(this).data("draggable"),
                f = c.options;
            c.snapElements = [];
            a(f.snap.constructor != String ? (f.snap.items || ":data(draggable)") : f.snap).each(function() {
                var h = a(this);
                var g = h.offset();
                if (this != c.element[0]) {
                    c.snapElements.push({
                        item: this,
                        width: h.outerWidth(),
                        height: h.outerHeight(),
                        top: g.top,
                        left: g.left
                    })
                }
            })
        },
        drag: function(u, p) {
            var g = a(this).data("draggable"),
                q = g.options;
            var y = q.snapTolerance;
            var x = p.offset.left,
                w = x + g.helperProportions.width,
                f = p.offset.top,
                e = f + g.helperProportions.height;
            for (var v = g.snapElements.length - 1; v >= 0; v--) {
                var s = g.snapElements[v].left,
                    n = s + g.snapElements[v].width,
                    m = g.snapElements[v].top,
                    A = m + g.snapElements[v].height;
                if (!((s - y < x && x < n + y && m - y < f && f < A + y) || (s - y < x && x < n + y && m - y < e && e < A + y) || (s - y < w && w < n + y && m - y < f && f < A + y) || (s - y < w && w < n + y && m - y < e && e < A + y))) {
                    if (g.snapElements[v].snapping) {
                        (g.options.snap.release && g.options.snap.release.call(g.element, u, a.extend(g._uiHash(), {
                            snapItem: g.snapElements[v].item
                        })))
                    }
                    g.snapElements[v].snapping = false;
                    continue
                }
                if (q.snapMode != "inner") {
                    var c = Math.abs(m - e) <= y;
                    var z = Math.abs(A - f) <= y;
                    var j = Math.abs(s - w) <= y;
                    var k = Math.abs(n - x) <= y;
                    if (c) {
                        p.position.top = g._convertPositionTo("relative", {
                            top: m - g.helperProportions.height,
                            left: 0
                        }).top - g.margins.top
                    }
                    if (z) {
                        p.position.top = g._convertPositionTo("relative", {
                            top: A,
                            left: 0
                        }).top - g.margins.top
                    }
                    if (j) {
                        p.position.left = g._convertPositionTo("relative", {
                            top: 0,
                            left: s - g.helperProportions.width
                        }).left - g.margins.left
                    }
                    if (k) {
                        p.position.left = g._convertPositionTo("relative", {
                            top: 0,
                            left: n
                        }).left - g.margins.left
                    }
                }
                var h = (c || z || j || k);
                if (q.snapMode != "outer") {
                    var c = Math.abs(m - f) <= y;
                    var z = Math.abs(A - e) <= y;
                    var j = Math.abs(s - x) <= y;
                    var k = Math.abs(n - w) <= y;
                    if (c) {
                        p.position.top = g._convertPositionTo("relative", {
                            top: m,
                            left: 0
                        }).top - g.margins.top
                    }
                    if (z) {
                        p.position.top = g._convertPositionTo("relative", {
                            top: A - g.helperProportions.height,
                            left: 0
                        }).top - g.margins.top
                    }
                    if (j) {
                        p.position.left = g._convertPositionTo("relative", {
                            top: 0,
                            left: s
                        }).left - g.margins.left
                    }
                    if (k) {
                        p.position.left = g._convertPositionTo("relative", {
                            top: 0,
                            left: n - g.helperProportions.width
                        }).left - g.margins.left
                    }
                }
                if (!g.snapElements[v].snapping && (c || z || j || k || h)) {
                    (g.options.snap.snap && g.options.snap.snap.call(g.element, u, a.extend(g._uiHash(), {
                        snapItem: g.snapElements[v].item
                    })))
                }
                g.snapElements[v].snapping = (c || z || j || k || h)
            }
        }
    });
    a.ui.plugin.add("draggable", "stack", {
        start: function(d, e) {
            var g = a(this).data("draggable").options;
            var f = a.makeArray(a(g.stack)).sort(function(j, h) {
                return (parseInt(a(j).css("zIndex"), 10) || 0) - (parseInt(a(h).css("zIndex"), 10) || 0)
            });
            if (!f.length) {
                return
            }
            var c = parseInt(f[0].style.zIndex) || 0;
            a(f).each(function(h) {
                this.style.zIndex = c + h
            });
            this[0].style.zIndex = c + f.length
        }
    });
    a.ui.plugin.add("draggable", "zIndex", {
        start: function(d, e) {
            var c = a(e.helper),
                f = a(this).data("draggable").options;
            if (c.css("zIndex")) {
                f._zIndex = c.css("zIndex")
            }
            c.css("zIndex", f.zIndex)
        },
        stop: function(c, d) {
            var e = a(this).data("draggable").options;
            if (e._zIndex) {
                a(d.helper).css("zIndex", e._zIndex)
            }
        }
    })
})(jQuery);
(function(a, b) {
    a.widget("ui.droppable", {
        version: "1.9.2",
        widgetEventPrefix: "drop",
        options: {
            accept: "*",
            activeClass: false,
            addClasses: true,
            greedy: false,
            hoverClass: false,
            scope: "default",
            tolerance: "intersect"
        },
        _create: function() {
            var d = this.options,
                c = d.accept;
            this.isover = 0;
            this.isout = 1;
            this.accept = a.isFunction(c) ? c : function(e) {
                return e.is(c)
            };
            this.proportions = {
                width: this.element[0].offsetWidth,
                height: this.element[0].offsetHeight
            };
            a.ui.ddmanager.droppables[d.scope] = a.ui.ddmanager.droppables[d.scope] || [];
            a.ui.ddmanager.droppables[d.scope].push(this);
            (d.addClasses && this.element.addClass("ui-droppable"))
        },
        _destroy: function() {
            var c = a.ui.ddmanager.droppables[this.options.scope];
            for (var d = 0; d < c.length; d++) {
                if (c[d] == this) {
                    c.splice(d, 1)
                }
            }
            this.element.removeClass("ui-droppable ui-droppable-disabled")
        },
        _setOption: function(c, d) {
            if (c == "accept") {
                this.accept = a.isFunction(d) ? d : function(e) {
                    return e.is(d)
                }
            }
            a.Widget.prototype._setOption.apply(this, arguments)
        },
        _activate: function(d) {
            var c = a.ui.ddmanager.current;
            if (this.options.activeClass) {
                this.element.addClass(this.options.activeClass)
            }(c && this._trigger("activate", d, this.ui(c)))
        },
        _deactivate: function(d) {
            var c = a.ui.ddmanager.current;
            if (this.options.activeClass) {
                this.element.removeClass(this.options.activeClass)
            }(c && this._trigger("deactivate", d, this.ui(c)))
        },
        _over: function(d) {
            var c = a.ui.ddmanager.current;
            if (!c || (c.currentItem || c.element)[0] == this.element[0]) {
                return
            }
            if (this.accept.call(this.element[0], (c.currentItem || c.element))) {
                if (this.options.hoverClass) {
                    this.element.addClass(this.options.hoverClass)
                }
                this._trigger("over", d, this.ui(c))
            }
        },
        _out: function(d) {
            var c = a.ui.ddmanager.current;
            if (!c || (c.currentItem || c.element)[0] == this.element[0]) {
                return
            }
            if (this.accept.call(this.element[0], (c.currentItem || c.element))) {
                if (this.options.hoverClass) {
                    this.element.removeClass(this.options.hoverClass)
                }
                this._trigger("out", d, this.ui(c))
            }
        },
        _drop: function(d, e) {
            var c = e || a.ui.ddmanager.current;
            if (!c || (c.currentItem || c.element)[0] == this.element[0]) {
                return false
            }
            var f = false;
            this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function() {
                var g = a.data(this, "droppable");
                if (g.options.greedy && !g.options.disabled && g.options.scope == c.options.scope && g.accept.call(g.element[0], (c.currentItem || c.element)) && a.ui.intersect(c, a.extend(g, {
                        offset: g.element.offset()
                    }), g.options.tolerance)) {
                    f = true;
                    return false
                }
            });
            if (f) {
                return false
            }
            if (this.accept.call(this.element[0], (c.currentItem || c.element))) {
                if (this.options.activeClass) {
                    this.element.removeClass(this.options.activeClass)
                }
                if (this.options.hoverClass) {
                    this.element.removeClass(this.options.hoverClass)
                }
                this._trigger("drop", d, this.ui(c));
                return this.element
            }
            return false
        },
        ui: function(d) {
            return {
                draggable: (d.currentItem || d.element),
                helper: d.helper,
                position: d.position,
                offset: d.positionAbs
            }
        }
    });
    a.ui.intersect = function(s, k, p) {
        if (!k.offset) {
            return false
        }
        var e = (s.positionAbs || s.position.absolute).left,
            d = e + s.helperProportions.width,
            o = (s.positionAbs || s.position.absolute).top,
            n = o + s.helperProportions.height;
        var g = k.offset.left,
            c = g + k.proportions.width,
            q = k.offset.top,
            m = q + k.proportions.height;
        switch (p) {
            case "fit":
                return (g <= e && d <= c && q <= o && n <= m);
                break;
            case "intersect":
                return (g < e + (s.helperProportions.width / 2) && d - (s.helperProportions.width / 2) < c && q < o + (s.helperProportions.height / 2) && n - (s.helperProportions.height / 2) < m);
                break;
            case "pointer":
                var h = ((s.positionAbs || s.position.absolute).left + (s.clickOffset || s.offset.click).left),
                    j = ((s.positionAbs || s.position.absolute).top + (s.clickOffset || s.offset.click).top),
                    f = a.ui.isOver(j, h, q, g, k.proportions.height, k.proportions.width);
                return f;
                break;
            case "touch":
                return ((o >= q && o <= m) || (n >= q && n <= m) || (o < q && n > m)) && ((e >= g && e <= c) || (d >= g && d <= c) || (e < g && d > c));
                break;
            default:
                return false;
                break
        }
    };
    a.ui.ddmanager = {
        current: null,
        droppables: {
            "default": []
        },
        prepareOffsets: function(f, h) {
            var c = a.ui.ddmanager.droppables[f.options.scope] || [];
            var g = h ? h.type : null;
            var k = (f.currentItem || f.element).find(":data(droppable)").andSelf();
            droppablesLoop: for (var e = 0; e < c.length; e++) {
                if (c[e].options.disabled || (f && !c[e].accept.call(c[e].element[0], (f.currentItem || f.element)))) {
                    continue
                }
                for (var d = 0; d < k.length; d++) {
                    if (k[d] == c[e].element[0]) {
                        c[e].proportions.height = 0;
                        continue droppablesLoop
                    }
                }
                c[e].visible = c[e].element.css("display") != "none";
                if (!c[e].visible) {
                    continue
                }
                if (g == "mousedown") {
                    c[e]._activate.call(c[e], h)
                }
                c[e].offset = c[e].element.offset();
                c[e].proportions = {
                    width: c[e].element[0].offsetWidth,
                    height: c[e].element[0].offsetHeight
                }
            }
        },
        drop: function(c, d) {
            var e = false;
            a.each(a.ui.ddmanager.droppables[c.options.scope] || [], function() {
                if (!this.options) {
                    return
                }
                if (!this.options.disabled && this.visible && a.ui.intersect(c, this, this.options.tolerance)) {
                    e = this._drop.call(this, d) || e
                }
                if (!this.options.disabled && this.visible && this.accept.call(this.element[0], (c.currentItem || c.element))) {
                    this.isout = 1;
                    this.isover = 0;
                    this._deactivate.call(this, d)
                }
            });
            return e
        },
        dragStart: function(c, d) {
            c.element.parentsUntil("body").bind("scroll.droppable", function() {
                if (!c.options.refreshPositions) {
                    a.ui.ddmanager.prepareOffsets(c, d)
                }
            })
        },
        drag: function(c, d) {
            if (c.options.refreshPositions) {
                a.ui.ddmanager.prepareOffsets(c, d)
            }
            a.each(a.ui.ddmanager.droppables[c.options.scope] || [], function() {
                if (this.options.disabled || this.greedyChild || !this.visible) {
                    return
                }
                var g = a.ui.intersect(c, this, this.options.tolerance);
                var j = !g && this.isover == 1 ? "isout" : (g && this.isover == 0 ? "isover" : null);
                if (!j) {
                    return
                }
                var h;
                if (this.options.greedy) {
                    var f = this.options.scope;
                    var e = this.element.parents(":data(droppable)").filter(function() {
                        return a.data(this, "droppable").options.scope === f
                    });
                    if (e.length) {
                        h = a.data(e[0], "droppable");
                        h.greedyChild = (j == "isover" ? 1 : 0)
                    }
                }
                if (h && j == "isover") {
                    h.isover = 0;
                    h.isout = 1;
                    h._out.call(h, d)
                }
                this[j] = 1;
                this[j == "isout" ? "isover" : "isout"] = 0;
                this[j == "isover" ? "_over" : "_out"].call(this, d);
                if (h && j == "isout") {
                    h.isout = 0;
                    h.isover = 1;
                    h._over.call(h, d)
                }
            })
        },
        dragStop: function(c, d) {
            c.element.parentsUntil("body").unbind("scroll.droppable");
            if (!c.options.refreshPositions) {
                a.ui.ddmanager.prepareOffsets(c, d)
            }
        }
    }
})(jQuery);
(jQuery.effects || (function(b, d) {
    var a = b.uiBackCompat !== false,
        c = "ui-effects-";
    b.effects = {
        effect: {}
    };
    /*!
     * jQuery Color Animations v2.0.0
     * http://jquery.com/
     *
     * Copyright 2012 jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     *
     * Date: Mon Aug 13 13:41:02 2012 -0500
     */
    (function(t, h) {
        var p = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor".split(" "),
            m = /^([\-+])=\s*(\d+\.?\d*)/,
            l = [{
                re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
                parse: function(u) {
                    return [u[1], u[2], u[3], u[4]]
                }
            }, {
                re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
                parse: function(u) {
                    return [u[1] * 2.55, u[2] * 2.55, u[3] * 2.55, u[4]]
                }
            }, {
                re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
                parse: function(u) {
                    return [parseInt(u[1], 16), parseInt(u[2], 16), parseInt(u[3], 16)]
                }
            }, {
                re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
                parse: function(u) {
                    return [parseInt(u[1] + u[1], 16), parseInt(u[2] + u[2], 16), parseInt(u[3] + u[3], 16)]
                }
            }, {
                re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
                space: "hsla",
                parse: function(u) {
                    return [u[1], u[2] / 100, u[3] / 100, u[4]]
                }
            }],
            j = t.Color = function(v, w, u, x) {
                return new t.Color.fn.parse(v, w, u, x)
            },
            o = {
                rgba: {
                    props: {
                        red: {
                            idx: 0,
                            type: "byte"
                        },
                        green: {
                            idx: 1,
                            type: "byte"
                        },
                        blue: {
                            idx: 2,
                            type: "byte"
                        }
                    }
                },
                hsla: {
                    props: {
                        hue: {
                            idx: 0,
                            type: "degrees"
                        },
                        saturation: {
                            idx: 1,
                            type: "percent"
                        },
                        lightness: {
                            idx: 2,
                            type: "percent"
                        }
                    }
                }
            },
            s = {
                "byte": {
                    floor: true,
                    max: 255
                },
                percent: {
                    max: 1
                },
                degrees: {
                    mod: 360,
                    floor: true
                }
            },
            r = j.support = {},
            f = t("<p>")[0],
            e, q = t.each;
        f.style.cssText = "background-color:rgba(1,1,1,.5)";
        r.rgba = f.style.backgroundColor.indexOf("rgba") > -1;
        q(o, function(u, v) {
            v.cache = "_" + u;
            v.props.alpha = {
                idx: 3,
                type: "percent",
                def: 1
            }
        });

        function n(v, x, w) {
            var u = s[x.type] || {};
            if (v == null) {
                return (w || !x.def) ? null : x.def
            }
            v = u.floor ? ~~v : parseFloat(v);
            if (isNaN(v)) {
                return x.def
            }
            if (u.mod) {
                return (v + u.mod) % u.mod
            }
            return 0 > v ? 0 : u.max < v ? u.max : v
        }

        function k(u) {
            var w = j(),
                v = w._rgba = [];
            u = u.toLowerCase();
            q(l, function(B, C) {
                var z, A = C.re.exec(u),
                    y = A && C.parse(A),
                    x = C.space || "rgba";
                if (y) {
                    z = w[x](y);
                    w[o[x].cache] = z[o[x].cache];
                    v = w._rgba = z._rgba;
                    return false
                }
            });
            if (v.length) {
                if (v.join() === "0,0,0,0") {
                    t.extend(v, e.transparent)
                }
                return w
            }
            return e[u]
        }
        j.fn = t.extend(j.prototype, {
            parse: function(A, y, u, z) {
                if (A === h) {
                    this._rgba = [null, null, null, null];
                    return this
                }
                if (A.jquery || A.nodeType) {
                    A = t(A).css(y);
                    y = h
                }
                var x = this,
                    w = t.type(A),
                    v = this._rgba = [];
                if (y !== h) {
                    A = [A, y, u, z];
                    w = "array"
                }
                if (w === "string") {
                    return this.parse(k(A) || e._default)
                }
                if (w === "array") {
                    q(o.rgba.props, function(B, C) {
                        v[C.idx] = n(A[C.idx], C)
                    });
                    return this
                }
                if (w === "object") {
                    if (A instanceof j) {
                        q(o, function(B, C) {
                            if (A[C.cache]) {
                                x[C.cache] = A[C.cache].slice()
                            }
                        })
                    } else {
                        q(o, function(C, D) {
                            var B = D.cache;
                            q(D.props, function(E, F) {
                                if (!x[B] && D.to) {
                                    if (E === "alpha" || A[E] == null) {
                                        return
                                    }
                                    x[B] = D.to(x._rgba)
                                }
                                x[B][F.idx] = n(A[E], F, true)
                            });
                            if (x[B] && b.inArray(null, x[B].slice(0, 3)) < 0) {
                                x[B][3] = 1;
                                if (D.from) {
                                    x._rgba = D.from(x[B])
                                }
                            }
                        })
                    }
                    return this
                }
            },
            is: function(w) {
                var u = j(w),
                    x = true,
                    v = this;
                q(o, function(y, A) {
                    var B, z = u[A.cache];
                    if (z) {
                        B = v[A.cache] || A.to && A.to(v._rgba) || [];
                        q(A.props, function(C, D) {
                            if (z[D.idx] != null) {
                                x = (z[D.idx] === B[D.idx]);
                                return x
                            }
                        })
                    }
                    return x
                });
                return x
            },
            _space: function() {
                var u = [],
                    v = this;
                q(o, function(w, x) {
                    if (v[x.cache]) {
                        u.push(w)
                    }
                });
                return u.pop()
            },
            transition: function(v, B) {
                var w = j(v),
                    x = w._space(),
                    y = o[x],
                    z = this.alpha() === 0 ? j("transparent") : this,
                    A = z[y.cache] || y.to(z._rgba),
                    u = A.slice();
                w = w[y.cache];
                q(y.props, function(F, H) {
                    var E = H.idx,
                        D = A[E],
                        C = w[E],
                        G = s[H.type] || {};
                    if (C === null) {
                        return
                    }
                    if (D === null) {
                        u[E] = C
                    } else {
                        if (G.mod) {
                            if (C - D > G.mod / 2) {
                                D += G.mod
                            } else {
                                if (D - C > G.mod / 2) {
                                    D -= G.mod
                                }
                            }
                        }
                        u[E] = n((C - D) * B + D, H)
                    }
                });
                return this[x](u)
            },
            blend: function(x) {
                if (this._rgba[3] === 1) {
                    return this
                }
                var w = this._rgba.slice(),
                    v = w.pop(),
                    u = j(x)._rgba;
                return j(t.map(w, function(y, z) {
                    return (1 - v) * u[z] + v * y
                }))
            },
            toRgbaString: function() {
                var v = "rgba(",
                    u = t.map(this._rgba, function(w, x) {
                        return w == null ? (x > 2 ? 1 : 0) : w
                    });
                if (u[3] === 1) {
                    u.pop();
                    v = "rgb("
                }
                return v + u.join() + ")"
            },
            toHslaString: function() {
                var v = "hsla(",
                    u = t.map(this.hsla(), function(w, x) {
                        if (w == null) {
                            w = x > 2 ? 1 : 0
                        }
                        if (x && x < 3) {
                            w = Math.round(w * 100) + "%"
                        }
                        return w
                    });
                if (u[3] === 1) {
                    u.pop();
                    v = "hsl("
                }
                return v + u.join() + ")"
            },
            toHexString: function(u) {
                var v = this._rgba.slice(),
                    w = v.pop();
                if (u) {
                    v.push(~~(w * 255))
                }
                return "#" + t.map(v, function(x) {
                    x = (x || 0).toString(16);
                    return x.length === 1 ? "0" + x : x
                }).join("")
            },
            toString: function() {
                return this._rgba[3] === 0 ? "transparent" : this.toRgbaString()
            }
        });
        j.fn.parse.prototype = j.fn;

        function g(w, v, u) {
            u = (u + 1) % 1;
            if (u * 6 < 1) {
                return w + (v - w) * u * 6
            }
            if (u * 2 < 1) {
                return v
            }
            if (u * 3 < 2) {
                return w + (v - w) * ((2 / 3) - u) * 6
            }
            return w
        }
        o.hsla.to = function(w) {
            if (w[0] == null || w[1] == null || w[2] == null) {
                return [null, null, null, w[3]]
            }
            var u = w[0] / 255,
                z = w[1] / 255,
                A = w[2] / 255,
                C = w[3],
                B = Math.max(u, z, A),
                x = Math.min(u, z, A),
                D = B - x,
                E = B + x,
                v = E * 0.5,
                y, F;
            if (x === B) {
                y = 0
            } else {
                if (u === B) {
                    y = (60 * (z - A) / D) + 360
                } else {
                    if (z === B) {
                        y = (60 * (A - u) / D) + 120
                    } else {
                        y = (60 * (u - z) / D) + 240
                    }
                }
            }
            if (v === 0 || v === 1) {
                F = v
            } else {
                if (v <= 0.5) {
                    F = D / E
                } else {
                    F = D / (2 - E)
                }
            }
            return [Math.round(y) % 360, F, v, C == null ? 1 : C]
        };
        o.hsla.from = function(y) {
            if (y[0] == null || y[1] == null || y[2] == null) {
                return [null, null, null, y[3]]
            }
            var x = y[0] / 360,
                w = y[1],
                v = y[2],
                u = y[3],
                z = v <= 0.5 ? v * (1 + w) : v + w - v * w,
                A = 2 * v - z;
            return [Math.round(g(A, z, x + (1 / 3)) * 255), Math.round(g(A, z, x) * 255), Math.round(g(A, z, x - (1 / 3)) * 255), u]
        };
        q(o, function(v, x) {
            var w = x.props,
                u = x.cache,
                z = x.to,
                y = x.from;
            j.fn[v] = function(E) {
                if (z && !this[u]) {
                    this[u] = z(this._rgba)
                }
                if (E === h) {
                    return this[u].slice()
                }
                var B, D = t.type(E),
                    A = (D === "array" || D === "object") ? E : arguments,
                    C = this[u].slice();
                q(w, function(F, H) {
                    var G = A[D === "object" ? F : H.idx];
                    if (G == null) {
                        G = C[H.idx]
                    }
                    C[H.idx] = n(G, H)
                });
                if (y) {
                    B = j(y(C));
                    B[u] = C;
                    return B
                } else {
                    return j(C)
                }
            };
            q(w, function(A, B) {
                if (j.fn[A]) {
                    return
                }
                j.fn[A] = function(F) {
                    var H = t.type(F),
                        E = (A === "alpha" ? (this._hsla ? "hsla" : "rgba") : v),
                        D = this[E](),
                        G = D[B.idx],
                        C;
                    if (H === "undefined") {
                        return G
                    }
                    if (H === "function") {
                        F = F.call(this, G);
                        H = t.type(F)
                    }
                    if (F == null && B.empty) {
                        return this
                    }
                    if (H === "string") {
                        C = m.exec(F);
                        if (C) {
                            F = G + parseFloat(C[2]) * (C[1] === "+" ? 1 : -1)
                        }
                    }
                    D[B.idx] = F;
                    return this[E](D)
                }
            })
        });
        q(p, function(u, v) {
            t.cssHooks[v] = {
                set: function(A, B) {
                    var x, z, w = "";
                    if (t.type(B) !== "string" || (x = k(B))) {
                        B = j(x || B);
                        if (!r.rgba && B._rgba[3] !== 1) {
                            z = v === "backgroundColor" ? A.parentNode : A;
                            while ((w === "" || w === "transparent") && z && z.style) {
                                try {
                                    w = t.css(z, "backgroundColor");
                                    z = z.parentNode
                                } catch (C) {}
                            }
                            B = B.blend(w && w !== "transparent" ? w : "_default")
                        }
                        B = B.toRgbaString()
                    }
                    try {
                        A.style[v] = B
                    } catch (y) {}
                }
            };
            t.fx.step[v] = function(w) {
                if (!w.colorInit) {
                    w.start = j(w.elem, v);
                    w.end = j(w.end);
                    w.colorInit = true
                }
                t.cssHooks[v].set(w.elem, w.start.transition(w.end, w.pos))
            }
        });
        t.cssHooks.borderColor = {
            expand: function(v) {
                var u = {};
                q(["Top", "Right", "Bottom", "Left"], function(x, w) {
                    u["border" + w + "Color"] = v
                });
                return u
            }
        };
        e = t.Color.names = {
            aqua: "#00ffff",
            black: "#000000",
            blue: "#0000ff",
            fuchsia: "#ff00ff",
            gray: "#808080",
            green: "#008000",
            lime: "#00ff00",
            maroon: "#800000",
            navy: "#000080",
            olive: "#808000",
            purple: "#800080",
            red: "#ff0000",
            silver: "#c0c0c0",
            teal: "#008080",
            white: "#ffffff",
            yellow: "#ffff00",
            transparent: [null, null, null, 0],
            _default: "#ffffff"
        }
    })(jQuery);
    (function() {
        var f = ["add", "remove", "toggle"],
            g = {
                border: 1,
                borderBottom: 1,
                borderColor: 1,
                borderLeft: 1,
                borderRight: 1,
                borderTop: 1,
                borderWidth: 1,
                margin: 1,
                padding: 1
            };
        b.each(["borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle"], function(j, k) {
            b.fx.step[k] = function(l) {
                if (l.end !== "none" && !l.setAttr || l.pos === 1 && !l.setAttr) {
                    jQuery.style(l.elem, k, l.end);
                    l.setAttr = true
                }
            }
        });

        function h() {
            var l = this.ownerDocument.defaultView ? this.ownerDocument.defaultView.getComputedStyle(this, null) : this.currentStyle,
                m = {},
                k, j;
            if (l && l.length && l[0] && l[l[0]]) {
                j = l.length;
                while (j--) {
                    k = l[j];
                    if (typeof l[k] === "string") {
                        m[b.camelCase(k)] = l[k]
                    }
                }
            } else {
                for (k in l) {
                    if (typeof l[k] === "string") {
                        m[k] = l[k]
                    }
                }
            }
            return m
        }

        function e(j, l) {
            var n = {},
                k, m;
            for (k in l) {
                m = l[k];
                if (j[k] !== m) {
                    if (!g[k]) {
                        if (b.fx.step[k] || !isNaN(parseFloat(m))) {
                            n[k] = m
                        }
                    }
                }
            }
            return n
        }
        b.effects.animateClass = function(j, k, n, m) {
            var l = b.speed(k, n, m);
            return this.queue(function() {
                var q = b(this),
                    o = q.attr("class") || "",
                    p, r = l.children ? q.find("*").andSelf() : q;
                r = r.map(function() {
                    var s = b(this);
                    return {
                        el: s,
                        start: h.call(this)
                    }
                });
                p = function() {
                    b.each(f, function(s, t) {
                        if (j[t]) {
                            q[t + "Class"](j[t])
                        }
                    })
                };
                p();
                r = r.map(function() {
                    this.end = h.call(this.el[0]);
                    this.diff = e(this.start, this.end);
                    return this
                });
                q.attr("class", o);
                r = r.map(function() {
                    var u = this,
                        s = b.Deferred(),
                        t = jQuery.extend({}, l, {
                            queue: false,
                            complete: function() {
                                s.resolve(u)
                            }
                        });
                    this.el.animate(this.diff, t);
                    return s.promise()
                });
                b.when.apply(b, r.get()).done(function() {
                    p();
                    b.each(arguments, function() {
                        var s = this.el;
                        b.each(this.diff, function(t) {
                            s.css(t, "")
                        })
                    });
                    l.complete.call(q[0])
                })
            })
        };
        b.fn.extend({
            _addClass: b.fn.addClass,
            addClass: function(k, j, m, l) {
                return j ? b.effects.animateClass.call(this, {
                    add: k
                }, j, m, l) : this._addClass(k)
            },
            _removeClass: b.fn.removeClass,
            removeClass: function(k, j, m, l) {
                return j ? b.effects.animateClass.call(this, {
                    remove: k
                }, j, m, l) : this._removeClass(k)
            },
            _toggleClass: b.fn.toggleClass,
            toggleClass: function(l, k, j, n, m) {
                if (typeof k === "boolean" || k === d) {
                    if (!j) {
                        return this._toggleClass(l, k)
                    } else {
                        return b.effects.animateClass.call(this, (k ? {
                            add: l
                        } : {
                            remove: l
                        }), j, n, m)
                    }
                } else {
                    return b.effects.animateClass.call(this, {
                        toggle: l
                    }, k, j, n)
                }
            },
            switchClass: function(j, l, k, n, m) {
                return b.effects.animateClass.call(this, {
                    add: l,
                    remove: j
                }, k, n, m)
            }
        })
    })();
    (function() {
        b.extend(b.effects, {
            version: "1.9.2",
            save: function(h, j) {
                for (var g = 0; g < j.length; g++) {
                    if (j[g] !== null) {
                        h.data(c + j[g], h[0].style[j[g]])
                    }
                }
            },
            restore: function(h, k) {
                var j, g;
                for (g = 0; g < k.length; g++) {
                    if (k[g] !== null) {
                        j = h.data(c + k[g]);
                        if (j === d) {
                            j = ""
                        }
                        h.css(k[g], j)
                    }
                }
            },
            setMode: function(g, h) {
                if (h === "toggle") {
                    h = g.is(":hidden") ? "show" : "hide"
                }
                return h
            },
            getBaseline: function(h, j) {
                var k, g;
                switch (h[0]) {
                    case "top":
                        k = 0;
                        break;
                    case "middle":
                        k = 0.5;
                        break;
                    case "bottom":
                        k = 1;
                        break;
                    default:
                        k = h[0] / j.height
                }
                switch (h[1]) {
                    case "left":
                        g = 0;
                        break;
                    case "center":
                        g = 0.5;
                        break;
                    case "right":
                        g = 1;
                        break;
                    default:
                        g = h[1] / j.width
                }
                return {
                    x: g,
                    y: k
                }
            },
            createWrapper: function(h) {
                if (h.parent().is(".ui-effects-wrapper")) {
                    return h.parent()
                }
                var j = {
                        width: h.outerWidth(true),
                        height: h.outerHeight(true),
                        "float": h.css("float")
                    },
                    m = b("<div></div>").addClass("ui-effects-wrapper").css({
                        fontSize: "100%",
                        background: "transparent",
                        border: "none",
                        margin: 0,
                        padding: 0
                    }),
                    g = {
                        width: h.width(),
                        height: h.height()
                    },
                    l = document.activeElement;
                try {
                    l.id
                } catch (k) {
                    l = document.body
                }
                h.wrap(m);
                if (h[0] === l || b.contains(h[0], l)) {
                    b(l).focus()
                }
                m = h.parent();
                if (h.css("position") === "static") {
                    m.css({
                        position: "relative"
                    });
                    h.css({
                        position: "relative"
                    })
                } else {
                    b.extend(j, {
                        position: h.css("position"),
                        zIndex: h.css("z-index")
                    });
                    b.each(["top", "left", "bottom", "right"], function(n, o) {
                        j[o] = h.css(o);
                        if (isNaN(parseInt(j[o], 10))) {
                            j[o] = "auto"
                        }
                    });
                    h.css({
                        position: "relative",
                        top: 0,
                        left: 0,
                        right: "auto",
                        bottom: "auto"
                    })
                }
                h.css(g);
                return m.css(j).show()
            },
            removeWrapper: function(g) {
                var h = document.activeElement;
                if (g.parent().is(".ui-effects-wrapper")) {
                    g.parent().replaceWith(g);
                    if (g[0] === h || b.contains(g[0], h)) {
                        b(h).focus()
                    }
                }
                return g
            },
            setTransition: function(h, k, g, j) {
                j = j || {};
                b.each(k, function(m, l) {
                    var n = h.cssUnit(l);
                    if (n[0] > 0) {
                        j[l] = n[0] * g + n[1]
                    }
                });
                return j
            }
        });

        function e(h, g, j, k) {
            if (b.isPlainObject(h)) {
                g = h;
                h = h.effect
            }
            h = {
                effect: h
            };
            if (g == null) {
                g = {}
            }
            if (b.isFunction(g)) {
                k = g;
                j = null;
                g = {}
            }
            if (typeof g === "number" || b.fx.speeds[g]) {
                k = j;
                j = g;
                g = {}
            }
            if (b.isFunction(j)) {
                k = j;
                j = null
            }
            if (g) {
                b.extend(h, g)
            }
            j = j || g.duration;
            h.duration = b.fx.off ? 0 : typeof j === "number" ? j : j in b.fx.speeds ? b.fx.speeds[j] : b.fx.speeds._default;
            h.complete = k || g.complete;
            return h
        }

        function f(g) {
            if (!g || typeof g === "number" || b.fx.speeds[g]) {
                return true
            }
            if (typeof g === "string" && !b.effects.effect[g]) {
                if (a && b.effects[g]) {
                    return false
                }
                return true
            }
            return false
        }
        b.fn.extend({
            effect: function() {
                var j = e.apply(this, arguments),
                    m = j.mode,
                    g = j.queue,
                    h = b.effects.effect[j.effect],
                    k = !h && a && b.effects[j.effect];
                if (b.fx.off || !(h || k)) {
                    if (m) {
                        return this[m](j.duration, j.complete)
                    } else {
                        return this.each(function() {
                            if (j.complete) {
                                j.complete.call(this)
                            }
                        })
                    }
                }

                function l(p) {
                    var q = b(this),
                        o = j.complete,
                        r = j.mode;

                    function n() {
                        if (b.isFunction(o)) {
                            o.call(q[0])
                        }
                        if (b.isFunction(p)) {
                            p()
                        }
                    }
                    if (q.is(":hidden") ? r === "hide" : r === "show") {
                        n()
                    } else {
                        h.call(q[0], j, n)
                    }
                }
                if (h) {
                    return g === false ? this.each(l) : this.queue(g || "fx", l)
                } else {
                    return k.call(this, {
                        options: j,
                        duration: j.duration,
                        callback: j.complete,
                        mode: j.mode
                    })
                }
            },
            _show: b.fn.show,
            show: function(h) {
                if (f(h)) {
                    return this._show.apply(this, arguments)
                } else {
                    var g = e.apply(this, arguments);
                    g.mode = "show";
                    return this.effect.call(this, g)
                }
            },
            _hide: b.fn.hide,
            hide: function(h) {
                if (f(h)) {
                    return this._hide.apply(this, arguments)
                } else {
                    var g = e.apply(this, arguments);
                    g.mode = "hide";
                    return this.effect.call(this, g)
                }
            },
            __toggle: b.fn.toggle,
            toggle: function(h) {
                if (f(h) || typeof h === "boolean" || b.isFunction(h)) {
                    return this.__toggle.apply(this, arguments)
                } else {
                    var g = e.apply(this, arguments);
                    g.mode = "toggle";
                    return this.effect.call(this, g)
                }
            },
            cssUnit: function(g) {
                var h = this.css(g),
                    j = [];
                b.each(["em", "px", "%", "pt"], function(k, l) {
                    if (h.indexOf(l) > 0) {
                        j = [parseFloat(h), l]
                    }
                });
                return j
            }
        })
    })();
    (function() {
        var e = {};
        b.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function(g, f) {
            e[f] = function(h) {
                return Math.pow(h, g + 2)
            }
        });
        b.extend(e, {
            Sine: function(f) {
                return 1 - Math.cos(f * Math.PI / 2)
            },
            Circ: function(f) {
                return 1 - Math.sqrt(1 - f * f)
            },
            Elastic: function(f) {
                return f === 0 || f === 1 ? f : -Math.pow(2, 8 * (f - 1)) * Math.sin(((f - 1) * 80 - 7.5) * Math.PI / 15)
            },
            Back: function(f) {
                return f * f * (3 * f - 2)
            },
            Bounce: function(h) {
                var f, g = 4;
                while (h < ((f = Math.pow(2, --g)) - 1) / 11) {}
                return 1 / Math.pow(4, 3 - g) - 7.5625 * Math.pow((f * 3 - 2) / 22 - h, 2)
            }
        });
        b.each(e, function(g, f) {
            b.easing["easeIn" + g] = f;
            b.easing["easeOut" + g] = function(h) {
                return 1 - f(1 - h)
            };
            b.easing["easeInOut" + g] = function(h) {
                return h < 0.5 ? f(h * 2) / 2 : 1 - f(h * -2 + 2) / 2
            }
        })
    })()
})(jQuery));
(function(b, d) {
    var a = /up|down|vertical/,
        c = /up|left|vertical|horizontal/;
    b.effects.effect.blind = function(g, n) {
        var h = b(this),
            r = ["position", "top", "bottom", "left", "right", "height", "width"],
            p = b.effects.setMode(h, g.mode || "hide"),
            s = g.direction || "up",
            k = a.test(s),
            j = k ? "height" : "width",
            q = k ? "top" : "left",
            u = c.test(s),
            m = {},
            t = p === "show",
            f, e, l;
        if (h.parent().is(".ui-effects-wrapper")) {
            b.effects.save(h.parent(), r)
        } else {
            b.effects.save(h, r)
        }
        h.show();
        f = b.effects.createWrapper(h).css({
            overflow: "hidden"
        });
        e = f[j]();
        l = parseFloat(f.css(q)) || 0;
        m[j] = t ? e : 0;
        if (!u) {
            h.css(k ? "bottom" : "right", 0).css(k ? "top" : "left", "auto").css({
                position: "absolute"
            });
            m[q] = t ? l : e + l
        }
        if (t) {
            f.css(j, 0);
            if (!u) {
                f.css(q, l + e)
            }
        }
        f.animate(m, {
            duration: g.duration,
            easing: g.easing,
            queue: false,
            complete: function() {
                if (p === "hide") {
                    h.hide()
                }
                b.effects.restore(h, r);
                b.effects.removeWrapper(h);
                n()
            }
        })
    }
})(jQuery);
(function(a, b) {
    a.effects.effect.bounce = function(m, l) {
        var c = a(this),
            d = ["position", "top", "bottom", "left", "right", "height", "width"],
            k = a.effects.setMode(c, m.mode || "effect"),
            j = k === "hide",
            v = k === "show",
            w = m.direction || "up",
            e = m.distance,
            h = m.times || 5,
            x = h * 2 + (v || j ? 1 : 0),
            u = m.duration / x,
            p = m.easing,
            f = (w === "up" || w === "down") ? "top" : "left",
            n = (w === "up" || w === "left"),
            t, g, s, q = c.queue(),
            r = q.length;
        if (v || j) {
            d.push("opacity")
        }
        a.effects.save(c, d);
        c.show();
        a.effects.createWrapper(c);
        if (!e) {
            e = c[f === "top" ? "outerHeight" : "outerWidth"]() / 3
        }
        if (v) {
            s = {
                opacity: 1
            };
            s[f] = 0;
            c.css("opacity", 0).css(f, n ? -e * 2 : e * 2).animate(s, u, p)
        }
        if (j) {
            e = e / Math.pow(2, h - 1)
        }
        s = {};
        s[f] = 0;
        for (t = 0; t < h; t++) {
            g = {};
            g[f] = (n ? "-=" : "+=") + e;
            c.animate(g, u, p).animate(s, u, p);
            e = j ? e * 2 : e / 2
        }
        if (j) {
            g = {
                opacity: 0
            };
            g[f] = (n ? "-=" : "+=") + e;
            c.animate(g, u, p)
        }
        c.queue(function() {
            if (j) {
                c.hide()
            }
            a.effects.restore(c, d);
            a.effects.removeWrapper(c);
            l()
        });
        if (r > 1) {
            q.splice.apply(q, [1, 0].concat(q.splice(r, x + 1)))
        }
        c.dequeue()
    }
})(jQuery);
(function(a, b) {
    a.effects.effect.clip = function(f, j) {
        var g = a(this),
            n = ["position", "top", "bottom", "left", "right", "height", "width"],
            m = a.effects.setMode(g, f.mode || "hide"),
            q = m === "show",
            p = f.direction || "vertical",
            l = p === "vertical",
            r = l ? "height" : "width",
            k = l ? "top" : "left",
            h = {},
            d, e, c;
        a.effects.save(g, n);
        g.show();
        d = a.effects.createWrapper(g).css({
            overflow: "hidden"
        });
        e = (g[0].tagName === "IMG") ? d : g;
        c = e[r]();
        if (q) {
            e.css(r, 0);
            e.css(k, c / 2)
        }
        h[r] = q ? c : 0;
        h[k] = q ? 0 : c / 2;
        e.animate(h, {
            queue: false,
            duration: f.duration,
            easing: f.easing,
            complete: function() {
                if (!q) {
                    g.hide()
                }
                a.effects.restore(g, n);
                a.effects.removeWrapper(g);
                j()
            }
        })
    }
})(jQuery);
(function(a, b) {
    a.effects.effect.drop = function(d, h) {
        var e = a(this),
            k = ["position", "top", "bottom", "left", "right", "opacity", "height", "width"],
            j = a.effects.setMode(e, d.mode || "hide"),
            m = j === "show",
            l = d.direction || "left",
            f = (l === "up" || l === "down") ? "top" : "left",
            n = (l === "up" || l === "left") ? "pos" : "neg",
            g = {
                opacity: m ? 1 : 0
            },
            c;
        a.effects.save(e, k);
        e.show();
        a.effects.createWrapper(e);
        c = d.distance || e[f === "top" ? "outerHeight" : "outerWidth"](true) / 2;
        if (m) {
            e.css("opacity", 0).css(f, n === "pos" ? -c : c)
        }
        g[f] = (m ? (n === "pos" ? "+=" : "-=") : (n === "pos" ? "-=" : "+=")) + c;
        e.animate(g, {
            queue: false,
            duration: d.duration,
            easing: d.easing,
            complete: function() {
                if (j === "hide") {
                    e.hide()
                }
                a.effects.restore(e, k);
                a.effects.removeWrapper(e);
                h()
            }
        })
    }
})(jQuery);
(function(a, b) {
    a.effects.effect.explode = function(s, r) {
        var k = s.pieces ? Math.round(Math.sqrt(s.pieces)) : 3,
            d = k,
            c = a(this),
            m = a.effects.setMode(c, s.mode || "hide"),
            w = m === "show",
            g = c.show().css("visibility", "hidden").offset(),
            t = Math.ceil(c.outerWidth() / d),
            q = Math.ceil(c.outerHeight() / k),
            h = [],
            v, u, e, p, n, l;

        function x() {
            h.push(this);
            if (h.length === k * d) {
                f()
            }
        }
        for (v = 0; v < k; v++) {
            p = g.top + v * q;
            l = v - (k - 1) / 2;
            for (u = 0; u < d; u++) {
                e = g.left + u * t;
                n = u - (d - 1) / 2;
                c.clone().appendTo("body").wrap("<div></div>").css({
                    position: "absolute",
                    visibility: "visible",
                    left: -u * t,
                    top: -v * q
                }).parent().addClass("ui-effects-explode").css({
                    position: "absolute",
                    overflow: "hidden",
                    width: t,
                    height: q,
                    left: e + (w ? n * t : 0),
                    top: p + (w ? l * q : 0),
                    opacity: w ? 0 : 1
                }).animate({
                    left: e + (w ? 0 : n * t),
                    top: p + (w ? 0 : l * q),
                    opacity: w ? 1 : 0
                }, s.duration || 500, s.easing, x)
            }
        }

        function f() {
            c.css({
                visibility: "visible"
            });
            a(h).remove();
            if (!w) {
                c.hide()
            }
            r()
        }
    }
})(jQuery);
(function(a, b) {
    a.effects.effect.fade = function(f, c) {
        var d = a(this),
            e = a.effects.setMode(d, f.mode || "toggle");
        d.animate({
            opacity: e
        }, {
            queue: false,
            duration: f.duration,
            easing: f.easing,
            complete: c
        })
    }
})(jQuery);
(function(a, b) {
    a.effects.effect.fold = function(e, j) {
        var f = a(this),
            p = ["position", "top", "bottom", "left", "right", "height", "width"],
            l = a.effects.setMode(f, e.mode || "hide"),
            s = l === "show",
            m = l === "hide",
            u = e.size || 15,
            n = /([0-9]+)%/.exec(u),
            t = !!e.horizFirst,
            k = s !== t,
            g = k ? ["width", "height"] : ["height", "width"],
            h = e.duration / 2,
            d, c, r = {},
            q = {};
        a.effects.save(f, p);
        f.show();
        d = a.effects.createWrapper(f).css({
            overflow: "hidden"
        });
        c = k ? [d.width(), d.height()] : [d.height(), d.width()];
        if (n) {
            u = parseInt(n[1], 10) / 100 * c[m ? 0 : 1]
        }
        if (s) {
            d.css(t ? {
                height: 0,
                width: u
            } : {
                height: u,
                width: 0
            })
        }
        r[g[0]] = s ? c[0] : u;
        q[g[1]] = s ? c[1] : 0;
        d.animate(r, h, e.easing).animate(q, h, e.easing, function() {
            if (m) {
                f.hide()
            }
            a.effects.restore(f, p);
            a.effects.removeWrapper(f);
            j()
        })
    }
})(jQuery);
(function(a, b) {
    a.effects.effect.highlight = function(h, c) {
        var e = a(this),
            d = ["backgroundImage", "backgroundColor", "opacity"],
            g = a.effects.setMode(e, h.mode || "show"),
            f = {
                backgroundColor: e.css("backgroundColor")
            };
        if (g === "hide") {
            f.opacity = 0
        }
        a.effects.save(e, d);
        e.show().css({
            backgroundImage: "none",
            backgroundColor: h.color || "#ffff99"
        }).animate(f, {
            queue: false,
            duration: h.duration,
            easing: h.easing,
            complete: function() {
                if (g === "hide") {
                    e.hide()
                }
                a.effects.restore(e, d);
                c()
            }
        })
    }
})(jQuery);
(function(a, b) {
    a.effects.effect.pulsate = function(c, g) {
        var e = a(this),
            k = a.effects.setMode(e, c.mode || "show"),
            p = k === "show",
            l = k === "hide",
            q = (p || k === "hide"),
            m = ((c.times || 5) * 2) + (q ? 1 : 0),
            f = c.duration / m,
            n = 0,
            j = e.queue(),
            d = j.length,
            h;
        if (p || !e.is(":visible")) {
            e.css("opacity", 0).show();
            n = 1
        }
        for (h = 1; h < m; h++) {
            e.animate({
                opacity: n
            }, f, c.easing);
            n = 1 - n
        }
        e.animate({
            opacity: n
        }, f, c.easing);
        e.queue(function() {
            if (l) {
                e.hide()
            }
            g()
        });
        if (d > 1) {
            j.splice.apply(j, [1, 0].concat(j.splice(d, m + 1)))
        }
        e.dequeue()
    }
})(jQuery);
(function(a, b) {
    a.effects.effect.puff = function(k, c) {
        var h = a(this),
            j = a.effects.setMode(h, k.mode || "hide"),
            f = j === "hide",
            g = parseInt(k.percent, 10) || 150,
            e = g / 100,
            d = {
                height: h.height(),
                width: h.width(),
                outerHeight: h.outerHeight(),
                outerWidth: h.outerWidth()
            };
        a.extend(k, {
            effect: "scale",
            queue: false,
            fade: true,
            mode: j,
            complete: c,
            percent: f ? g : 100,
            from: f ? d : {
                height: d.height * e,
                width: d.width * e,
                outerHeight: d.outerHeight * e,
                outerWidth: d.outerWidth * e
            }
        });
        h.effect(k)
    };
    a.effects.effect.scale = function(c, f) {
        var d = a(this),
            m = a.extend(true, {}, c),
            g = a.effects.setMode(d, c.mode || "effect"),
            h = parseInt(c.percent, 10) || (parseInt(c.percent, 10) === 0 ? 0 : (g === "hide" ? 0 : 100)),
            k = c.direction || "both",
            l = c.origin,
            e = {
                height: d.height(),
                width: d.width(),
                outerHeight: d.outerHeight(),
                outerWidth: d.outerWidth()
            },
            j = {
                y: k !== "horizontal" ? (h / 100) : 1,
                x: k !== "vertical" ? (h / 100) : 1
            };
        m.effect = "size";
        m.queue = false;
        m.complete = f;
        if (g !== "effect") {
            m.origin = l || ["middle", "center"];
            m.restore = true
        }
        m.from = c.from || (g === "show" ? {
            height: 0,
            width: 0,
            outerHeight: 0,
            outerWidth: 0
        } : e);
        m.to = {
            height: e.height * j.y,
            width: e.width * j.x,
            outerHeight: e.outerHeight * j.y,
            outerWidth: e.outerWidth * j.x
        };
        if (m.fade) {
            if (g === "show") {
                m.from.opacity = 0;
                m.to.opacity = 1
            }
            if (g === "hide") {
                m.from.opacity = 1;
                m.to.opacity = 0
            }
        }
        d.effect(m)
    };
    a.effects.effect.size = function(m, l) {
        var r, j, k, c = a(this),
            q = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"],
            p = ["position", "top", "bottom", "left", "right", "overflow", "opacity"],
            n = ["width", "height", "overflow"],
            g = ["fontSize"],
            t = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"],
            d = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"],
            h = a.effects.setMode(c, m.mode || "effect"),
            s = m.restore || h !== "effect",
            w = m.scale || "both",
            u = m.origin || ["middle", "center"],
            v = c.css("position"),
            e = s ? q : p,
            f = {
                height: 0,
                width: 0,
                outerHeight: 0,
                outerWidth: 0
            };
        if (h === "show") {
            c.show()
        }
        r = {
            height: c.height(),
            width: c.width(),
            outerHeight: c.outerHeight(),
            outerWidth: c.outerWidth()
        };
        if (m.mode === "toggle" && h === "show") {
            c.from = m.to || f;
            c.to = m.from || r
        } else {
            c.from = m.from || (h === "show" ? f : r);
            c.to = m.to || (h === "hide" ? f : r)
        }
        k = {
            from: {
                y: c.from.height / r.height,
                x: c.from.width / r.width
            },
            to: {
                y: c.to.height / r.height,
                x: c.to.width / r.width
            }
        };
        if (w === "box" || w === "both") {
            if (k.from.y !== k.to.y) {
                e = e.concat(t);
                c.from = a.effects.setTransition(c, t, k.from.y, c.from);
                c.to = a.effects.setTransition(c, t, k.to.y, c.to)
            }
            if (k.from.x !== k.to.x) {
                e = e.concat(d);
                c.from = a.effects.setTransition(c, d, k.from.x, c.from);
                c.to = a.effects.setTransition(c, d, k.to.x, c.to)
            }
        }
        if (w === "content" || w === "both") {
            if (k.from.y !== k.to.y) {
                e = e.concat(g).concat(n);
                c.from = a.effects.setTransition(c, g, k.from.y, c.from);
                c.to = a.effects.setTransition(c, g, k.to.y, c.to)
            }
        }
        a.effects.save(c, e);
        c.show();
        a.effects.createWrapper(c);
        c.css("overflow", "hidden").css(c.from);
        if (u) {
            j = a.effects.getBaseline(u, r);
            c.from.top = (r.outerHeight - c.outerHeight()) * j.y;
            c.from.left = (r.outerWidth - c.outerWidth()) * j.x;
            c.to.top = (r.outerHeight - c.to.outerHeight) * j.y;
            c.to.left = (r.outerWidth - c.to.outerWidth) * j.x
        }
        c.css(c.from);
        if (w === "content" || w === "both") {
            t = t.concat(["marginTop", "marginBottom"]).concat(g);
            d = d.concat(["marginLeft", "marginRight"]);
            n = q.concat(t).concat(d);
            c.find("*[width]").each(function() {
                var x = a(this),
                    o = {
                        height: x.height(),
                        width: x.width(),
                        outerHeight: x.outerHeight(),
                        outerWidth: x.outerWidth()
                    };
                if (s) {
                    a.effects.save(x, n)
                }
                x.from = {
                    height: o.height * k.from.y,
                    width: o.width * k.from.x,
                    outerHeight: o.outerHeight * k.from.y,
                    outerWidth: o.outerWidth * k.from.x
                };
                x.to = {
                    height: o.height * k.to.y,
                    width: o.width * k.to.x,
                    outerHeight: o.height * k.to.y,
                    outerWidth: o.width * k.to.x
                };
                if (k.from.y !== k.to.y) {
                    x.from = a.effects.setTransition(x, t, k.from.y, x.from);
                    x.to = a.effects.setTransition(x, t, k.to.y, x.to)
                }
                if (k.from.x !== k.to.x) {
                    x.from = a.effects.setTransition(x, d, k.from.x, x.from);
                    x.to = a.effects.setTransition(x, d, k.to.x, x.to)
                }
                x.css(x.from);
                x.animate(x.to, m.duration, m.easing, function() {
                    if (s) {
                        a.effects.restore(x, n)
                    }
                })
            })
        }
        c.animate(c.to, {
            queue: false,
            duration: m.duration,
            easing: m.easing,
            complete: function() {
                if (c.to.opacity === 0) {
                    c.css("opacity", c.from.opacity)
                }
                if (h === "hide") {
                    c.hide()
                }
                a.effects.restore(c, e);
                if (!s) {
                    if (v === "static") {
                        c.css({
                            position: "relative",
                            top: c.to.top,
                            left: c.to.left
                        })
                    } else {
                        a.each(["top", "left"], function(o, x) {
                            c.css(x, function(z, B) {
                                var A = parseInt(B, 10),
                                    y = o ? c.to.left : c.to.top;
                                if (B === "auto") {
                                    return y + "px"
                                }
                                return A + y + "px"
                            })
                        })
                    }
                }
                a.effects.removeWrapper(c);
                l()
            }
        })
    }
})(jQuery);
(function(a, b) {
    a.effects.effect.shake = function(l, k) {
        var c = a(this),
            d = ["position", "top", "bottom", "left", "right", "height", "width"],
            j = a.effects.setMode(c, l.mode || "effect"),
            u = l.direction || "left",
            e = l.distance || 20,
            h = l.times || 3,
            v = h * 2 + 1,
            q = Math.round(l.duration / v),
            g = (u === "up" || u === "down") ? "top" : "left",
            f = (u === "up" || u === "left"),
            t = {},
            s = {},
            r = {},
            p, m = c.queue(),
            n = m.length;
        a.effects.save(c, d);
        c.show();
        a.effects.createWrapper(c);
        t[g] = (f ? "-=" : "+=") + e;
        s[g] = (f ? "+=" : "-=") + e * 2;
        r[g] = (f ? "-=" : "+=") + e * 2;
        c.animate(t, q, l.easing);
        for (p = 1; p < h; p++) {
            c.animate(s, q, l.easing).animate(r, q, l.easing)
        }
        c.animate(s, q, l.easing).animate(t, q / 2, l.easing).queue(function() {
            if (j === "hide") {
                c.hide()
            }
            a.effects.restore(c, d);
            a.effects.removeWrapper(c);
            k()
        });
        if (n > 1) {
            m.splice.apply(m, [1, 0].concat(m.splice(n, v + 1)))
        }
        c.dequeue()
    }
})(jQuery);
(function(a, b) {
    a.effects.effect.slide = function(e, j) {
        var f = a(this),
            l = ["position", "top", "bottom", "left", "right", "width", "height"],
            k = a.effects.setMode(f, e.mode || "show"),
            n = k === "show",
            m = e.direction || "left",
            g = (m === "up" || m === "down") ? "top" : "left",
            d = (m === "up" || m === "left"),
            c, h = {};
        a.effects.save(f, l);
        f.show();
        c = e.distance || f[g === "top" ? "outerHeight" : "outerWidth"](true);
        a.effects.createWrapper(f).css({
            overflow: "hidden"
        });
        if (n) {
            f.css(g, d ? (isNaN(c) ? "-" + c : -c) : c)
        }
        h[g] = (n ? (d ? "+=" : "-=") : (d ? "-=" : "+=")) + c;
        f.animate(h, {
            queue: false,
            duration: e.duration,
            easing: e.easing,
            complete: function() {
                if (k === "hide") {
                    f.hide()
                }
                a.effects.restore(f, l);
                a.effects.removeWrapper(f);
                j()
            }
        })
    }
})(jQuery);
(function(a, b) {
    a.effects.effect.transfer = function(d, h) {
        var f = a(this),
            l = a(d.to),
            p = l.css("position") === "fixed",
            k = a("body"),
            m = p ? k.scrollTop() : 0,
            n = p ? k.scrollLeft() : 0,
            c = l.offset(),
            g = {
                top: c.top - m,
                left: c.left - n,
                height: l.innerHeight(),
                width: l.innerWidth()
            },
            j = f.offset(),
            e = a('<div class="ui-effects-transfer"></div>').appendTo(document.body).addClass(d.className).css({
                top: j.top - m,
                left: j.left - n,
                height: f.innerHeight(),
                width: f.innerWidth(),
                position: p ? "fixed" : "absolute"
            }).animate(g, d.duration, d.easing, function() {
                e.remove();
                h()
            })
    }
})(jQuery);
(function(b, c) {
    var a = false;
    b.widget("ui.menu", {
        version: "1.9.2",
        defaultElement: "<ul>",
        delay: 300,
        options: {
            icons: {
                submenu: "ui-icon-carat-1-e"
            },
            menus: "ul",
            position: {
                my: "left top",
                at: "right top"
            },
            role: "menu",
            blur: null,
            focus: null,
            select: null
        },
        _create: function() {
            this.activeMenu = this.element;
            this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content ui-corner-all").toggleClass("ui-menu-icons", !!this.element.find(".ui-icon").length).attr({
                role: this.options.role,
                tabIndex: 0
            }).bind("click" + this.eventNamespace, b.proxy(function(d) {
                if (this.options.disabled) {
                    d.preventDefault()
                }
            }, this));
            if (this.options.disabled) {
                this.element.addClass("ui-state-disabled").attr("aria-disabled", "true")
            }
            this._on({
                "mousedown .ui-menu-item > a": function(d) {
                    d.preventDefault()
                },
                "click .ui-state-disabled > a": function(d) {
                    d.preventDefault()
                },
                "click .ui-menu-item:has(a)": function(d) {
                    var e = b(d.target).closest(".ui-menu-item");
                    if (!a && e.not(".ui-state-disabled").length) {
                        a = true;
                        this.select(d);
                        if (e.has(".ui-menu").length) {
                            this.expand(d)
                        } else {
                            if (!this.element.is(":focus")) {
                                this.element.trigger("focus", [true]);
                                if (this.active && this.active.parents(".ui-menu").length === 1) {
                                    clearTimeout(this.timer)
                                }
                            }
                        }
                    }
                },
                "mouseenter .ui-menu-item": function(d) {
                    var e = b(d.currentTarget);
                    e.siblings().children(".ui-state-active").removeClass("ui-state-active");
                    this.focus(d, e)
                },
                mouseleave: "collapseAll",
                "mouseleave .ui-menu": "collapseAll",
                focus: function(f, d) {
                    var e = this.active || this.element.children(".ui-menu-item").eq(0);
                    if (!d) {
                        this.focus(f, e)
                    }
                },
                blur: function(d) {
                    this._delay(function() {
                        if (!b.contains(this.element[0], this.document[0].activeElement)) {
                            this.collapseAll(d)
                        }
                    })
                },
                keydown: "_keydown"
            });
            this.refresh();
            this._on(this.document, {
                click: function(d) {
                    if (!b(d.target).closest(".ui-menu").length) {
                        this.collapseAll(d)
                    }
                    a = false
                }
            })
        },
        _destroy: function() {
            this.element.removeAttr("aria-activedescendant").find(".ui-menu").andSelf().removeClass("ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show();
            this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").children("a").removeUniqueId().removeClass("ui-corner-all ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function() {
                var d = b(this);
                if (d.data("ui-menu-submenu-carat")) {
                    d.remove()
                }
            });
            this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")
        },
        _keydown: function(k) {
            var e, j, l, h, g, d = true;

            function f(m) {
                return m.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
            }
            switch (k.keyCode) {
                case b.ui.keyCode.PAGE_UP:
                    this.previousPage(k);
                    break;
                case b.ui.keyCode.PAGE_DOWN:
                    this.nextPage(k);
                    break;
                case b.ui.keyCode.HOME:
                    this._move("first", "first", k);
                    break;
                case b.ui.keyCode.END:
                    this._move("last", "last", k);
                    break;
                case b.ui.keyCode.UP:
                    this.previous(k);
                    break;
                case b.ui.keyCode.DOWN:
                    this.next(k);
                    break;
                case b.ui.keyCode.LEFT:
                    this.collapse(k);
                    break;
                case b.ui.keyCode.RIGHT:
                    if (this.active && !this.active.is(".ui-state-disabled")) {
                        this.expand(k)
                    }
                    break;
                case b.ui.keyCode.ENTER:
                case b.ui.keyCode.SPACE:
                    this._activate(k);
                    break;
                case b.ui.keyCode.ESCAPE:
                    this.collapse(k);
                    break;
                default:
                    d = false;
                    j = this.previousFilter || "";
                    l = String.fromCharCode(k.keyCode);
                    h = false;
                    clearTimeout(this.filterTimer);
                    if (l === j) {
                        h = true
                    } else {
                        l = j + l
                    }
                    g = new RegExp("^" + f(l), "i");
                    e = this.activeMenu.children(".ui-menu-item").filter(function() {
                        return g.test(b(this).children("a").text())
                    });
                    e = h && e.index(this.active.next()) !== -1 ? this.active.nextAll(".ui-menu-item") : e;
                    if (!e.length) {
                        l = String.fromCharCode(k.keyCode);
                        g = new RegExp("^" + f(l), "i");
                        e = this.activeMenu.children(".ui-menu-item").filter(function() {
                            return g.test(b(this).children("a").text())
                        })
                    }
                    if (e.length) {
                        this.focus(k, e);
                        if (e.length > 1) {
                            this.previousFilter = l;
                            this.filterTimer = this._delay(function() {
                                delete this.previousFilter
                            }, 1000)
                        } else {
                            delete this.previousFilter
                        }
                    } else {
                        delete this.previousFilter
                    }
            }
            if (d) {
                k.preventDefault()
            }
        },
        _activate: function(d) {
            if (!this.active.is(".ui-state-disabled")) {
                if (this.active.children("a[aria-haspopup='true']").length) {
                    this.expand(d)
                } else {
                    this.select(d)
                }
            }
        },
        refresh: function() {
            var f, e = this.options.icons.submenu,
                d = this.element.find(this.options.menus);
            d.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-corner-all").hide().attr({
                role: this.options.role,
                "aria-hidden": "true",
                "aria-expanded": "false"
            }).each(function() {
                var j = b(this),
                    h = j.prev("a"),
                    g = b("<span>").addClass("ui-menu-icon ui-icon " + e).data("ui-menu-submenu-carat", true);
                h.attr("aria-haspopup", "true").prepend(g);
                j.attr("aria-labelledby", h.attr("id"))
            });
            f = d.add(this.element);
            f.children(":not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role", "presentation").children("a").uniqueId().addClass("ui-corner-all").attr({
                tabIndex: -1,
                role: this._itemRole()
            });
            f.children(":not(.ui-menu-item)").each(function() {
                var g = b(this);
                if (!/[^\-—–\s]/.test(g.text())) {
                    g.addClass("ui-widget-content ui-menu-divider")
                }
            });
            f.children(".ui-state-disabled").attr("aria-disabled", "true");
            if (this.active && !b.contains(this.element[0], this.active[0])) {
                this.blur()
            }
        },
        _itemRole: function() {
            return {
                menu: "menuitem",
                listbox: "option"
            }[this.options.role]
        },
        focus: function(e, d) {
            var g, f;
            this.blur(e, e && e.type === "focus");
            this._scrollIntoView(d);
            this.active = d.first();
            f = this.active.children("a").addClass("ui-state-focus");
            if (this.options.role) {
                this.element.attr("aria-activedescendant", f.attr("id"))
            }
            this.active.parent().closest(".ui-menu-item").children("a:first").addClass("ui-state-active");
            if (e && e.type === "keydown") {
                this._close()
            } else {
                this.timer = this._delay(function() {
                    this._close()
                }, this.delay)
            }
            g = d.children(".ui-menu");
            if (g.length && (/^mouse/.test(e.type))) {
                this._startOpening(g)
            }
            this.activeMenu = d.parent();
            this._trigger("focus", e, {
                item: d
            })
        },
        _scrollIntoView: function(g) {
            var k, f, h, d, e, j;
            if (this._hasScroll()) {
                k = parseFloat(b.css(this.activeMenu[0], "borderTopWidth")) || 0;
                f = parseFloat(b.css(this.activeMenu[0], "paddingTop")) || 0;
                h = g.offset().top - this.activeMenu.offset().top - k - f;
                d = this.activeMenu.scrollTop();
                e = this.activeMenu.height();
                j = g.height();
                if (h < 0) {
                    this.activeMenu.scrollTop(d + h)
                } else {
                    if (h + j > e) {
                        this.activeMenu.scrollTop(d + h - e + j)
                    }
                }
            }
        },
        blur: function(e, d) {
            if (!d) {
                clearTimeout(this.timer)
            }
            if (!this.active) {
                return
            }
            this.active.children("a").removeClass("ui-state-focus");
            this.active = null;
            this._trigger("blur", e, {
                item: this.active
            })
        },
        _startOpening: function(d) {
            clearTimeout(this.timer);
            if (d.attr("aria-hidden") !== "true") {
                return
            }
            this.timer = this._delay(function() {
                this._close();
                this._open(d)
            }, this.delay)
        },
        _open: function(e) {
            var d = b.extend({
                of: this.active
            }, this.options.position);
            clearTimeout(this.timer);
            this.element.find(".ui-menu").not(e.parents(".ui-menu")).hide().attr("aria-hidden", "true");
            e.show().removeAttr("aria-hidden").attr("aria-expanded", "true").position(d)
        },
        collapseAll: function(e, d) {
            clearTimeout(this.timer);
            this.timer = this._delay(function() {
                var f = d ? this.element : b(e && e.target).closest(this.element.find(".ui-menu"));
                if (!f.length) {
                    f = this.element
                }
                this._close(f);
                this.blur(e);
                this.activeMenu = f
            }, this.delay)
        },
        _close: function(d) {
            if (!d) {
                d = this.active ? this.active.parent() : this.element
            }
            d.find(".ui-menu").hide().attr("aria-hidden", "true").attr("aria-expanded", "false").end().find("a.ui-state-active").removeClass("ui-state-active")
        },
        collapse: function(e) {
            var d = this.active && this.active.parent().closest(".ui-menu-item", this.element);
            if (d && d.length) {
                this._close();
                this.focus(e, d)
            }
        },
        expand: function(e) {
            var d = this.active && this.active.children(".ui-menu ").children(".ui-menu-item").first();
            if (d && d.length) {
                this._open(d.parent());
                this._delay(function() {
                    this.focus(e, d)
                })
            }
        },
        next: function(d) {
            this._move("next", "first", d)
        },
        previous: function(d) {
            this._move("prev", "last", d)
        },
        isFirstItem: function() {
            return this.active && !this.active.prevAll(".ui-menu-item").length
        },
        isLastItem: function() {
            return this.active && !this.active.nextAll(".ui-menu-item").length
        },
        _move: function(g, e, f) {
            var d;
            if (this.active) {
                if (g === "first" || g === "last") {
                    d = this.active[g === "first" ? "prevAll" : "nextAll"](".ui-menu-item").eq(-1)
                } else {
                    d = this.active[g + "All"](".ui-menu-item").eq(0)
                }
            }
            if (!d || !d.length || !this.active) {
                d = this.activeMenu.children(".ui-menu-item")[e]()
            }
            this.focus(f, d)
        },
        nextPage: function(f) {
            var e, g, d;
            if (!this.active) {
                this.next(f);
                return
            }
            if (this.isLastItem()) {
                return
            }
            if (this._hasScroll()) {
                g = this.active.offset().top;
                d = this.element.height();
                this.active.nextAll(".ui-menu-item").each(function() {
                    e = b(this);
                    return e.offset().top - g - d < 0
                });
                this.focus(f, e)
            } else {
                this.focus(f, this.activeMenu.children(".ui-menu-item")[!this.active ? "first" : "last"]())
            }
        },
        previousPage: function(f) {
            var e, g, d;
            if (!this.active) {
                this.next(f);
                return
            }
            if (this.isFirstItem()) {
                return
            }
            if (this._hasScroll()) {
                g = this.active.offset().top;
                d = this.element.height();
                this.active.prevAll(".ui-menu-item").each(function() {
                    e = b(this);
                    return e.offset().top - g + d > 0
                });
                this.focus(f, e)
            } else {
                this.focus(f, this.activeMenu.children(".ui-menu-item").first())
            }
        },
        _hasScroll: function() {
            return this.element.outerHeight() < this.element.prop("scrollHeight")
        },
        select: function(d) {
            this.active = this.active || b(d.target).closest(".ui-menu-item");
            var e = {
                item: this.active
            };
            if (!this.active.has(".ui-menu").length) {
                this.collapseAll(d, true)
            }
            this._trigger("select", d, e)
        }
    })
}(jQuery));
(function(a, b) {
    a.widget("ui.progressbar", {
        version: "1.9.2",
        options: {
            value: 0,
            max: 100
        },
        min: 0,
        _create: function() {
            this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({
                role: "progressbar",
                "aria-valuemin": this.min,
                "aria-valuemax": this.options.max,
                "aria-valuenow": this._value()
            });
            this.valueDiv = a("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element);
            this.oldValue = this._value();
            this._refreshValue()
        },
        _destroy: function() {
            this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow");
            this.valueDiv.remove()
        },
        value: function(c) {
            if (c === b) {
                return this._value()
            }
            this._setOption("value", c);
            return this
        },
        _setOption: function(c, d) {
            if (c === "value") {
                this.options.value = d;
                this._refreshValue();
                if (this._value() === this.options.max) {
                    this._trigger("complete")
                }
            }
            this._super(c, d)
        },
        _value: function() {
            var c = this.options.value;
            if (typeof c !== "number") {
                c = 0
            }
            return Math.min(this.options.max, Math.max(this.min, c))
        },
        _percentage: function() {
            return 100 * this._value() / this.options.max
        },
        _refreshValue: function() {
            var d = this.value(),
                c = this._percentage();
            if (this.oldValue !== d) {
                this.oldValue = d;
                this._trigger("change")
            }
            this.valueDiv.toggle(d > this.min).toggleClass("ui-corner-right", d === this.options.max).width(c.toFixed(0) + "%");
            this.element.attr("aria-valuenow", d)
        }
    })
})(jQuery);
(function(c, d) {
    c.widget("ui.resizable", c.ui.mouse, {
        version: "1.9.2",
        widgetEventPrefix: "resize",
        options: {
            alsoResize: false,
            animate: false,
            animateDuration: "slow",
            animateEasing: "swing",
            aspectRatio: false,
            autoHide: false,
            containment: false,
            ghost: false,
            grid: false,
            handles: "e,s,se",
            helper: false,
            maxHeight: null,
            maxWidth: null,
            minHeight: 10,
            minWidth: 10,
            zIndex: 1000
        },
        _create: function() {
            var h = this,
                k = this.options;
            this.element.addClass("ui-resizable");
            c.extend(this, {
                _aspectRatio: !!(k.aspectRatio),
                aspectRatio: k.aspectRatio,
                originalElement: this.element,
                _proportionallyResizeElements: [],
                _helper: k.helper || k.ghost || k.animate ? k.helper || "ui-resizable-helper" : null
            });
            if (this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)) {
                this.element.wrap(c('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({
                    position: this.element.css("position"),
                    width: this.element.outerWidth(),
                    height: this.element.outerHeight(),
                    top: this.element.css("top"),
                    left: this.element.css("left")
                }));
                this.element = this.element.parent().data("resizable", this.element.data("resizable"));
                this.elementIsWrapper = true;
                this.element.css({
                    marginLeft: this.originalElement.css("marginLeft"),
                    marginTop: this.originalElement.css("marginTop"),
                    marginRight: this.originalElement.css("marginRight"),
                    marginBottom: this.originalElement.css("marginBottom")
                });
                this.originalElement.css({
                    marginLeft: 0,
                    marginTop: 0,
                    marginRight: 0,
                    marginBottom: 0
                });
                this.originalResizeStyle = this.originalElement.css("resize");
                this.originalElement.css("resize", "none");
                this._proportionallyResizeElements.push(this.originalElement.css({
                    position: "static",
                    zoom: 1,
                    display: "block"
                }));
                this.originalElement.css({
                    margin: this.originalElement.css("margin")
                });
                this._proportionallyResize()
            }
            this.handles = k.handles || (!c(".ui-resizable-handle", this.element).length ? "e,s,se" : {
                n: ".ui-resizable-n",
                e: ".ui-resizable-e",
                s: ".ui-resizable-s",
                w: ".ui-resizable-w",
                se: ".ui-resizable-se",
                sw: ".ui-resizable-sw",
                ne: ".ui-resizable-ne",
                nw: ".ui-resizable-nw"
            });
            if (this.handles.constructor == String) {
                if (this.handles == "all") {
                    this.handles = "n,e,s,w,se,sw,ne,nw"
                }
                var l = this.handles.split(",");
                this.handles = {};
                for (var f = 0; f < l.length; f++) {
                    var j = c.trim(l[f]),
                        e = "ui-resizable-" + j;
                    var g = c('<div class="ui-resizable-handle ' + e + '"></div>');
                    g.css({
                        zIndex: k.zIndex
                    });
                    if ("se" == j) {
                        g.addClass("ui-icon ui-icon-gripsmall-diagonal-se")
                    }
                    this.handles[j] = ".ui-resizable-" + j;
                    this.element.append(g)
                }
            }
            this._renderAxis = function(q) {
                q = q || this.element;
                for (var n in this.handles) {
                    if (this.handles[n].constructor == String) {
                        this.handles[n] = c(this.handles[n], this.element).show()
                    }
                    if (this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) {
                        var o = c(this.handles[n], this.element),
                            p = 0;
                        p = /sw|ne|nw|se|n|s/.test(n) ? o.outerHeight() : o.outerWidth();
                        var m = ["padding", /ne|nw|n/.test(n) ? "Top" : /se|sw|s/.test(n) ? "Bottom" : /^e$/.test(n) ? "Right" : "Left"].join("");
                        q.css(m, p);
                        this._proportionallyResize()
                    }
                    if (!c(this.handles[n]).length) {
                        continue
                    }
                }
            };
            this._renderAxis(this.element);
            this._handles = c(".ui-resizable-handle", this.element).disableSelection();
            this._handles.mouseover(function() {
                if (!h.resizing) {
                    if (this.className) {
                        var m = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)
                    }
                    h.axis = m && m[1] ? m[1] : "se"
                }
            });
            if (k.autoHide) {
                this._handles.hide();
                c(this.element).addClass("ui-resizable-autohide").mouseenter(function() {
                    if (k.disabled) {
                        return
                    }
                    c(this).removeClass("ui-resizable-autohide");
                    h._handles.show()
                }).mouseleave(function() {
                    if (k.disabled) {
                        return
                    }
                    if (!h.resizing) {
                        c(this).addClass("ui-resizable-autohide");
                        h._handles.hide()
                    }
                })
            }
            this._mouseInit()
        },
        _destroy: function() {
            this._mouseDestroy();
            var e = function(g) {
                c(g).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()
            };
            if (this.elementIsWrapper) {
                e(this.element);
                var f = this.element;
                this.originalElement.css({
                    position: f.css("position"),
                    width: f.outerWidth(),
                    height: f.outerHeight(),
                    top: f.css("top"),
                    left: f.css("left")
                }).insertAfter(f);
                f.remove()
            }
            this.originalElement.css("resize", this.originalResizeStyle);
            e(this.originalElement);
            return this
        },
        _mouseCapture: function(f) {
            var g = false;
            for (var e in this.handles) {
                if (c(this.handles[e])[0] == f.target) {
                    g = true
                }
            }
            return !this.options.disabled && g
        },
        _mouseStart: function(g) {
            var k = this.options,
                f = this.element.position(),
                e = this.element;
            this.resizing = true;
            this.documentScroll = {
                top: c(document).scrollTop(),
                left: c(document).scrollLeft()
            };
            if (e.is(".ui-draggable") || (/absolute/).test(e.css("position"))) {
                e.css({
                    position: "absolute",
                    top: f.top,
                    left: f.left
                })
            }
            this._renderProxy();
            var l = b(this.helper.css("left")),
                h = b(this.helper.css("top"));
            if (k.containment) {
                l += c(k.containment).scrollLeft() || 0;
                h += c(k.containment).scrollTop() || 0
            }
            this.offset = this.helper.offset();
            this.position = {
                left: l,
                top: h
            };
            this.size = this._helper ? {
                width: e.outerWidth(),
                height: e.outerHeight()
            } : {
                width: e.width(),
                height: e.height()
            };
            this.originalSize = this._helper ? {
                width: e.outerWidth(),
                height: e.outerHeight()
            } : {
                width: e.width(),
                height: e.height()
            };
            this.originalPosition = {
                left: l,
                top: h
            };
            this.sizeDiff = {
                width: e.outerWidth() - e.width(),
                height: e.outerHeight() - e.height()
            };
            this.originalMousePosition = {
                left: g.pageX,
                top: g.pageY
            };
            this.aspectRatio = (typeof k.aspectRatio == "number") ? k.aspectRatio : ((this.originalSize.width / this.originalSize.height) || 1);
            var j = c(".ui-resizable-" + this.axis).css("cursor");
            c("body").css("cursor", j == "auto" ? this.axis + "-resize" : j);
            e.addClass("ui-resizable-resizing");
            this._propagate("start", g);
            return true
        },
        _mouseDrag: function(e) {
            var g = this.helper,
                f = this.options,
                m = {},
                l = this,
                j = this.originalMousePosition,
                n = this.axis;
            var q = (e.pageX - j.left) || 0,
                p = (e.pageY - j.top) || 0;
            var h = this._change[n];
            if (!h) {
                return false
            }
            var k = h.apply(this, [e, q, p]);
            this._updateVirtualBoundaries(e.shiftKey);
            if (this._aspectRatio || e.shiftKey) {
                k = this._updateRatio(k, e)
            }
            k = this._respectSize(k, e);
            this._propagate("resize", e);
            g.css({
                top: this.position.top + "px",
                left: this.position.left + "px",
                width: this.size.width + "px",
                height: this.size.height + "px"
            });
            if (!this._helper && this._proportionallyResizeElements.length) {
                this._proportionallyResize()
            }
            this._updateCache(k);
            this._trigger("resize", e, this.ui());
            return false
        },
        _mouseStop: function(h) {
            this.resizing = false;
            var j = this.options,
                m = this;
            if (this._helper) {
                var g = this._proportionallyResizeElements,
                    e = g.length && (/textarea/i).test(g[0].nodeName),
                    f = e && c.ui.hasScroll(g[0], "left") ? 0 : m.sizeDiff.height,
                    l = e ? 0 : m.sizeDiff.width;
                var p = {
                        width: (m.helper.width() - l),
                        height: (m.helper.height() - f)
                    },
                    k = (parseInt(m.element.css("left"), 10) + (m.position.left - m.originalPosition.left)) || null,
                    n = (parseInt(m.element.css("top"), 10) + (m.position.top - m.originalPosition.top)) || null;
                if (!j.animate) {
                    this.element.css(c.extend(p, {
                        top: n,
                        left: k
                    }))
                }
                m.helper.height(m.size.height);
                m.helper.width(m.size.width);
                if (this._helper && !j.animate) {
                    this._proportionallyResize()
                }
            }
            c("body").css("cursor", "auto");
            this.element.removeClass("ui-resizable-resizing");
            this._propagate("stop", h);
            if (this._helper) {
                this.helper.remove()
            }
            return false
        },
        _updateVirtualBoundaries: function(g) {
            var k = this.options,
                j, h, f, l, e;
            e = {
                minWidth: a(k.minWidth) ? k.minWidth : 0,
                maxWidth: a(k.maxWidth) ? k.maxWidth : Infinity,
                minHeight: a(k.minHeight) ? k.minHeight : 0,
                maxHeight: a(k.maxHeight) ? k.maxHeight : Infinity
            };
            if (this._aspectRatio || g) {
                j = e.minHeight * this.aspectRatio;
                f = e.minWidth / this.aspectRatio;
                h = e.maxHeight * this.aspectRatio;
                l = e.maxWidth / this.aspectRatio;
                if (j > e.minWidth) {
                    e.minWidth = j
                }
                if (f > e.minHeight) {
                    e.minHeight = f
                }
                if (h < e.maxWidth) {
                    e.maxWidth = h
                }
                if (l < e.maxHeight) {
                    e.maxHeight = l
                }
            }
            this._vBoundaries = e
        },
        _updateCache: function(e) {
            var f = this.options;
            this.offset = this.helper.offset();
            if (a(e.left)) {
                this.position.left = e.left
            }
            if (a(e.top)) {
                this.position.top = e.top
            }
            if (a(e.height)) {
                this.size.height = e.height
            }
            if (a(e.width)) {
                this.size.width = e.width
            }
        },
        _updateRatio: function(h, g) {
            var j = this.options,
                k = this.position,
                f = this.size,
                e = this.axis;
            if (a(h.height)) {
                h.width = (h.height * this.aspectRatio)
            } else {
                if (a(h.width)) {
                    h.height = (h.width / this.aspectRatio)
                }
            }
            if (e == "sw") {
                h.left = k.left + (f.width - h.width);
                h.top = null
            }
            if (e == "nw") {
                h.top = k.top + (f.height - h.height);
                h.left = k.left + (f.width - h.width)
            }
            return h
        },
        _respectSize: function(m, g) {
            var k = this.helper,
                j = this._vBoundaries,
                s = this._aspectRatio || g.shiftKey,
                r = this.axis,
                u = a(m.width) && j.maxWidth && (j.maxWidth < m.width),
                n = a(m.height) && j.maxHeight && (j.maxHeight < m.height),
                h = a(m.width) && j.minWidth && (j.minWidth > m.width),
                t = a(m.height) && j.minHeight && (j.minHeight > m.height);
            if (h) {
                m.width = j.minWidth
            }
            if (t) {
                m.height = j.minHeight
            }
            if (u) {
                m.width = j.maxWidth
            }
            if (n) {
                m.height = j.maxHeight
            }
            var f = this.originalPosition.left + this.originalSize.width,
                q = this.position.top + this.size.height;
            var l = /sw|nw|w/.test(r),
                e = /nw|ne|n/.test(r);
            if (h && l) {
                m.left = f - j.minWidth
            }
            if (u && l) {
                m.left = f - j.maxWidth
            }
            if (t && e) {
                m.top = q - j.minHeight
            }
            if (n && e) {
                m.top = q - j.maxHeight
            }
            var p = !m.width && !m.height;
            if (p && !m.left && m.top) {
                m.top = null
            } else {
                if (p && !m.top && m.left) {
                    m.left = null
                }
            }
            return m
        },
        _proportionallyResize: function() {
            var k = this.options;
            if (!this._proportionallyResizeElements.length) {
                return
            }
            var g = this.helper || this.element;
            for (var f = 0; f < this._proportionallyResizeElements.length; f++) {
                var h = this._proportionallyResizeElements[f];
                if (!this.borderDif) {
                    var e = [h.css("borderTopWidth"), h.css("borderRightWidth"), h.css("borderBottomWidth"), h.css("borderLeftWidth")],
                        j = [h.css("paddingTop"), h.css("paddingRight"), h.css("paddingBottom"), h.css("paddingLeft")];
                    this.borderDif = c.map(e, function(l, n) {
                        var m = parseInt(l, 10) || 0,
                            o = parseInt(j[n], 10) || 0;
                        return m + o
                    })
                }
                h.css({
                    height: (g.height() - this.borderDif[0] - this.borderDif[2]) || 0,
                    width: (g.width() - this.borderDif[1] - this.borderDif[3]) || 0
                })
            }
        },
        _renderProxy: function() {
            var e = this.element,
                h = this.options;
            this.elementOffset = e.offset();
            if (this._helper) {
                this.helper = this.helper || c('<div style="overflow:hidden;"></div>');
                var f = (c.ui.ie6 ? 1 : 0),
                    g = (c.ui.ie6 ? 2 : -1);
                this.helper.addClass(this._helper).css({
                    width: this.element.outerWidth() + g,
                    height: this.element.outerHeight() + g,
                    position: "absolute",
                    left: this.elementOffset.left - f + "px",
                    top: this.elementOffset.top - f + "px",
                    zIndex: ++h.zIndex
                });
                this.helper.appendTo("body").disableSelection()
            } else {
                this.helper = this.element
            }
        },
        _change: {
            e: function(g, f, e) {
                return {
                    width: this.originalSize.width + f
                }
            },
            w: function(h, f, e) {
                var k = this.options,
                    g = this.originalSize,
                    j = this.originalPosition;
                return {
                    left: j.left + f,
                    width: g.width - f
                }
            },
            n: function(h, f, e) {
                var k = this.options,
                    g = this.originalSize,
                    j = this.originalPosition;
                return {
                    top: j.top + e,
                    height: g.height - e
                }
            },
            s: function(g, f, e) {
                return {
                    height: this.originalSize.height + e
                }
            },
            se: function(g, f, e) {
                return c.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [g, f, e]))
            },
            sw: function(g, f, e) {
                return c.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [g, f, e]))
            },
            ne: function(g, f, e) {
                return c.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [g, f, e]))
            },
            nw: function(g, f, e) {
                return c.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [g, f, e]))
            }
        },
        _propagate: function(f, e) {
            c.ui.plugin.call(this, f, [e, this.ui()]);
            (f != "resize" && this._trigger(f, e, this.ui()))
        },
        plugins: {},
        ui: function() {
            return {
                originalElement: this.originalElement,
                element: this.element,
                helper: this.helper,
                position: this.position,
                size: this.size,
                originalSize: this.originalSize,
                originalPosition: this.originalPosition
            }
        }
    });
    c.ui.plugin.add("resizable", "alsoResize", {
        start: function(f, g) {
            var e = c(this).data("resizable"),
                j = e.options;
            var h = function(k) {
                c(k).each(function() {
                    var l = c(this);
                    l.data("resizable-alsoresize", {
                        width: parseInt(l.width(), 10),
                        height: parseInt(l.height(), 10),
                        left: parseInt(l.css("left"), 10),
                        top: parseInt(l.css("top"), 10)
                    })
                })
            };
            if (typeof(j.alsoResize) == "object" && !j.alsoResize.parentNode) {
                if (j.alsoResize.length) {
                    j.alsoResize = j.alsoResize[0];
                    h(j.alsoResize)
                } else {
                    c.each(j.alsoResize, function(k) {
                        h(k)
                    })
                }
            } else {
                h(j.alsoResize)
            }
        },
        resize: function(g, j) {
            var f = c(this).data("resizable"),
                k = f.options,
                h = f.originalSize,
                m = f.originalPosition;
            var l = {
                    height: (f.size.height - h.height) || 0,
                    width: (f.size.width - h.width) || 0,
                    top: (f.position.top - m.top) || 0,
                    left: (f.position.left - m.left) || 0
                },
                e = function(n, o) {
                    c(n).each(function() {
                        var r = c(this),
                            s = c(this).data("resizable-alsoresize"),
                            q = {},
                            p = o && o.length ? o : r.parents(j.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];
                        c.each(p, function(t, v) {
                            var u = (s[v] || 0) + (l[v] || 0);
                            if (u && u >= 0) {
                                q[v] = u || null
                            }
                        });
                        r.css(q)
                    })
                };
            if (typeof(k.alsoResize) == "object" && !k.alsoResize.nodeType) {
                c.each(k.alsoResize, function(n, o) {
                    e(n, o)
                })
            } else {
                e(k.alsoResize)
            }
        },
        stop: function(e, f) {
            c(this).removeData("resizable-alsoresize")
        }
    });
    c.ui.plugin.add("resizable", "animate", {
        stop: function(j, q) {
            var n = c(this).data("resizable"),
                k = n.options;
            var h = n._proportionallyResizeElements,
                e = h.length && (/textarea/i).test(h[0].nodeName),
                f = e && c.ui.hasScroll(h[0], "left") ? 0 : n.sizeDiff.height,
                m = e ? 0 : n.sizeDiff.width;
            var g = {
                    width: (n.size.width - m),
                    height: (n.size.height - f)
                },
                l = (parseInt(n.element.css("left"), 10) + (n.position.left - n.originalPosition.left)) || null,
                p = (parseInt(n.element.css("top"), 10) + (n.position.top - n.originalPosition.top)) || null;
            n.element.animate(c.extend(g, p && l ? {
                top: p,
                left: l
            } : {}), {
                duration: k.animateDuration,
                easing: k.animateEasing,
                step: function() {
                    var o = {
                        width: parseInt(n.element.css("width"), 10),
                        height: parseInt(n.element.css("height"), 10),
                        top: parseInt(n.element.css("top"), 10),
                        left: parseInt(n.element.css("left"), 10)
                    };
                    if (h && h.length) {
                        c(h[0]).css({
                            width: o.width,
                            height: o.height
                        })
                    }
                    n._updateCache(o);
                    n._propagate("resize", j)
                }
            })
        }
    });
    c.ui.plugin.add("resizable", "containment", {
        start: function(f, t) {
            var r = c(this).data("resizable"),
                k = r.options,
                m = r.element;
            var g = k.containment,
                l = (g instanceof c) ? g.get(0) : (/parent/.test(g)) ? m.parent().get(0) : g;
            if (!l) {
                return
            }
            r.containerElement = c(l);
            if (/document/.test(g) || g == document) {
                r.containerOffset = {
                    left: 0,
                    top: 0
                };
                r.containerPosition = {
                    left: 0,
                    top: 0
                };
                r.parentData = {
                    element: c(document),
                    left: 0,
                    top: 0,
                    width: c(document).width(),
                    height: c(document).height() || document.body.parentNode.scrollHeight
                }
            } else {
                var q = c(l),
                    j = [];
                c(["Top", "Right", "Left", "Bottom"]).each(function(p, o) {
                    j[p] = b(q.css("padding" + o))
                });
                r.containerOffset = q.offset();
                r.containerPosition = q.position();
                r.containerSize = {
                    height: (q.innerHeight() - j[3]),
                    width: (q.innerWidth() - j[1])
                };
                var s = r.containerOffset,
                    e = r.containerSize.height,
                    n = r.containerSize.width,
                    h = (c.ui.hasScroll(l, "left") ? l.scrollWidth : n),
                    u = (c.ui.hasScroll(l) ? l.scrollHeight : e);
                r.parentData = {
                    element: l,
                    left: s.left,
                    top: s.top,
                    width: h,
                    height: u
                }
            }
        },
        resize: function(g, s) {
            var n = c(this).data("resizable"),
                j = n.options,
                f = n.containerSize,
                r = n.containerOffset,
                p = n.size,
                q = n.position,
                t = n._aspectRatio || g.shiftKey,
                e = {
                    top: 0,
                    left: 0
                },
                h = n.containerElement;
            if (h[0] != document && (/static/).test(h.css("position"))) {
                e = r
            }
            if (q.left < (n._helper ? r.left : 0)) {
                n.size.width = n.size.width + (n._helper ? (n.position.left - r.left) : (n.position.left - e.left));
                if (t) {
                    n.size.height = n.size.width / n.aspectRatio
                }
                n.position.left = j.helper ? r.left : 0
            }
            if (q.top < (n._helper ? r.top : 0)) {
                n.size.height = n.size.height + (n._helper ? (n.position.top - r.top) : n.position.top);
                if (t) {
                    n.size.width = n.size.height * n.aspectRatio
                }
                n.position.top = n._helper ? r.top : 0
            }
            n.offset.left = n.parentData.left + n.position.left;
            n.offset.top = n.parentData.top + n.position.top;
            var m = Math.abs((n._helper ? n.offset.left - e.left : (n.offset.left - e.left)) + n.sizeDiff.width),
                u = Math.abs((n._helper ? n.offset.top - e.top : (n.offset.top - r.top)) + n.sizeDiff.height);
            var l = n.containerElement.get(0) == n.element.parent().get(0),
                k = /relative|absolute/.test(n.containerElement.css("position"));
            if (l && k) {
                m -= n.parentData.left
            }
            if (m + n.size.width >= n.parentData.width) {
                n.size.width = n.parentData.width - m;
                if (t) {
                    n.size.height = n.size.width / n.aspectRatio
                }
            }
            if (u + n.size.height >= n.parentData.height) {
                n.size.height = n.parentData.height - u;
                if (t) {
                    n.size.width = n.size.height * n.aspectRatio
                }
            }
        },
        stop: function(f, q) {
            var m = c(this).data("resizable"),
                g = m.options,
                n = m.position,
                p = m.containerOffset,
                e = m.containerPosition,
                j = m.containerElement;
            var k = c(m.helper),
                s = k.offset(),
                r = k.outerWidth() - m.sizeDiff.width,
                l = k.outerHeight() - m.sizeDiff.height;
            if (m._helper && !g.animate && (/relative/).test(j.css("position"))) {
                c(this).css({
                    left: s.left - e.left - p.left,
                    width: r,
                    height: l
                })
            }
            if (m._helper && !g.animate && (/static/).test(j.css("position"))) {
                c(this).css({
                    left: s.left - e.left - p.left,
                    width: r,
                    height: l
                })
            }
        }
    });
    c.ui.plugin.add("resizable", "ghost", {
        start: function(g, h) {
            var f = c(this).data("resizable"),
                j = f.options,
                e = f.size;
            f.ghost = f.originalElement.clone();
            f.ghost.css({
                opacity: 0.25,
                display: "block",
                position: "relative",
                height: e.height,
                width: e.width,
                margin: 0,
                left: 0,
                top: 0
            }).addClass("ui-resizable-ghost").addClass(typeof j.ghost == "string" ? j.ghost : "");
            f.ghost.appendTo(f.helper)
        },
        resize: function(f, g) {
            var e = c(this).data("resizable"),
                h = e.options;
            if (e.ghost) {
                e.ghost.css({
                    position: "relative",
                    height: e.size.height,
                    width: e.size.width
                })
            }
        },
        stop: function(f, g) {
            var e = c(this).data("resizable"),
                h = e.options;
            if (e.ghost && e.helper) {
                e.helper.get(0).removeChild(e.ghost.get(0))
            }
        }
    });
    c.ui.plugin.add("resizable", "grid", {
        resize: function(e, p) {
            var l = c(this).data("resizable"),
                h = l.options,
                m = l.size,
                j = l.originalSize,
                k = l.originalPosition,
                q = l.axis,
                n = h._aspectRatio || e.shiftKey;
            h.grid = typeof h.grid == "number" ? [h.grid, h.grid] : h.grid;
            var g = Math.round((m.width - j.width) / (h.grid[0] || 1)) * (h.grid[0] || 1),
                f = Math.round((m.height - j.height) / (h.grid[1] || 1)) * (h.grid[1] || 1);
            if (/^(se|s|e)$/.test(q)) {
                l.size.width = j.width + g;
                l.size.height = j.height + f
            } else {
                if (/^(ne)$/.test(q)) {
                    l.size.width = j.width + g;
                    l.size.height = j.height + f;
                    l.position.top = k.top - f
                } else {
                    if (/^(sw)$/.test(q)) {
                        l.size.width = j.width + g;
                        l.size.height = j.height + f;
                        l.position.left = k.left - g
                    } else {
                        l.size.width = j.width + g;
                        l.size.height = j.height + f;
                        l.position.top = k.top - f;
                        l.position.left = k.left - g
                    }
                }
            }
        }
    });
    var b = function(e) {
        return parseInt(e, 10) || 0
    };
    var a = function(e) {
        return !isNaN(parseInt(e, 10))
    }
})(jQuery);
(function(a, b) {
    a.widget("ui.selectable", a.ui.mouse, {
        version: "1.9.2",
        options: {
            appendTo: "body",
            autoRefresh: true,
            distance: 0,
            filter: "*",
            tolerance: "touch"
        },
        _create: function() {
            var c = this;
            this.element.addClass("ui-selectable");
            this.dragged = false;
            var d;
            this.refresh = function() {
                d = a(c.options.filter, c.element[0]);
                d.addClass("ui-selectee");
                d.each(function() {
                    var e = a(this);
                    var f = e.offset();
                    a.data(this, "selectable-item", {
                        element: this,
                        $element: e,
                        left: f.left,
                        top: f.top,
                        right: f.left + e.outerWidth(),
                        bottom: f.top + e.outerHeight(),
                        startselected: false,
                        selected: e.hasClass("ui-selected"),
                        selecting: e.hasClass("ui-selecting"),
                        unselecting: e.hasClass("ui-unselecting")
                    })
                })
            };
            this.refresh();
            this.selectees = d.addClass("ui-selectee");
            this._mouseInit();
            this.helper = a("<div class='ui-selectable-helper'></div>")
        },
        _destroy: function() {
            this.selectees.removeClass("ui-selectee").removeData("selectable-item");
            this.element.removeClass("ui-selectable ui-selectable-disabled");
            this._mouseDestroy()
        },
        _mouseStart: function(e) {
            var d = this;
            this.opos = [e.pageX, e.pageY];
            if (this.options.disabled) {
                return
            }
            var c = this.options;
            this.selectees = a(c.filter, this.element[0]);
            this._trigger("start", e);
            a(c.appendTo).append(this.helper);
            this.helper.css({
                left: e.clientX,
                top: e.clientY,
                width: 0,
                height: 0
            });
            if (c.autoRefresh) {
                this.refresh()
            }
            this.selectees.filter(".ui-selected").each(function() {
                var f = a.data(this, "selectable-item");
                f.startselected = true;
                if (!e.metaKey && !e.ctrlKey) {
                    f.$element.removeClass("ui-selected");
                    f.selected = false;
                    f.$element.addClass("ui-unselecting");
                    f.unselecting = true;
                    d._trigger("unselecting", e, {
                        unselecting: f.element
                    })
                }
            });
            a(e.target).parents().andSelf().each(function() {
                var g = a.data(this, "selectable-item");
                if (g) {
                    var f = (!e.metaKey && !e.ctrlKey) || !g.$element.hasClass("ui-selected");
                    g.$element.removeClass(f ? "ui-unselecting" : "ui-selected").addClass(f ? "ui-selecting" : "ui-unselecting");
                    g.unselecting = !f;
                    g.selecting = f;
                    g.selected = f;
                    if (f) {
                        d._trigger("selecting", e, {
                            selecting: g.element
                        })
                    } else {
                        d._trigger("unselecting", e, {
                            unselecting: g.element
                        })
                    }
                    return false
                }
            })
        },
        _mouseDrag: function(k) {
            var j = this;
            this.dragged = true;
            if (this.options.disabled) {
                return
            }
            var e = this.options;
            var d = this.opos[0],
                h = this.opos[1],
                c = k.pageX,
                g = k.pageY;
            if (d > c) {
                var f = c;
                c = d;
                d = f
            }
            if (h > g) {
                var f = g;
                g = h;
                h = f
            }
            this.helper.css({
                left: d,
                top: h,
                width: c - d,
                height: g - h
            });
            this.selectees.each(function() {
                var l = a.data(this, "selectable-item");
                if (!l || l.element == j.element[0]) {
                    return
                }
                var m = false;
                if (e.tolerance == "touch") {
                    m = (!(l.left > c || l.right < d || l.top > g || l.bottom < h))
                } else {
                    if (e.tolerance == "fit") {
                        m = (l.left > d && l.right < c && l.top > h && l.bottom < g)
                    }
                }
                if (m) {
                    if (l.selected) {
                        l.$element.removeClass("ui-selected");
                        l.selected = false
                    }
                    if (l.unselecting) {
                        l.$element.removeClass("ui-unselecting");
                        l.unselecting = false
                    }
                    if (!l.selecting) {
                        l.$element.addClass("ui-selecting");
                        l.selecting = true;
                        j._trigger("selecting", k, {
                            selecting: l.element
                        })
                    }
                } else {
                    if (l.selecting) {
                        if ((k.metaKey || k.ctrlKey) && l.startselected) {
                            l.$element.removeClass("ui-selecting");
                            l.selecting = false;
                            l.$element.addClass("ui-selected");
                            l.selected = true
                        } else {
                            l.$element.removeClass("ui-selecting");
                            l.selecting = false;
                            if (l.startselected) {
                                l.$element.addClass("ui-unselecting");
                                l.unselecting = true
                            }
                            j._trigger("unselecting", k, {
                                unselecting: l.element
                            })
                        }
                    }
                    if (l.selected) {
                        if (!k.metaKey && !k.ctrlKey && !l.startselected) {
                            l.$element.removeClass("ui-selected");
                            l.selected = false;
                            l.$element.addClass("ui-unselecting");
                            l.unselecting = true;
                            j._trigger("unselecting", k, {
                                unselecting: l.element
                            })
                        }
                    }
                }
            });
            return false
        },
        _mouseStop: function(e) {
            var d = this;
            this.dragged = false;
            var c = this.options;
            a(".ui-unselecting", this.element[0]).each(function() {
                var f = a.data(this, "selectable-item");
                f.$element.removeClass("ui-unselecting");
                f.unselecting = false;
                f.startselected = false;
                d._trigger("unselected", e, {
                    unselected: f.element
                })
            });
            a(".ui-selecting", this.element[0]).each(function() {
                var f = a.data(this, "selectable-item");
                f.$element.removeClass("ui-selecting").addClass("ui-selected");
                f.selecting = false;
                f.selected = true;
                f.startselected = true;
                d._trigger("selected", e, {
                    selected: f.element
                })
            });
            this._trigger("stop", e);
            this.helper.remove();
            return false
        }
    })
})(jQuery);
(function(b, c) {
    var a = 5;
    b.widget("ui.slider", b.ui.mouse, {
        version: "1.9.2",
        widgetEventPrefix: "slide",
        options: {
            animate: false,
            distance: 0,
            max: 100,
            min: 0,
            orientation: "horizontal",
            range: false,
            step: 1,
            value: 0,
            values: null
        },
        _create: function() {
            var f, d, j = this.options,
                h = this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),
                g = "<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>",
                e = [];
            this._keySliding = false;
            this._mouseSliding = false;
            this._animateOff = true;
            this._handleIndex = null;
            this._detectOrientation();
            this._mouseInit();
            this.element.addClass("ui-slider ui-slider-" + this.orientation + " ui-widget ui-widget-content ui-corner-all" + (j.disabled ? " ui-slider-disabled ui-disabled" : ""));
            this.range = b([]);
            if (j.range) {
                if (j.range === true) {
                    if (!j.values) {
                        j.values = [this._valueMin(), this._valueMin()]
                    }
                    if (j.values.length && j.values.length !== 2) {
                        j.values = [j.values[0], j.values[0]]
                    }
                }
                this.range = b("<div></div>").appendTo(this.element).addClass("ui-slider-range ui-widget-header" + ((j.range === "min" || j.range === "max") ? " ui-slider-range-" + j.range : ""))
            }
            d = (j.values && j.values.length) || 1;
            for (f = h.length; f < d; f++) {
                e.push(g)
            }
            this.handles = h.add(b(e.join("")).appendTo(this.element));
            this.handle = this.handles.eq(0);
            this.handles.add(this.range).filter("a").click(function(k) {
                k.preventDefault()
            }).mouseenter(function() {
                if (!j.disabled) {
                    b(this).addClass("ui-state-hover")
                }
            }).mouseleave(function() {
                b(this).removeClass("ui-state-hover")
            }).focus(function() {
                if (!j.disabled) {
                    b(".ui-slider .ui-state-focus").removeClass("ui-state-focus");
                    b(this).addClass("ui-state-focus")
                } else {
                    b(this).blur()
                }
            }).blur(function() {
                b(this).removeClass("ui-state-focus")
            });
            this.handles.each(function(k) {
                b(this).data("ui-slider-handle-index", k)
            });
            this._on(this.handles, {
                keydown: function(o) {
                    var p, m, l, n, k = b(o.target).data("ui-slider-handle-index");
                    switch (o.keyCode) {
                        case b.ui.keyCode.HOME:
                        case b.ui.keyCode.END:
                        case b.ui.keyCode.PAGE_UP:
                        case b.ui.keyCode.PAGE_DOWN:
                        case b.ui.keyCode.UP:
                        case b.ui.keyCode.RIGHT:
                        case b.ui.keyCode.DOWN:
                        case b.ui.keyCode.LEFT:
                            o.preventDefault();
                            if (!this._keySliding) {
                                this._keySliding = true;
                                b(o.target).addClass("ui-state-active");
                                p = this._start(o, k);
                                if (p === false) {
                                    return
                                }
                            }
                            break
                    }
                    n = this.options.step;
                    if (this.options.values && this.options.values.length) {
                        m = l = this.values(k)
                    } else {
                        m = l = this.value()
                    }
                    switch (o.keyCode) {
                        case b.ui.keyCode.HOME:
                            l = this._valueMin();
                            break;
                        case b.ui.keyCode.END:
                            l = this._valueMax();
                            break;
                        case b.ui.keyCode.PAGE_UP:
                            l = this._trimAlignValue(m + ((this._valueMax() - this._valueMin()) / a));
                            break;
                        case b.ui.keyCode.PAGE_DOWN:
                            l = this._trimAlignValue(m - ((this._valueMax() - this._valueMin()) / a));
                            break;
                        case b.ui.keyCode.UP:
                        case b.ui.keyCode.RIGHT:
                            if (m === this._valueMax()) {
                                return
                            }
                            l = this._trimAlignValue(m + n);
                            break;
                        case b.ui.keyCode.DOWN:
                        case b.ui.keyCode.LEFT:
                            if (m === this._valueMin()) {
                                return
                            }
                            l = this._trimAlignValue(m - n);
                            break
                    }
                    this._slide(o, k, l)
                },
                keyup: function(l) {
                    var k = b(l.target).data("ui-slider-handle-index");
                    if (this._keySliding) {
                        this._keySliding = false;
                        this._stop(l, k);
                        this._change(l, k);
                        b(l.target).removeClass("ui-state-active")
                    }
                }
            });
            this._refreshValue();
            this._animateOff = false
        },
        _destroy: function() {
            this.handles.remove();
            this.range.remove();
            this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all");
            this._mouseDestroy()
        },
        _mouseCapture: function(f) {
            var k, n, e, h, m, p, j, d, l = this,
                g = this.options;
            if (g.disabled) {
                return false
            }
            this.elementSize = {
                width: this.element.outerWidth(),
                height: this.element.outerHeight()
            };
            this.elementOffset = this.element.offset();
            k = {
                x: f.pageX,
                y: f.pageY
            };
            n = this._normValueFromMouse(k);
            e = this._valueMax() - this._valueMin() + 1;
            this.handles.each(function(o) {
                var q = Math.abs(n - l.values(o));
                if (e > q) {
                    e = q;
                    h = b(this);
                    m = o
                }
            });
            if (g.range === true && this.values(1) === g.min) {
                m += 1;
                h = b(this.handles[m])
            }
            p = this._start(f, m);
            if (p === false) {
                return false
            }
            this._mouseSliding = true;
            this._handleIndex = m;
            h.addClass("ui-state-active").focus();
            j = h.offset();
            d = !b(f.target).parents().andSelf().is(".ui-slider-handle");
            this._clickOffset = d ? {
                left: 0,
                top: 0
            } : {
                left: f.pageX - j.left - (h.width() / 2),
                top: f.pageY - j.top - (h.height() / 2) - (parseInt(h.css("borderTopWidth"), 10) || 0) - (parseInt(h.css("borderBottomWidth"), 10) || 0) + (parseInt(h.css("marginTop"), 10) || 0)
            };
            if (!this.handles.hasClass("ui-state-hover")) {
                this._slide(f, m, n)
            }
            this._animateOff = true;
            return true
        },
        _mouseStart: function() {
            return true
        },
        _mouseDrag: function(f) {
            var d = {
                    x: f.pageX,
                    y: f.pageY
                },
                e = this._normValueFromMouse(d);
            this._slide(f, this._handleIndex, e);
            return false
        },
        _mouseStop: function(d) {
            this.handles.removeClass("ui-state-active");
            this._mouseSliding = false;
            this._stop(d, this._handleIndex);
            this._change(d, this._handleIndex);
            this._handleIndex = null;
            this._clickOffset = null;
            this._animateOff = false;
            return false
        },
        _detectOrientation: function() {
            this.orientation = (this.options.orientation === "vertical") ? "vertical" : "horizontal"
        },
        _normValueFromMouse: function(e) {
            var d, h, g, f, j;
            if (this.orientation === "horizontal") {
                d = this.elementSize.width;
                h = e.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)
            } else {
                d = this.elementSize.height;
                h = e.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)
            }
            g = (h / d);
            if (g > 1) {
                g = 1
            }
            if (g < 0) {
                g = 0
            }
            if (this.orientation === "vertical") {
                g = 1 - g
            }
            f = this._valueMax() - this._valueMin();
            j = this._valueMin() + g * f;
            return this._trimAlignValue(j)
        },
        _start: function(f, e) {
            var d = {
                handle: this.handles[e],
                value: this.value()
            };
            if (this.options.values && this.options.values.length) {
                d.value = this.values(e);
                d.values = this.values()
            }
            return this._trigger("start", f, d)
        },
        _slide: function(h, g, f) {
            var d, e, j;
            if (this.options.values && this.options.values.length) {
                d = this.values(g ? 0 : 1);
                if ((this.options.values.length === 2 && this.options.range === true) && ((g === 0 && f > d) || (g === 1 && f < d))) {
                    f = d
                }
                if (f !== this.values(g)) {
                    e = this.values();
                    e[g] = f;
                    j = this._trigger("slide", h, {
                        handle: this.handles[g],
                        value: f,
                        values: e
                    });
                    d = this.values(g ? 0 : 1);
                    if (j !== false) {
                        this.values(g, f, true)
                    }
                }
            } else {
                if (f !== this.value()) {
                    j = this._trigger("slide", h, {
                        handle: this.handles[g],
                        value: f
                    });
                    if (j !== false) {
                        this.value(f)
                    }
                }
            }
        },
        _stop: function(f, e) {
            var d = {
                handle: this.handles[e],
                value: this.value()
            };
            if (this.options.values && this.options.values.length) {
                d.value = this.values(e);
                d.values = this.values()
            }
            this._trigger("stop", f, d)
        },
        _change: function(f, e) {
            if (!this._keySliding && !this._mouseSliding) {
                var d = {
                    handle: this.handles[e],
                    value: this.value()
                };
                if (this.options.values && this.options.values.length) {
                    d.value = this.values(e);
                    d.values = this.values()
                }
                this._trigger("change", f, d)
            }
        },
        value: function(d) {
            if (arguments.length) {
                this.options.value = this._trimAlignValue(d);
                this._refreshValue();
                this._change(null, 0);
                return
            }
            return this._value()
        },
        values: function(e, h) {
            var g, d, f;
            if (arguments.length > 1) {
                this.options.values[e] = this._trimAlignValue(h);
                this._refreshValue();
                this._change(null, e);
                return
            }
            if (arguments.length) {
                if (b.isArray(arguments[0])) {
                    g = this.options.values;
                    d = arguments[0];
                    for (f = 0; f < g.length; f += 1) {
                        g[f] = this._trimAlignValue(d[f]);
                        this._change(null, f)
                    }
                    this._refreshValue()
                } else {
                    if (this.options.values && this.options.values.length) {
                        return this._values(e)
                    } else {
                        return this.value()
                    }
                }
            } else {
                return this._values()
            }
        },
        _setOption: function(e, f) {
            var d, g = 0;
            if (b.isArray(this.options.values)) {
                g = this.options.values.length
            }
            b.Widget.prototype._setOption.apply(this, arguments);
            switch (e) {
                case "disabled":
                    if (f) {
                        this.handles.filter(".ui-state-focus").blur();
                        this.handles.removeClass("ui-state-hover");
                        this.handles.prop("disabled", true);
                        this.element.addClass("ui-disabled")
                    } else {
                        this.handles.prop("disabled", false);
                        this.element.removeClass("ui-disabled")
                    }
                    break;
                case "orientation":
                    this._detectOrientation();
                    this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation);
                    this._refreshValue();
                    break;
                case "value":
                    this._animateOff = true;
                    this._refreshValue();
                    this._change(null, 0);
                    this._animateOff = false;
                    break;
                case "values":
                    this._animateOff = true;
                    this._refreshValue();
                    for (d = 0; d < g; d += 1) {
                        this._change(null, d)
                    }
                    this._animateOff = false;
                    break;
                case "min":
                case "max":
                    this._animateOff = true;
                    this._refreshValue();
                    this._animateOff = false;
                    break
            }
        },
        _value: function() {
            var d = this.options.value;
            d = this._trimAlignValue(d);
            return d
        },
        _values: function(d) {
            var g, f, e;
            if (arguments.length) {
                g = this.options.values[d];
                g = this._trimAlignValue(g);
                return g
            } else {
                f = this.options.values.slice();
                for (e = 0; e < f.length; e += 1) {
                    f[e] = this._trimAlignValue(f[e])
                }
                return f
            }
        },
        _trimAlignValue: function(g) {
            if (g <= this._valueMin()) {
                return this._valueMin()
            }
            if (g >= this._valueMax()) {
                return this._valueMax()
            }
            var d = (this.options.step > 0) ? this.options.step : 1,
                f = (g - this._valueMin()) % d,
                e = g - f;
            if (Math.abs(f) * 2 >= d) {
                e += (f > 0) ? d : (-d)
            }
            return parseFloat(e.toFixed(5))
        },
        _valueMin: function() {
            return this.options.min
        },
        _valueMax: function() {
            return this.options.max
        },
        _refreshValue: function() {
            var j, h, m, k, n, g = this.options.range,
                f = this.options,
                l = this,
                e = (!this._animateOff) ? f.animate : false,
                d = {};
            if (this.options.values && this.options.values.length) {
                this.handles.each(function(o) {
                    h = (l.values(o) - l._valueMin()) / (l._valueMax() - l._valueMin()) * 100;
                    d[l.orientation === "horizontal" ? "left" : "bottom"] = h + "%";
                    b(this).stop(1, 1)[e ? "animate" : "css"](d, f.animate);
                    if (l.options.range === true) {
                        if (l.orientation === "horizontal") {
                            if (o === 0) {
                                l.range.stop(1, 1)[e ? "animate" : "css"]({
                                    left: h + "%"
                                }, f.animate)
                            }
                            if (o === 1) {
                                l.range[e ? "animate" : "css"]({
                                    width: (h - j) + "%"
                                }, {
                                    queue: false,
                                    duration: f.animate
                                })
                            }
                        } else {
                            if (o === 0) {
                                l.range.stop(1, 1)[e ? "animate" : "css"]({
                                    bottom: (h) + "%"
                                }, f.animate)
                            }
                            if (o === 1) {
                                l.range[e ? "animate" : "css"]({
                                    height: (h - j) + "%"
                                }, {
                                    queue: false,
                                    duration: f.animate
                                })
                            }
                        }
                    }
                    j = h
                })
            } else {
                m = this.value();
                k = this._valueMin();
                n = this._valueMax();
                h = (n !== k) ? (m - k) / (n - k) * 100 : 0;
                d[this.orientation === "horizontal" ? "left" : "bottom"] = h + "%";
                this.handle.stop(1, 1)[e ? "animate" : "css"](d, f.animate);
                if (g === "min" && this.orientation === "horizontal") {
                    this.range.stop(1, 1)[e ? "animate" : "css"]({
                        width: h + "%"
                    }, f.animate)
                }
                if (g === "max" && this.orientation === "horizontal") {
                    this.range[e ? "animate" : "css"]({
                        width: (100 - h) + "%"
                    }, {
                        queue: false,
                        duration: f.animate
                    })
                }
                if (g === "min" && this.orientation === "vertical") {
                    this.range.stop(1, 1)[e ? "animate" : "css"]({
                        height: h + "%"
                    }, f.animate)
                }
                if (g === "max" && this.orientation === "vertical") {
                    this.range[e ? "animate" : "css"]({
                        height: (100 - h) + "%"
                    }, {
                        queue: false,
                        duration: f.animate
                    })
                }
            }
        }
    })
}(jQuery));
(function(a, b) {
    a.widget("ui.sortable", a.ui.mouse, {
        version: "1.9.2",
        widgetEventPrefix: "sort",
        ready: false,
        options: {
            appendTo: "parent",
            axis: false,
            connectWith: false,
            containment: false,
            cursor: "auto",
            cursorAt: false,
            dropOnEmpty: true,
            forcePlaceholderSize: false,
            forceHelperSize: false,
            grid: false,
            handle: false,
            helper: "original",
            items: "> *",
            opacity: false,
            placeholder: false,
            revert: false,
            scroll: true,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            scope: "default",
            tolerance: "intersect",
            zIndex: 1000
        },
        _create: function() {
            var c = this.options;
            this.containerCache = {};
            this.element.addClass("ui-sortable");
            this.refresh();
            this.floating = this.items.length ? c.axis === "x" || (/left|right/).test(this.items[0].item.css("float")) || (/inline|table-cell/).test(this.items[0].item.css("display")) : false;
            this.offset = this.element.offset();
            this._mouseInit();
            this.ready = true
        },
        _destroy: function() {
            this.element.removeClass("ui-sortable ui-sortable-disabled");
            this._mouseDestroy();
            for (var c = this.items.length - 1; c >= 0; c--) {
                this.items[c].item.removeData(this.widgetName + "-item")
            }
            return this
        },
        _setOption: function(c, d) {
            if (c === "disabled") {
                this.options[c] = d;
                this.widget().toggleClass("ui-sortable-disabled", !!d)
            } else {
                a.Widget.prototype._setOption.apply(this, arguments)
            }
        },
        _mouseCapture: function(f, g) {
            var e = this;
            if (this.reverting) {
                return false
            }
            if (this.options.disabled || this.options.type == "static") {
                return false
            }
            this._refreshItems(f);
            var d = null,
                c = a(f.target).parents().each(function() {
                    if (a.data(this, e.widgetName + "-item") == e) {
                        d = a(this);
                        return false
                    }
                });
            if (a.data(f.target, e.widgetName + "-item") == e) {
                d = a(f.target)
            }
            if (!d) {
                return false
            }
            if (this.options.handle && !g) {
                var h = false;
                a(this.options.handle, d).find("*").andSelf().each(function() {
                    if (this == f.target) {
                        h = true
                    }
                });
                if (!h) {
                    return false
                }
            }
            this.currentItem = d;
            this._removeCurrentsFromItems();
            return true
        },
        _mouseStart: function(e, f, c) {
            var g = this.options;
            this.currentContainer = this;
            this.refreshPositions();
            this.helper = this._createHelper(e);
            this._cacheHelperProportions();
            this._cacheMargins();
            this.scrollParent = this.helper.scrollParent();
            this.offset = this.currentItem.offset();
            this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            };
            a.extend(this.offset, {
                click: {
                    left: e.pageX - this.offset.left,
                    top: e.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            });
            this.helper.css("position", "absolute");
            this.cssPosition = this.helper.css("position");
            this.originalPosition = this._generatePosition(e);
            this.originalPageX = e.pageX;
            this.originalPageY = e.pageY;
            (g.cursorAt && this._adjustOffsetFromHelper(g.cursorAt));
            this.domPosition = {
                prev: this.currentItem.prev()[0],
                parent: this.currentItem.parent()[0]
            };
            if (this.helper[0] != this.currentItem[0]) {
                this.currentItem.hide()
            }
            this._createPlaceholder();
            if (g.containment) {
                this._setContainment()
            }
            if (g.cursor) {
                if (a("body").css("cursor")) {
                    this._storedCursor = a("body").css("cursor")
                }
                a("body").css("cursor", g.cursor)
            }
            if (g.opacity) {
                if (this.helper.css("opacity")) {
                    this._storedOpacity = this.helper.css("opacity")
                }
                this.helper.css("opacity", g.opacity)
            }
            if (g.zIndex) {
                if (this.helper.css("zIndex")) {
                    this._storedZIndex = this.helper.css("zIndex")
                }
                this.helper.css("zIndex", g.zIndex)
            }
            if (this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML") {
                this.overflowOffset = this.scrollParent.offset()
            }
            this._trigger("start", e, this._uiHash());
            if (!this._preserveHelperProportions) {
                this._cacheHelperProportions()
            }
            if (!c) {
                for (var d = this.containers.length - 1; d >= 0; d--) {
                    this.containers[d]._trigger("activate", e, this._uiHash(this))
                }
            }
            if (a.ui.ddmanager) {
                a.ui.ddmanager.current = this
            }
            if (a.ui.ddmanager && !g.dropBehaviour) {
                a.ui.ddmanager.prepareOffsets(this, e)
            }
            this.dragging = true;
            this.helper.addClass("ui-sortable-helper");
            this._mouseDrag(e);
            return true
        },
        _mouseDrag: function(g) {
            this.position = this._generatePosition(g);
            this.positionAbs = this._convertPositionTo("absolute");
            if (!this.lastPositionAbs) {
                this.lastPositionAbs = this.positionAbs
            }
            if (this.options.scroll) {
                var h = this.options,
                    c = false;
                if (this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML") {
                    if ((this.overflowOffset.top + this.scrollParent[0].offsetHeight) - g.pageY < h.scrollSensitivity) {
                        this.scrollParent[0].scrollTop = c = this.scrollParent[0].scrollTop + h.scrollSpeed
                    } else {
                        if (g.pageY - this.overflowOffset.top < h.scrollSensitivity) {
                            this.scrollParent[0].scrollTop = c = this.scrollParent[0].scrollTop - h.scrollSpeed
                        }
                    }
                    if ((this.overflowOffset.left + this.scrollParent[0].offsetWidth) - g.pageX < h.scrollSensitivity) {
                        this.scrollParent[0].scrollLeft = c = this.scrollParent[0].scrollLeft + h.scrollSpeed
                    } else {
                        if (g.pageX - this.overflowOffset.left < h.scrollSensitivity) {
                            this.scrollParent[0].scrollLeft = c = this.scrollParent[0].scrollLeft - h.scrollSpeed
                        }
                    }
                } else {
                    if (g.pageY - a(document).scrollTop() < h.scrollSensitivity) {
                        c = a(document).scrollTop(a(document).scrollTop() - h.scrollSpeed)
                    } else {
                        if (a(window).height() - (g.pageY - a(document).scrollTop()) < h.scrollSensitivity) {
                            c = a(document).scrollTop(a(document).scrollTop() + h.scrollSpeed)
                        }
                    }
                    if (g.pageX - a(document).scrollLeft() < h.scrollSensitivity) {
                        c = a(document).scrollLeft(a(document).scrollLeft() - h.scrollSpeed)
                    } else {
                        if (a(window).width() - (g.pageX - a(document).scrollLeft()) < h.scrollSensitivity) {
                            c = a(document).scrollLeft(a(document).scrollLeft() + h.scrollSpeed)
                        }
                    }
                }
                if (c !== false && a.ui.ddmanager && !h.dropBehaviour) {
                    a.ui.ddmanager.prepareOffsets(this, g)
                }
            }
            this.positionAbs = this._convertPositionTo("absolute");
            if (!this.options.axis || this.options.axis != "y") {
                this.helper[0].style.left = this.position.left + "px"
            }
            if (!this.options.axis || this.options.axis != "x") {
                this.helper[0].style.top = this.position.top + "px"
            }
            for (var e = this.items.length - 1; e >= 0; e--) {
                var f = this.items[e],
                    d = f.item[0],
                    j = this._intersectsWithPointer(f);
                if (!j) {
                    continue
                }
                if (f.instance !== this.currentContainer) {
                    continue
                }
                if (d != this.currentItem[0] && this.placeholder[j == 1 ? "next" : "prev"]()[0] != d && !a.contains(this.placeholder[0], d) && (this.options.type == "semi-dynamic" ? !a.contains(this.element[0], d) : true)) {
                    this.direction = j == 1 ? "down" : "up";
                    if (this.options.tolerance == "pointer" || this._intersectsWithSides(f)) {
                        this._rearrange(g, f)
                    } else {
                        break
                    }
                    this._trigger("change", g, this._uiHash());
                    break
                }
            }
            this._contactContainers(g);
            if (a.ui.ddmanager) {
                a.ui.ddmanager.drag(this, g)
            }
            this._trigger("sort", g, this._uiHash());
            this.lastPositionAbs = this.positionAbs;
            return false
        },
        _mouseStop: function(d, e) {
            if (!d) {
                return
            }
            if (a.ui.ddmanager && !this.options.dropBehaviour) {
                a.ui.ddmanager.drop(this, d)
            }
            if (this.options.revert) {
                var c = this;
                var f = this.placeholder.offset();
                this.reverting = true;
                a(this.helper).animate({
                    left: f.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollLeft),
                    top: f.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollTop)
                }, parseInt(this.options.revert, 10) || 500, function() {
                    c._clear(d)
                })
            } else {
                this._clear(d, e)
            }
            return false
        },
        cancel: function() {
            if (this.dragging) {
                this._mouseUp({
                    target: null
                });
                if (this.options.helper == "original") {
                    this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")
                } else {
                    this.currentItem.show()
                }
                for (var c = this.containers.length - 1; c >= 0; c--) {
                    this.containers[c]._trigger("deactivate", null, this._uiHash(this));
                    if (this.containers[c].containerCache.over) {
                        this.containers[c]._trigger("out", null, this._uiHash(this));
                        this.containers[c].containerCache.over = 0
                    }
                }
            }
            if (this.placeholder) {
                if (this.placeholder[0].parentNode) {
                    this.placeholder[0].parentNode.removeChild(this.placeholder[0])
                }
                if (this.options.helper != "original" && this.helper && this.helper[0].parentNode) {
                    this.helper.remove()
                }
                a.extend(this, {
                    helper: null,
                    dragging: false,
                    reverting: false,
                    _noFinalSort: null
                });
                if (this.domPosition.prev) {
                    a(this.domPosition.prev).after(this.currentItem)
                } else {
                    a(this.domPosition.parent).prepend(this.currentItem)
                }
            }
            return this
        },
        serialize: function(e) {
            var c = this._getItemsAsjQuery(e && e.connected);
            var d = [];
            e = e || {};
            a(c).each(function() {
                var f = (a(e.item || this).attr(e.attribute || "id") || "").match(e.expression || (/(.+)[-=_](.+)/));
                if (f) {
                    d.push((e.key || f[1] + "[]") + "=" + (e.key && e.expression ? f[1] : f[2]))
                }
            });
            if (!d.length && e.key) {
                d.push(e.key + "=")
            }
            return d.join("&")
        },
        toArray: function(e) {
            var c = this._getItemsAsjQuery(e && e.connected);
            var d = [];
            e = e || {};
            c.each(function() {
                d.push(a(e.item || this).attr(e.attribute || "id") || "")
            });
            return d
        },
        _intersectsWith: function(n) {
            var e = this.positionAbs.left,
                d = e + this.helperProportions.width,
                m = this.positionAbs.top,
                k = m + this.helperProportions.height;
            var f = n.left,
                c = f + n.width,
                o = n.top,
                j = o + n.height;
            var p = this.offset.click.top,
                h = this.offset.click.left;
            var g = (m + p) > o && (m + p) < j && (e + h) > f && (e + h) < c;
            if (this.options.tolerance == "pointer" || this.options.forcePointerForContainers || (this.options.tolerance != "pointer" && this.helperProportions[this.floating ? "width" : "height"] > n[this.floating ? "width" : "height"])) {
                return g
            } else {
                return (f < e + (this.helperProportions.width / 2) && d - (this.helperProportions.width / 2) < c && o < m + (this.helperProportions.height / 2) && k - (this.helperProportions.height / 2) < j)
            }
        },
        _intersectsWithPointer: function(e) {
            var f = (this.options.axis === "x") || a.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, e.top, e.height),
                d = (this.options.axis === "y") || a.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, e.left, e.width),
                h = f && d,
                c = this._getDragVerticalDirection(),
                g = this._getDragHorizontalDirection();
            if (!h) {
                return false
            }
            return this.floating ? (((g && g == "right") || c == "down") ? 2 : 1) : (c && (c == "down" ? 2 : 1))
        },
        _intersectsWithSides: function(f) {
            var d = a.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, f.top + (f.height / 2), f.height),
                e = a.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, f.left + (f.width / 2), f.width),
                c = this._getDragVerticalDirection(),
                g = this._getDragHorizontalDirection();
            if (this.floating && g) {
                return ((g == "right" && e) || (g == "left" && !e))
            } else {
                return c && ((c == "down" && d) || (c == "up" && !d))
            }
        },
        _getDragVerticalDirection: function() {
            var c = this.positionAbs.top - this.lastPositionAbs.top;
            return c != 0 && (c > 0 ? "down" : "up")
        },
        _getDragHorizontalDirection: function() {
            var c = this.positionAbs.left - this.lastPositionAbs.left;
            return c != 0 && (c > 0 ? "right" : "left")
        },
        refresh: function(c) {
            this._refreshItems(c);
            this.refreshPositions();
            return this
        },
        _connectWith: function() {
            var c = this.options;
            return c.connectWith.constructor == String ? [c.connectWith] : c.connectWith
        },
        _getItemsAsjQuery: function(h) {
            var c = [];
            var e = [];
            var g = this._connectWith();
            if (g && h) {
                for (var f = g.length - 1; f >= 0; f--) {
                    var l = a(g[f]);
                    for (var d = l.length - 1; d >= 0; d--) {
                        var k = a.data(l[d], this.widgetName);
                        if (k && k != this && !k.options.disabled) {
                            e.push([a.isFunction(k.options.items) ? k.options.items.call(k.element) : a(k.options.items, k.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), k])
                        }
                    }
                }
            }
            e.push([a.isFunction(this.options.items) ? this.options.items.call(this.element, null, {
                options: this.options,
                item: this.currentItem
            }) : a(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]);
            for (var f = e.length - 1; f >= 0; f--) {
                e[f][0].each(function() {
                    c.push(this)
                })
            }
            return a(c)
        },
        _removeCurrentsFromItems: function() {
            var c = this.currentItem.find(":data(" + this.widgetName + "-item)");
            this.items = a.grep(this.items, function(e) {
                for (var d = 0; d < c.length; d++) {
                    if (c[d] == e.item[0]) {
                        return false
                    }
                }
                return true
            })
        },
        _refreshItems: function(c) {
            this.items = [];
            this.containers = [this];
            var k = this.items;
            var g = [
                [a.isFunction(this.options.items) ? this.options.items.call(this.element[0], c, {
                    item: this.currentItem
                }) : a(this.options.items, this.element), this]
            ];
            var m = this._connectWith();
            if (m && this.ready) {
                for (var f = m.length - 1; f >= 0; f--) {
                    var n = a(m[f]);
                    for (var e = n.length - 1; e >= 0; e--) {
                        var h = a.data(n[e], this.widgetName);
                        if (h && h != this && !h.options.disabled) {
                            g.push([a.isFunction(h.options.items) ? h.options.items.call(h.element[0], c, {
                                item: this.currentItem
                            }) : a(h.options.items, h.element), h]);
                            this.containers.push(h)
                        }
                    }
                }
            }
            for (var f = g.length - 1; f >= 0; f--) {
                var l = g[f][1];
                var d = g[f][0];
                for (var e = 0, o = d.length; e < o; e++) {
                    var p = a(d[e]);
                    p.data(this.widgetName + "-item", l);
                    k.push({
                        item: p,
                        instance: l,
                        width: 0,
                        height: 0,
                        left: 0,
                        top: 0
                    })
                }
            }
        },
        refreshPositions: function(c) {
            if (this.offsetParent && this.helper) {
                this.offset.parent = this._getParentOffset()
            }
            for (var e = this.items.length - 1; e >= 0; e--) {
                var f = this.items[e];
                if (f.instance != this.currentContainer && this.currentContainer && f.item[0] != this.currentItem[0]) {
                    continue
                }
                var d = this.options.toleranceElement ? a(this.options.toleranceElement, f.item) : f.item;
                if (!c) {
                    f.width = d.outerWidth();
                    f.height = d.outerHeight()
                }
                var g = d.offset();
                f.left = g.left;
                f.top = g.top
            }
            if (this.options.custom && this.options.custom.refreshContainers) {
                this.options.custom.refreshContainers.call(this)
            } else {
                for (var e = this.containers.length - 1; e >= 0; e--) {
                    var g = this.containers[e].element.offset();
                    this.containers[e].containerCache.left = g.left;
                    this.containers[e].containerCache.top = g.top;
                    this.containers[e].containerCache.width = this.containers[e].element.outerWidth();
                    this.containers[e].containerCache.height = this.containers[e].element.outerHeight()
                }
            }
            return this
        },
        _createPlaceholder: function(d) {
            d = d || this;
            var e = d.options;
            if (!e.placeholder || e.placeholder.constructor == String) {
                var c = e.placeholder;
                e.placeholder = {
                    element: function() {
                        var f = a(document.createElement(d.currentItem[0].nodeName)).addClass(c || d.currentItem[0].className + " ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];
                        if (!c) {
                            f.style.visibility = "hidden"
                        }
                        return f
                    },
                    update: function(f, g) {
                        if (c && !e.forcePlaceholderSize) {
                            return
                        }
                        if (!g.height()) {
                            g.height(d.currentItem.innerHeight() - parseInt(d.currentItem.css("paddingTop") || 0, 10) - parseInt(d.currentItem.css("paddingBottom") || 0, 10))
                        }
                        if (!g.width()) {
                            g.width(d.currentItem.innerWidth() - parseInt(d.currentItem.css("paddingLeft") || 0, 10) - parseInt(d.currentItem.css("paddingRight") || 0, 10))
                        }
                    }
                }
            }
            d.placeholder = a(e.placeholder.element.call(d.element, d.currentItem));
            d.currentItem.after(d.placeholder);
            e.placeholder.update(d, d.placeholder)
        },
        _contactContainers: function(c) {
            var e = null,
                n = null;
            for (var h = this.containers.length - 1; h >= 0; h--) {
                if (a.contains(this.currentItem[0], this.containers[h].element[0])) {
                    continue
                }
                if (this._intersectsWith(this.containers[h].containerCache)) {
                    if (e && a.contains(this.containers[h].element[0], e.element[0])) {
                        continue
                    }
                    e = this.containers[h];
                    n = h
                } else {
                    if (this.containers[h].containerCache.over) {
                        this.containers[h]._trigger("out", c, this._uiHash(this));
                        this.containers[h].containerCache.over = 0
                    }
                }
            }
            if (!e) {
                return
            }
            if (this.containers.length === 1) {
                this.containers[n]._trigger("over", c, this._uiHash(this));
                this.containers[n].containerCache.over = 1
            } else {
                var m = 10000;
                var k = null;
                var l = this.containers[n].floating ? "left" : "top";
                var o = this.containers[n].floating ? "width" : "height";
                var d = this.positionAbs[l] + this.offset.click[l];
                for (var f = this.items.length - 1; f >= 0; f--) {
                    if (!a.contains(this.containers[n].element[0], this.items[f].item[0])) {
                        continue
                    }
                    if (this.items[f].item[0] == this.currentItem[0]) {
                        continue
                    }
                    var p = this.items[f].item.offset()[l];
                    var g = false;
                    if (Math.abs(p - d) > Math.abs(p + this.items[f][o] - d)) {
                        g = true;
                        p += this.items[f][o]
                    }
                    if (Math.abs(p - d) < m) {
                        m = Math.abs(p - d);
                        k = this.items[f];
                        this.direction = g ? "up" : "down"
                    }
                }
                if (!k && !this.options.dropOnEmpty) {
                    return
                }
                this.currentContainer = this.containers[n];
                k ? this._rearrange(c, k, null, true) : this._rearrange(c, null, this.containers[n].element, true);
                this._trigger("change", c, this._uiHash());
                this.containers[n]._trigger("change", c, this._uiHash(this));
                this.options.placeholder.update(this.currentContainer, this.placeholder);
                this.containers[n]._trigger("over", c, this._uiHash(this));
                this.containers[n].containerCache.over = 1
            }
        },
        _createHelper: function(d) {
            var e = this.options;
            var c = a.isFunction(e.helper) ? a(e.helper.apply(this.element[0], [d, this.currentItem])) : (e.helper == "clone" ? this.currentItem.clone() : this.currentItem);
            if (!c.parents("body").length) {
                a(e.appendTo != "parent" ? e.appendTo : this.currentItem[0].parentNode)[0].appendChild(c[0])
            }
            if (c[0] == this.currentItem[0]) {
                this._storedCSS = {
                    width: this.currentItem[0].style.width,
                    height: this.currentItem[0].style.height,
                    position: this.currentItem.css("position"),
                    top: this.currentItem.css("top"),
                    left: this.currentItem.css("left")
                }
            }
            if (c[0].style.width == "" || e.forceHelperSize) {
                c.width(this.currentItem.width())
            }
            if (c[0].style.height == "" || e.forceHelperSize) {
                c.height(this.currentItem.height())
            }
            return c
        },
        _adjustOffsetFromHelper: function(c) {
            if (typeof c == "string") {
                c = c.split(" ")
            }
            if (a.isArray(c)) {
                c = {
                    left: +c[0],
                    top: +c[1] || 0
                }
            }
            if ("left" in c) {
                this.offset.click.left = c.left + this.margins.left
            }
            if ("right" in c) {
                this.offset.click.left = this.helperProportions.width - c.right + this.margins.left
            }
            if ("top" in c) {
                this.offset.click.top = c.top + this.margins.top
            }
            if ("bottom" in c) {
                this.offset.click.top = this.helperProportions.height - c.bottom + this.margins.top
            }
        },
        _getParentOffset: function() {
            this.offsetParent = this.helper.offsetParent();
            var c = this.offsetParent.offset();
            if (this.cssPosition == "absolute" && this.scrollParent[0] != document && a.contains(this.scrollParent[0], this.offsetParent[0])) {
                c.left += this.scrollParent.scrollLeft();
                c.top += this.scrollParent.scrollTop()
            }
            if ((this.offsetParent[0] == document.body) || (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && a.ui.ie)) {
                c = {
                    top: 0,
                    left: 0
                }
            }
            return {
                top: c.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: c.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function() {
            if (this.cssPosition == "relative") {
                var c = this.currentItem.position();
                return {
                    top: c.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: c.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                }
            } else {
                return {
                    top: 0,
                    left: 0
                }
            }
        },
        _cacheMargins: function() {
            this.margins = {
                left: (parseInt(this.currentItem.css("marginLeft"), 10) || 0),
                top: (parseInt(this.currentItem.css("marginTop"), 10) || 0)
            }
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function() {
            var f = this.options;
            if (f.containment == "parent") {
                f.containment = this.helper[0].parentNode
            }
            if (f.containment == "document" || f.containment == "window") {
                this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, a(f.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (a(f.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]
            }
            if (!(/^(document|window|parent)$/).test(f.containment)) {
                var d = a(f.containment)[0];
                var e = a(f.containment).offset();
                var c = (a(d).css("overflow") != "hidden");
                this.containment = [e.left + (parseInt(a(d).css("borderLeftWidth"), 10) || 0) + (parseInt(a(d).css("paddingLeft"), 10) || 0) - this.margins.left, e.top + (parseInt(a(d).css("borderTopWidth"), 10) || 0) + (parseInt(a(d).css("paddingTop"), 10) || 0) - this.margins.top, e.left + (c ? Math.max(d.scrollWidth, d.offsetWidth) : d.offsetWidth) - (parseInt(a(d).css("borderLeftWidth"), 10) || 0) - (parseInt(a(d).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, e.top + (c ? Math.max(d.scrollHeight, d.offsetHeight) : d.offsetHeight) - (parseInt(a(d).css("borderTopWidth"), 10) || 0) - (parseInt(a(d).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top]
            }
        },
        _convertPositionTo: function(g, j) {
            if (!j) {
                j = this.position
            }
            var e = g == "absolute" ? 1 : -1;
            var f = this.options,
                c = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                h = (/(html|body)/i).test(c[0].tagName);
            return {
                top: (j.top + this.offset.relative.top * e + this.offset.parent.top * e - ((this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : (h ? 0 : c.scrollTop())) * e)),
                left: (j.left + this.offset.relative.left * e + this.offset.parent.left * e - ((this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : h ? 0 : c.scrollLeft()) * e))
            }
        },
        _generatePosition: function(f) {
            var j = this.options,
                c = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                k = (/(html|body)/i).test(c[0].tagName);
            if (this.cssPosition == "relative" && !(this.scrollParent[0] != document && this.scrollParent[0] != this.offsetParent[0])) {
                this.offset.relative = this._getRelativeOffset()
            }
            var e = f.pageX;
            var d = f.pageY;
            if (this.originalPosition) {
                if (this.containment) {
                    if (f.pageX - this.offset.click.left < this.containment[0]) {
                        e = this.containment[0] + this.offset.click.left
                    }
                    if (f.pageY - this.offset.click.top < this.containment[1]) {
                        d = this.containment[1] + this.offset.click.top
                    }
                    if (f.pageX - this.offset.click.left > this.containment[2]) {
                        e = this.containment[2] + this.offset.click.left
                    }
                    if (f.pageY - this.offset.click.top > this.containment[3]) {
                        d = this.containment[3] + this.offset.click.top
                    }
                }
                if (j.grid) {
                    var h = this.originalPageY + Math.round((d - this.originalPageY) / j.grid[1]) * j.grid[1];
                    d = this.containment ? (!(h - this.offset.click.top < this.containment[1] || h - this.offset.click.top > this.containment[3]) ? h : (!(h - this.offset.click.top < this.containment[1]) ? h - j.grid[1] : h + j.grid[1])) : h;
                    var g = this.originalPageX + Math.round((e - this.originalPageX) / j.grid[0]) * j.grid[0];
                    e = this.containment ? (!(g - this.offset.click.left < this.containment[0] || g - this.offset.click.left > this.containment[2]) ? g : (!(g - this.offset.click.left < this.containment[0]) ? g - j.grid[0] : g + j.grid[0])) : g
                }
            }
            return {
                top: (d - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ((this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : (k ? 0 : c.scrollTop())))),
                left: (e - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ((this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : k ? 0 : c.scrollLeft())))
            }
        },
        _rearrange: function(g, f, d, e) {
            d ? d[0].appendChild(this.placeholder[0]) : f.item[0].parentNode.insertBefore(this.placeholder[0], (this.direction == "down" ? f.item[0] : f.item[0].nextSibling));
            this.counter = this.counter ? ++this.counter : 1;
            var c = this.counter;
            this._delay(function() {
                if (c == this.counter) {
                    this.refreshPositions(!e)
                }
            })
        },
        _clear: function(d, e) {
            this.reverting = false;
            var f = [];
            if (!this._noFinalSort && this.currentItem.parent().length) {
                this.placeholder.before(this.currentItem)
            }
            this._noFinalSort = null;
            if (this.helper[0] == this.currentItem[0]) {
                for (var c in this._storedCSS) {
                    if (this._storedCSS[c] == "auto" || this._storedCSS[c] == "static") {
                        this._storedCSS[c] = ""
                    }
                }
                this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")
            } else {
                this.currentItem.show()
            }
            if (this.fromOutside && !e) {
                f.push(function(g) {
                    this._trigger("receive", g, this._uiHash(this.fromOutside))
                })
            }
            if ((this.fromOutside || this.domPosition.prev != this.currentItem.prev().not(".ui-sortable-helper")[0] || this.domPosition.parent != this.currentItem.parent()[0]) && !e) {
                f.push(function(g) {
                    this._trigger("update", g, this._uiHash())
                })
            }
            if (this !== this.currentContainer) {
                if (!e) {
                    f.push(function(g) {
                        this._trigger("remove", g, this._uiHash())
                    });
                    f.push((function(g) {
                        return function(h) {
                            g._trigger("receive", h, this._uiHash(this))
                        }
                    }).call(this, this.currentContainer));
                    f.push((function(g) {
                        return function(h) {
                            g._trigger("update", h, this._uiHash(this))
                        }
                    }).call(this, this.currentContainer))
                }
            }
            for (var c = this.containers.length - 1; c >= 0; c--) {
                if (!e) {
                    f.push((function(g) {
                        return function(h) {
                            g._trigger("deactivate", h, this._uiHash(this))
                        }
                    }).call(this, this.containers[c]))
                }
                if (this.containers[c].containerCache.over) {
                    f.push((function(g) {
                        return function(h) {
                            g._trigger("out", h, this._uiHash(this))
                        }
                    }).call(this, this.containers[c]));
                    this.containers[c].containerCache.over = 0
                }
            }
            if (this._storedCursor) {
                a("body").css("cursor", this._storedCursor)
            }
            if (this._storedOpacity) {
                this.helper.css("opacity", this._storedOpacity)
            }
            if (this._storedZIndex) {
                this.helper.css("zIndex", this._storedZIndex == "auto" ? "" : this._storedZIndex)
            }
            this.dragging = false;
            if (this.cancelHelperRemoval) {
                if (!e) {
                    this._trigger("beforeStop", d, this._uiHash());
                    for (var c = 0; c < f.length; c++) {
                        f[c].call(this, d)
                    }
                    this._trigger("stop", d, this._uiHash())
                }
                this.fromOutside = false;
                return false
            }
            if (!e) {
                this._trigger("beforeStop", d, this._uiHash())
            }
            this.placeholder[0].parentNode.removeChild(this.placeholder[0]);
            if (this.helper[0] != this.currentItem[0]) {
                this.helper.remove()
            }
            this.helper = null;
            if (!e) {
                for (var c = 0; c < f.length; c++) {
                    f[c].call(this, d)
                }
                this._trigger("stop", d, this._uiHash())
            }
            this.fromOutside = false;
            return true
        },
        _trigger: function() {
            if (a.Widget.prototype._trigger.apply(this, arguments) === false) {
                this.cancel()
            }
        },
        _uiHash: function(c) {
            var d = c || this;
            return {
                helper: d.helper,
                placeholder: d.placeholder || a([]),
                position: d.position,
                originalPosition: d.originalPosition,
                offset: d.positionAbs,
                item: d.currentItem,
                sender: c ? c.element : null
            }
        }
    })
})(jQuery);
(function(b) {
    function a(c) {
        return function() {
            var d = this.element.val();
            c.apply(this, arguments);
            this._refresh();
            if (d !== this.element.val()) {
                this._trigger("change")
            }
        }
    }
    b.widget("ui.spinner", {
        version: "1.9.2",
        defaultElement: "<input>",
        widgetEventPrefix: "spin",
        options: {
            culture: null,
            icons: {
                down: "ui-icon-triangle-1-s",
                up: "ui-icon-triangle-1-n"
            },
            incremental: true,
            max: null,
            min: null,
            numberFormat: null,
            page: 10,
            step: 1,
            change: null,
            spin: null,
            start: null,
            stop: null
        },
        _create: function() {
            this._setOption("max", this.options.max);
            this._setOption("min", this.options.min);
            this._setOption("step", this.options.step);
            this._value(this.element.val(), true);
            this._draw();
            this._on(this._events);
            this._refresh();
            this._on(this.window, {
                beforeunload: function() {
                    this.element.removeAttr("autocomplete")
                }
            })
        },
        _getCreateOptions: function() {
            var c = {},
                d = this.element;
            b.each(["min", "max", "step"], function(e, f) {
                var g = d.attr(f);
                if (g !== undefined && g.length) {
                    c[f] = g
                }
            });
            return c
        },
        _events: {
            keydown: function(c) {
                if (this._start(c) && this._keydown(c)) {
                    c.preventDefault()
                }
            },
            keyup: "_stop",
            focus: function() {
                this.previous = this.element.val()
            },
            blur: function(c) {
                if (this.cancelBlur) {
                    delete this.cancelBlur;
                    return
                }
                this._refresh();
                if (this.previous !== this.element.val()) {
                    this._trigger("change", c)
                }
            },
            mousewheel: function(c, d) {
                if (!d) {
                    return
                }
                if (!this.spinning && !this._start(c)) {
                    return false
                }
                this._spin((d > 0 ? 1 : -1) * this.options.step, c);
                clearTimeout(this.mousewheelTimer);
                this.mousewheelTimer = this._delay(function() {
                    if (this.spinning) {
                        this._stop(c)
                    }
                }, 100);
                c.preventDefault()
            },
            "mousedown .ui-spinner-button": function(d) {
                var c;
                c = this.element[0] === this.document[0].activeElement ? this.previous : this.element.val();

                function e() {
                    var f = this.element[0] === this.document[0].activeElement;
                    if (!f) {
                        this.element.focus();
                        this.previous = c;
                        this._delay(function() {
                            this.previous = c
                        })
                    }
                }
                d.preventDefault();
                e.call(this);
                this.cancelBlur = true;
                this._delay(function() {
                    delete this.cancelBlur;
                    e.call(this)
                });
                if (this._start(d) === false) {
                    return
                }
                this._repeat(null, b(d.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, d)
            },
            "mouseup .ui-spinner-button": "_stop",
            "mouseenter .ui-spinner-button": function(c) {
                if (!b(c.currentTarget).hasClass("ui-state-active")) {
                    return
                }
                if (this._start(c) === false) {
                    return false
                }
                this._repeat(null, b(c.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, c)
            },
            "mouseleave .ui-spinner-button": "_stop"
        },
        _draw: function() {
            var c = this.uiSpinner = this.element.addClass("ui-spinner-input").attr("autocomplete", "off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());
            this.element.attr("role", "spinbutton");
            this.buttons = c.find(".ui-spinner-button").attr("tabIndex", -1).button().removeClass("ui-corner-all");
            if (this.buttons.height() > Math.ceil(c.height() * 0.5) && c.height() > 0) {
                c.height(c.height())
            }
            if (this.options.disabled) {
                this.disable()
            }
        },
        _keydown: function(d) {
            var c = this.options,
                e = b.ui.keyCode;
            switch (d.keyCode) {
                case e.UP:
                    this._repeat(null, 1, d);
                    return true;
                case e.DOWN:
                    this._repeat(null, -1, d);
                    return true;
                case e.PAGE_UP:
                    this._repeat(null, c.page, d);
                    return true;
                case e.PAGE_DOWN:
                    this._repeat(null, -c.page, d);
                    return true
            }
            return false
        },
        _uiSpinnerHtml: function() {
            return "<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>"
        },
        _buttonHtml: function() {
            return "<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon " + this.options.icons.up + "'>&#9650;</span></a><a class='ui-spinner-button ui-spinner-down ui-corner-br'><span class='ui-icon " + this.options.icons.down + "'>&#9660;</span></a>"
        },
        _start: function(c) {
            if (!this.spinning && this._trigger("start", c) === false) {
                return false
            }
            if (!this.counter) {
                this.counter = 1
            }
            this.spinning = true;
            return true
        },
        _repeat: function(d, c, e) {
            d = d || 500;
            clearTimeout(this.timer);
            this.timer = this._delay(function() {
                this._repeat(40, c, e)
            }, d);
            this._spin(c * this.options.step, e)
        },
        _spin: function(d, c) {
            var e = this.value() || 0;
            if (!this.counter) {
                this.counter = 1
            }
            e = this._adjustValue(e + d * this._increment(this.counter));
            if (!this.spinning || this._trigger("spin", c, {
                    value: e
                }) !== false) {
                this._value(e);
                this.counter++
            }
        },
        _increment: function(c) {
            var d = this.options.incremental;
            if (d) {
                return b.isFunction(d) ? d(c) : Math.floor(c * c * c / 50000 - c * c / 500 + 17 * c / 200 + 1)
            }
            return 1
        },
        _precision: function() {
            var c = this._precisionOf(this.options.step);
            if (this.options.min !== null) {
                c = Math.max(c, this._precisionOf(this.options.min))
            }
            return c
        },
        _precisionOf: function(d) {
            var e = d.toString(),
                c = e.indexOf(".");
            return c === -1 ? 0 : e.length - c - 1
        },
        _adjustValue: function(e) {
            var d, f, c = this.options;
            d = c.min !== null ? c.min : 0;
            f = e - d;
            f = Math.round(f / c.step) * c.step;
            e = d + f;
            e = parseFloat(e.toFixed(this._precision()));
            if (c.max !== null && e > c.max) {
                return c.max
            }
            if (c.min !== null && e < c.min) {
                return c.min
            }
            return e
        },
        _stop: function(c) {
            if (!this.spinning) {
                return
            }
            clearTimeout(this.timer);
            clearTimeout(this.mousewheelTimer);
            this.counter = 0;
            this.spinning = false;
            this._trigger("stop", c)
        },
        _setOption: function(c, d) {
            if (c === "culture" || c === "numberFormat") {
                var e = this._parse(this.element.val());
                this.options[c] = d;
                this.element.val(this._format(e));
                return
            }
            if (c === "max" || c === "min" || c === "step") {
                if (typeof d === "string") {
                    d = this._parse(d)
                }
            }
            this._super(c, d);
            if (c === "disabled") {
                if (d) {
                    this.element.prop("disabled", true);
                    this.buttons.button("disable")
                } else {
                    this.element.prop("disabled", false);
                    this.buttons.button("enable")
                }
            }
        },
        _setOptions: a(function(c) {
            this._super(c);
            this._value(this.element.val())
        }),
        _parse: function(c) {
            if (typeof c === "string" && c !== "") {
                c = window.Globalize && this.options.numberFormat ? Globalize.parseFloat(c, 10, this.options.culture) : +c
            }
            return c === "" || isNaN(c) ? null : c
        },
        _format: function(c) {
            if (c === "") {
                return ""
            }
            return window.Globalize && this.options.numberFormat ? Globalize.format(c, this.options.numberFormat, this.options.culture) : c
        },
        _refresh: function() {
            this.element.attr({
                "aria-valuemin": this.options.min,
                "aria-valuemax": this.options.max,
                "aria-valuenow": this._parse(this.element.val())
            })
        },
        _value: function(e, c) {
            var d;
            if (e !== "") {
                d = this._parse(e);
                if (d !== null) {
                    if (!c) {
                        d = this._adjustValue(d)
                    }
                    e = this._format(d)
                }
            }
            this.element.val(e);
            this._refresh()
        },
        _destroy: function() {
            this.element.removeClass("ui-spinner-input").prop("disabled", false).removeAttr("autocomplete").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow");
            this.uiSpinner.replaceWith(this.element)
        },
        stepUp: a(function(c) {
            this._stepUp(c)
        }),
        _stepUp: function(c) {
            this._spin((c || 1) * this.options.step)
        },
        stepDown: a(function(c) {
            this._stepDown(c)
        }),
        _stepDown: function(c) {
            this._spin((c || 1) * -this.options.step)
        },
        pageUp: a(function(c) {
            this._stepUp((c || 1) * this.options.page)
        }),
        pageDown: a(function(c) {
            this._stepDown((c || 1) * this.options.page)
        }),
        value: function(c) {
            if (!arguments.length) {
                return this._parse(this.element.val())
            }
            a(this._value).call(this, c)
        },
        widget: function() {
            return this.uiSpinner
        }
    })
}(jQuery));
(function(c, e) {
    var a = 0,
        f = /#.*$/;

    function d() {
        return ++a
    }

    function b(g) {
        return g.hash.length > 1 && g.href.replace(f, "") === location.href.replace(f, "").replace(/\s/g, "%20")
    }
    c.widget("ui.tabs", {
        version: "1.9.2",
        delay: 300,
        options: {
            active: null,
            collapsible: false,
            event: "click",
            heightStyle: "content",
            hide: null,
            show: null,
            activate: null,
            beforeActivate: null,
            beforeLoad: null,
            load: null
        },
        _create: function() {
            var h = this,
                g = this.options,
                j = g.active,
                k = location.hash.substring(1);
            this.running = false;
            this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all").toggleClass("ui-tabs-collapsible", g.collapsible).delegate(".ui-tabs-nav > li", "mousedown" + this.eventNamespace, function(l) {
                if (c(this).is(".ui-state-disabled")) {
                    l.preventDefault()
                }
            }).delegate(".ui-tabs-anchor", "focus" + this.eventNamespace, function() {
                if (c(this).closest("li").is(".ui-state-disabled")) {
                    this.blur()
                }
            });
            this._processTabs();
            if (j === null) {
                if (k) {
                    this.tabs.each(function(l, m) {
                        if (c(m).attr("aria-controls") === k) {
                            j = l;
                            return false
                        }
                    })
                }
                if (j === null) {
                    j = this.tabs.index(this.tabs.filter(".ui-tabs-active"))
                }
                if (j === null || j === -1) {
                    j = this.tabs.length ? 0 : false
                }
            }
            if (j !== false) {
                j = this.tabs.index(this.tabs.eq(j));
                if (j === -1) {
                    j = g.collapsible ? false : 0
                }
            }
            g.active = j;
            if (!g.collapsible && g.active === false && this.anchors.length) {
                g.active = 0
            }
            if (c.isArray(g.disabled)) {
                g.disabled = c.unique(g.disabled.concat(c.map(this.tabs.filter(".ui-state-disabled"), function(l) {
                    return h.tabs.index(l)
                }))).sort()
            }
            if (this.options.active !== false && this.anchors.length) {
                this.active = this._findActive(this.options.active)
            } else {
                this.active = c()
            }
            this._refresh();
            if (this.active.length) {
                this.load(g.active)
            }
        },
        _getCreateEventData: function() {
            return {
                tab: this.active,
                panel: !this.active.length ? c() : this._getPanelForTab(this.active)
            }
        },
        _tabKeydown: function(j) {
            var h = c(this.document[0].activeElement).closest("li"),
                g = this.tabs.index(h),
                k = true;
            if (this._handlePageNav(j)) {
                return
            }
            switch (j.keyCode) {
                case c.ui.keyCode.RIGHT:
                case c.ui.keyCode.DOWN:
                    g++;
                    break;
                case c.ui.keyCode.UP:
                case c.ui.keyCode.LEFT:
                    k = false;
                    g--;
                    break;
                case c.ui.keyCode.END:
                    g = this.anchors.length - 1;
                    break;
                case c.ui.keyCode.HOME:
                    g = 0;
                    break;
                case c.ui.keyCode.SPACE:
                    j.preventDefault();
                    clearTimeout(this.activating);
                    this._activate(g);
                    return;
                case c.ui.keyCode.ENTER:
                    j.preventDefault();
                    clearTimeout(this.activating);
                    this._activate(g === this.options.active ? false : g);
                    return;
                default:
                    return
            }
            j.preventDefault();
            clearTimeout(this.activating);
            g = this._focusNextTab(g, k);
            if (!j.ctrlKey) {
                h.attr("aria-selected", "false");
                this.tabs.eq(g).attr("aria-selected", "true");
                this.activating = this._delay(function() {
                    this.option("active", g)
                }, this.delay)
            }
        },
        _panelKeydown: function(g) {
            if (this._handlePageNav(g)) {
                return
            }
            if (g.ctrlKey && g.keyCode === c.ui.keyCode.UP) {
                g.preventDefault();
                this.active.focus()
            }
        },
        _handlePageNav: function(g) {
            if (g.altKey && g.keyCode === c.ui.keyCode.PAGE_UP) {
                this._activate(this._focusNextTab(this.options.active - 1, false));
                return true
            }
            if (g.altKey && g.keyCode === c.ui.keyCode.PAGE_DOWN) {
                this._activate(this._focusNextTab(this.options.active + 1, true));
                return true
            }
        },
        _findNextTab: function(h, j) {
            var g = this.tabs.length - 1;

            function k() {
                if (h > g) {
                    h = 0
                }
                if (h < 0) {
                    h = g
                }
                return h
            }
            while (c.inArray(k(), this.options.disabled) !== -1) {
                h = j ? h + 1 : h - 1
            }
            return h
        },
        _focusNextTab: function(g, h) {
            g = this._findNextTab(g, h);
            this.tabs.eq(g).focus();
            return g
        },
        _setOption: function(g, h) {
            if (g === "active") {
                this._activate(h);
                return
            }
            if (g === "disabled") {
                this._setupDisabled(h);
                return
            }
            this._super(g, h);
            if (g === "collapsible") {
                this.element.toggleClass("ui-tabs-collapsible", h);
                if (!h && this.options.active === false) {
                    this._activate(0)
                }
            }
            if (g === "event") {
                this._setupEvents(h)
            }
            if (g === "heightStyle") {
                this._setupHeightStyle(h)
            }
        },
        _tabId: function(g) {
            return g.attr("aria-controls") || "ui-tabs-" + d()
        },
        _sanitizeSelector: function(g) {
            return g ? g.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&") : ""
        },
        refresh: function() {
            var h = this.options,
                g = this.tablist.children(":has(a[href])");
            h.disabled = c.map(g.filter(".ui-state-disabled"), function(j) {
                return g.index(j)
            });
            this._processTabs();
            if (h.active === false || !this.anchors.length) {
                h.active = false;
                this.active = c()
            } else {
                if (this.active.length && !c.contains(this.tablist[0], this.active[0])) {
                    if (this.tabs.length === h.disabled.length) {
                        h.active = false;
                        this.active = c()
                    } else {
                        this._activate(this._findNextTab(Math.max(0, h.active - 1), false))
                    }
                } else {
                    h.active = this.tabs.index(this.active)
                }
            }
            this._refresh()
        },
        _refresh: function() {
            this._setupDisabled(this.options.disabled);
            this._setupEvents(this.options.event);
            this._setupHeightStyle(this.options.heightStyle);
            this.tabs.not(this.active).attr({
                "aria-selected": "false",
                tabIndex: -1
            });
            this.panels.not(this._getPanelForTab(this.active)).hide().attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            });
            if (!this.active.length) {
                this.tabs.eq(0).attr("tabIndex", 0)
            } else {
                this.active.addClass("ui-tabs-active ui-state-active").attr({
                    "aria-selected": "true",
                    tabIndex: 0
                });
                this._getPanelForTab(this.active).show().attr({
                    "aria-expanded": "true",
                    "aria-hidden": "false"
                })
            }
        },
        _processTabs: function() {
            var g = this;
            this.tablist = this._getList().addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").attr("role", "tablist");
            this.tabs = this.tablist.find("> li:has(a[href])").addClass("ui-state-default ui-corner-top").attr({
                role: "tab",
                tabIndex: -1
            });
            this.anchors = this.tabs.map(function() {
                return c("a", this)[0]
            }).addClass("ui-tabs-anchor").attr({
                role: "presentation",
                tabIndex: -1
            });
            this.panels = c();
            this.anchors.each(function(n, l) {
                var h, j, m, k = c(l).uniqueId().attr("id"),
                    o = c(l).closest("li"),
                    p = o.attr("aria-controls");
                if (b(l)) {
                    h = l.hash;
                    j = g.element.find(g._sanitizeSelector(h))
                } else {
                    m = g._tabId(o);
                    h = "#" + m;
                    j = g.element.find(h);
                    if (!j.length) {
                        j = g._createPanel(m);
                        j.insertAfter(g.panels[n - 1] || g.tablist)
                    }
                    j.attr("aria-live", "polite")
                }
                if (j.length) {
                    g.panels = g.panels.add(j)
                }
                if (p) {
                    o.data("ui-tabs-aria-controls", p)
                }
                o.attr({
                    "aria-controls": h.substring(1),
                    "aria-labelledby": k
                });
                j.attr("aria-labelledby", k)
            });
            this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").attr("role", "tabpanel")
        },
        _getList: function() {
            return this.element.find("ol,ul").eq(0)
        },
        _createPanel: function(g) {
            return c("<div>").attr("id", g).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy", true)
        },
        _setupDisabled: function(j) {
            if (c.isArray(j)) {
                if (!j.length) {
                    j = false
                } else {
                    if (j.length === this.anchors.length) {
                        j = true
                    }
                }
            }
            for (var h = 0, g;
                (g = this.tabs[h]); h++) {
                if (j === true || c.inArray(h, j) !== -1) {
                    c(g).addClass("ui-state-disabled").attr("aria-disabled", "true")
                } else {
                    c(g).removeClass("ui-state-disabled").removeAttr("aria-disabled")
                }
            }
            this.options.disabled = j
        },
        _setupEvents: function(h) {
            var g = {
                click: function(j) {
                    j.preventDefault()
                }
            };
            if (h) {
                c.each(h.split(" "), function(k, j) {
                    g[j] = "_eventHandler"
                })
            }
            this._off(this.anchors.add(this.tabs).add(this.panels));
            this._on(this.anchors, g);
            this._on(this.tabs, {
                keydown: "_tabKeydown"
            });
            this._on(this.panels, {
                keydown: "_panelKeydown"
            });
            this._focusable(this.tabs);
            this._hoverable(this.tabs)
        },
        _setupHeightStyle: function(g) {
            var j, k, h = this.element.parent();
            if (g === "fill") {
                if (!c.support.minHeight) {
                    k = h.css("overflow");
                    h.css("overflow", "hidden")
                }
                j = h.height();
                this.element.siblings(":visible").each(function() {
                    var m = c(this),
                        l = m.css("position");
                    if (l === "absolute" || l === "fixed") {
                        return
                    }
                    j -= m.outerHeight(true)
                });
                if (k) {
                    h.css("overflow", k)
                }
                this.element.children().not(this.panels).each(function() {
                    j -= c(this).outerHeight(true)
                });
                this.panels.each(function() {
                    c(this).height(Math.max(0, j - c(this).innerHeight() + c(this).height()))
                }).css("overflow", "auto")
            } else {
                if (g === "auto") {
                    j = 0;
                    this.panels.each(function() {
                        j = Math.max(j, c(this).height("").height())
                    }).height(j)
                }
            }
        },
        _eventHandler: function(g) {
            var q = this.options,
                l = this.active,
                m = c(g.currentTarget),
                k = m.closest("li"),
                o = k[0] === l[0],
                h = o && q.collapsible,
                j = h ? c() : this._getPanelForTab(k),
                n = !l.length ? c() : this._getPanelForTab(l),
                p = {
                    oldTab: l,
                    oldPanel: n,
                    newTab: h ? c() : k,
                    newPanel: j
                };
            g.preventDefault();
            if (k.hasClass("ui-state-disabled") || k.hasClass("ui-tabs-loading") || this.running || (o && !q.collapsible) || (this._trigger("beforeActivate", g, p) === false)) {
                return
            }
            q.active = h ? false : this.tabs.index(k);
            this.active = o ? c() : k;
            if (this.xhr) {
                this.xhr.abort()
            }
            if (!n.length && !j.length) {
                c.error("jQuery UI Tabs: Mismatching fragment identifier.")
            }
            if (j.length) {
                this.load(this.tabs.index(k), g)
            }
            this._toggle(g, p)
        },
        _toggle: function(n, m) {
            var l = this,
                g = m.newPanel,
                k = m.oldPanel;
            this.running = true;

            function j() {
                l.running = false;
                l._trigger("activate", n, m)
            }

            function h() {
                m.newTab.closest("li").addClass("ui-tabs-active ui-state-active");
                if (g.length && l.options.show) {
                    l._show(g, l.options.show, j)
                } else {
                    g.show();
                    j()
                }
            }
            if (k.length && this.options.hide) {
                this._hide(k, this.options.hide, function() {
                    m.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active");
                    h()
                })
            } else {
                m.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active");
                k.hide();
                h()
            }
            k.attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            });
            m.oldTab.attr("aria-selected", "false");
            if (g.length && k.length) {
                m.oldTab.attr("tabIndex", -1)
            } else {
                if (g.length) {
                    this.tabs.filter(function() {
                        return c(this).attr("tabIndex") === 0
                    }).attr("tabIndex", -1)
                }
            }
            g.attr({
                "aria-expanded": "true",
                "aria-hidden": "false"
            });
            m.newTab.attr({
                "aria-selected": "true",
                tabIndex: 0
            })
        },
        _activate: function(h) {
            var g, j = this._findActive(h);
            if (j[0] === this.active[0]) {
                return
            }
            if (!j.length) {
                j = this.active
            }
            g = j.find(".ui-tabs-anchor")[0];
            this._eventHandler({
                target: g,
                currentTarget: g,
                preventDefault: c.noop
            })
        },
        _findActive: function(g) {
            return g === false ? c() : this.tabs.eq(g)
        },
        _getIndex: function(g) {
            if (typeof g === "string") {
                g = this.anchors.index(this.anchors.filter("[href$='" + g + "']"))
            }
            return g
        },
        _destroy: function() {
            if (this.xhr) {
                this.xhr.abort()
            }
            this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible");
            this.tablist.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").removeAttr("role");
            this.anchors.removeClass("ui-tabs-anchor").removeAttr("role").removeAttr("tabIndex").removeData("href.tabs").removeData("load.tabs").removeUniqueId();
            this.tabs.add(this.panels).each(function() {
                if (c.data(this, "ui-tabs-destroy")) {
                    c(this).remove()
                } else {
                    c(this).removeClass("ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel").removeAttr("tabIndex").removeAttr("aria-live").removeAttr("aria-busy").removeAttr("aria-selected").removeAttr("aria-labelledby").removeAttr("aria-hidden").removeAttr("aria-expanded").removeAttr("role")
                }
            });
            this.tabs.each(function() {
                var g = c(this),
                    h = g.data("ui-tabs-aria-controls");
                if (h) {
                    g.attr("aria-controls", h)
                } else {
                    g.removeAttr("aria-controls")
                }
            });
            this.panels.show();
            if (this.options.heightStyle !== "content") {
                this.panels.css("height", "")
            }
        },
        enable: function(g) {
            var h = this.options.disabled;
            if (h === false) {
                return
            }
            if (g === e) {
                h = false
            } else {
                g = this._getIndex(g);
                if (c.isArray(h)) {
                    h = c.map(h, function(j) {
                        return j !== g ? j : null
                    })
                } else {
                    h = c.map(this.tabs, function(j, k) {
                        return k !== g ? k : null
                    })
                }
            }
            this._setupDisabled(h)
        },
        disable: function(g) {
            var h = this.options.disabled;
            if (h === true) {
                return
            }
            if (g === e) {
                h = true
            } else {
                g = this._getIndex(g);
                if (c.inArray(g, h) !== -1) {
                    return
                }
                if (c.isArray(h)) {
                    h = c.merge([g], h).sort()
                } else {
                    h = [g]
                }
            }
            this._setupDisabled(h)
        },
        load: function(j, n) {
            j = this._getIndex(j);
            var m = this,
                k = this.tabs.eq(j),
                h = k.find(".ui-tabs-anchor"),
                g = this._getPanelForTab(k),
                l = {
                    tab: k,
                    panel: g
                };
            if (b(h[0])) {
                return
            }
            this.xhr = c.ajax(this._ajaxSettings(h, n, l));
            if (this.xhr && this.xhr.statusText !== "canceled") {
                k.addClass("ui-tabs-loading");
                g.attr("aria-busy", "true");
                this.xhr.success(function(o) {
                    setTimeout(function() {
                        g.html(o);
                        m._trigger("load", n, l)
                    }, 1)
                }).complete(function(p, o) {
                    setTimeout(function() {
                        if (o === "abort") {
                            m.panels.stop(false, true)
                        }
                        k.removeClass("ui-tabs-loading");
                        g.removeAttr("aria-busy");
                        if (p === m.xhr) {
                            delete m.xhr
                        }
                    }, 1)
                })
            }
        },
        _ajaxSettings: function(g, k, j) {
            var h = this;
            return {
                url: g.attr("href"),
                beforeSend: function(m, l) {
                    return h._trigger("beforeLoad", k, c.extend({
                        jqXHR: m,
                        ajaxSettings: l
                    }, j))
                }
            }
        },
        _getPanelForTab: function(g) {
            var h = c(g).attr("aria-controls");
            return this.element.find(this._sanitizeSelector("#" + h))
        }
    });
    if (c.uiBackCompat !== false) {
        c.ui.tabs.prototype._ui = function(h, g) {
            return {
                tab: h,
                panel: g,
                index: this.anchors.index(h)
            }
        };
        c.widget("ui.tabs", c.ui.tabs, {
            url: function(h, g) {
                this.anchors.eq(h).attr("href", g)
            }
        });
        c.widget("ui.tabs", c.ui.tabs, {
            options: {
                ajaxOptions: null,
                cache: false
            },
            _create: function() {
                this._super();
                var g = this;
                this._on({
                    tabsbeforeload: function(h, j) {
                        if (c.data(j.tab[0], "cache.tabs")) {
                            h.preventDefault();
                            return
                        }
                        j.jqXHR.success(function() {
                            if (g.options.cache) {
                                c.data(j.tab[0], "cache.tabs", true)
                            }
                        })
                    }
                })
            },
            _ajaxSettings: function(h, j, k) {
                var g = this.options.ajaxOptions;
                return c.extend({}, g, {
                    error: function(n, l) {
                        try {
                            g.error(n, l, k.tab.closest("li").index(), k.tab[0])
                        } catch (m) {}
                    }
                }, this._superApply(arguments))
            },
            _setOption: function(g, h) {
                if (g === "cache" && h === false) {
                    this.anchors.removeData("cache.tabs")
                }
                this._super(g, h)
            },
            _destroy: function() {
                this.anchors.removeData("cache.tabs");
                this._super()
            },
            url: function(g) {
                this.anchors.eq(g).removeData("cache.tabs");
                this._superApply(arguments)
            }
        });
        c.widget("ui.tabs", c.ui.tabs, {
            abort: function() {
                if (this.xhr) {
                    this.xhr.abort()
                }
            }
        });
        c.widget("ui.tabs", c.ui.tabs, {
            options: {
                spinner: "<em>Loading&#8230;</em>"
            },
            _create: function() {
                this._super();
                this._on({
                    tabsbeforeload: function(j, k) {
                        if (j.target !== this.element[0] || !this.options.spinner) {
                            return
                        }
                        var h = k.tab.find("span"),
                            g = h.html();
                        h.html(this.options.spinner);
                        k.jqXHR.complete(function() {
                            h.html(g)
                        })
                    }
                })
            }
        });
        c.widget("ui.tabs", c.ui.tabs, {
            options: {
                enable: null,
                disable: null
            },
            enable: function(j) {
                var h = this.options,
                    g;
                if (j && h.disabled === true || (c.isArray(h.disabled) && c.inArray(j, h.disabled) !== -1)) {
                    g = true
                }
                this._superApply(arguments);
                if (g) {
                    this._trigger("enable", null, this._ui(this.anchors[j], this.panels[j]))
                }
            },
            disable: function(j) {
                var h = this.options,
                    g;
                if (j && h.disabled === false || (c.isArray(h.disabled) && c.inArray(j, h.disabled) === -1)) {
                    g = true
                }
                this._superApply(arguments);
                if (g) {
                    this._trigger("disable", null, this._ui(this.anchors[j], this.panels[j]))
                }
            }
        });
        c.widget("ui.tabs", c.ui.tabs, {
            options: {
                add: null,
                remove: null,
                tabTemplate: "<li><a href='#{href}'><span>#{label}</span></a></li>"
            },
            add: function(m, l, k) {
                if (k === e) {
                    k = this.anchors.length
                }
                var n, h, j = this.options,
                    g = c(j.tabTemplate.replace(/#\{href\}/g, m).replace(/#\{label\}/g, l)),
                    o = !m.indexOf("#") ? m.replace("#", "") : this._tabId(g);
                g.addClass("ui-state-default ui-corner-top").data("ui-tabs-destroy", true);
                g.attr("aria-controls", o);
                n = k >= this.tabs.length;
                h = this.element.find("#" + o);
                if (!h.length) {
                    h = this._createPanel(o);
                    if (n) {
                        if (k > 0) {
                            h.insertAfter(this.panels.eq(-1))
                        } else {
                            h.appendTo(this.element)
                        }
                    } else {
                        h.insertBefore(this.panels[k])
                    }
                }
                h.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").hide();
                if (n) {
                    g.appendTo(this.tablist)
                } else {
                    g.insertBefore(this.tabs[k])
                }
                j.disabled = c.map(j.disabled, function(p) {
                    return p >= k ? ++p : p
                });
                this.refresh();
                if (this.tabs.length === 1 && j.active === false) {
                    this.option("active", 0)
                }
                this._trigger("add", null, this._ui(this.anchors[k], this.panels[k]));
                return this
            },
            remove: function(j) {
                j = this._getIndex(j);
                var h = this.options,
                    k = this.tabs.eq(j).remove(),
                    g = this._getPanelForTab(k).remove();
                if (k.hasClass("ui-tabs-active") && this.anchors.length > 2) {
                    this._activate(j + (j + 1 < this.anchors.length ? 1 : -1))
                }
                h.disabled = c.map(c.grep(h.disabled, function(l) {
                    return l !== j
                }), function(l) {
                    return l >= j ? --l : l
                });
                this.refresh();
                this._trigger("remove", null, this._ui(k.find("a")[0], g[0]));
                return this
            }
        });
        c.widget("ui.tabs", c.ui.tabs, {
            length: function() {
                return this.anchors.length
            }
        });
        c.widget("ui.tabs", c.ui.tabs, {
            options: {
                idPrefix: "ui-tabs-"
            },
            _tabId: function(h) {
                var g = h.is("li") ? h.find("a[href]") : h;
                g = g[0];
                return c(g).closest("li").attr("aria-controls") || g.title && g.title.replace(/\s/g, "_").replace(/[^\w\u00c0-\uFFFF\-]/g, "") || this.options.idPrefix + d()
            }
        });
        c.widget("ui.tabs", c.ui.tabs, {
            options: {
                panelTemplate: "<div></div>"
            },
            _createPanel: function(g) {
                return c(this.options.panelTemplate).attr("id", g).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy", true)
            }
        });
        c.widget("ui.tabs", c.ui.tabs, {
            _create: function() {
                var g = this.options;
                if (g.active === null && g.selected !== e) {
                    g.active = g.selected === -1 ? false : g.selected
                }
                this._super();
                g.selected = g.active;
                if (g.selected === false) {
                    g.selected = -1
                }
            },
            _setOption: function(h, j) {
                if (h !== "selected") {
                    return this._super(h, j)
                }
                var g = this.options;
                this._super("active", j === -1 ? false : j);
                g.selected = g.active;
                if (g.selected === false) {
                    g.selected = -1
                }
            },
            _eventHandler: function() {
                this._superApply(arguments);
                this.options.selected = this.options.active;
                if (this.options.selected === false) {
                    this.options.selected = -1
                }
            }
        });
        c.widget("ui.tabs", c.ui.tabs, {
            options: {
                show: null,
                select: null
            },
            _create: function() {
                this._super();
                if (this.options.active !== false) {
                    this._trigger("show", null, this._ui(this.active.find(".ui-tabs-anchor")[0], this._getPanelForTab(this.active)[0]))
                }
            },
            _trigger: function(k, l, m) {
                var j, g, h = this._superApply(arguments);
                if (!h) {
                    return false
                }
                if (k === "beforeActivate") {
                    j = m.newTab.length ? m.newTab : m.oldTab;
                    g = m.newPanel.length ? m.newPanel : m.oldPanel;
                    h = this._super("select", l, {
                        tab: j.find(".ui-tabs-anchor")[0],
                        panel: g[0],
                        index: j.closest("li").index()
                    })
                } else {
                    if (k === "activate" && m.newTab.length) {
                        h = this._super("show", l, {
                            tab: m.newTab.find(".ui-tabs-anchor")[0],
                            panel: m.newPanel[0],
                            index: m.newTab.closest("li").index()
                        })
                    }
                }
                return h
            }
        });
        c.widget("ui.tabs", c.ui.tabs, {
            select: function(g) {
                g = this._getIndex(g);
                if (g === -1) {
                    if (this.options.collapsible && this.options.selected !== -1) {
                        g = this.options.selected
                    } else {
                        return
                    }
                }
                this.anchors.eq(g).trigger(this.options.event + this.eventNamespace)
            }
        });
        (function() {
            var g = 0;
            c.widget("ui.tabs", c.ui.tabs, {
                options: {
                    cookie: null
                },
                _create: function() {
                    var h = this.options,
                        j;
                    if (h.active == null && h.cookie) {
                        j = parseInt(this._cookie(), 10);
                        if (j === -1) {
                            j = false
                        }
                        h.active = j
                    }
                    this._super()
                },
                _cookie: function(j) {
                    var h = [this.cookie || (this.cookie = this.options.cookie.name || "ui-tabs-" + (++g))];
                    if (arguments.length) {
                        h.push(j === false ? -1 : j);
                        h.push(this.options.cookie)
                    }
                    return c.cookie.apply(null, h)
                },
                _refresh: function() {
                    this._super();
                    if (this.options.cookie) {
                        this._cookie(this.options.active, this.options.cookie)
                    }
                },
                _eventHandler: function() {
                    this._superApply(arguments);
                    if (this.options.cookie) {
                        this._cookie(this.options.active, this.options.cookie)
                    }
                },
                _destroy: function() {
                    this._super();
                    if (this.options.cookie) {
                        this._cookie(null, this.options.cookie)
                    }
                }
            })
        })();
        c.widget("ui.tabs", c.ui.tabs, {
            _trigger: function(h, j, k) {
                var g = c.extend({}, k);
                if (h === "load") {
                    g.panel = g.panel[0];
                    g.tab = g.tab.find(".ui-tabs-anchor")[0]
                }
                return this._super(h, j, g)
            }
        });
        c.widget("ui.tabs", c.ui.tabs, {
            options: {
                fx: null
            },
            _getFx: function() {
                var h, g, j = this.options.fx;
                if (j) {
                    if (c.isArray(j)) {
                        h = j[0];
                        g = j[1]
                    } else {
                        h = g = j
                    }
                }
                return j ? {
                    show: g,
                    hide: h
                } : null
            },
            _toggle: function(o, n) {
                var m = this,
                    g = n.newPanel,
                    k = n.oldPanel,
                    l = this._getFx();
                if (!l) {
                    return this._super(o, n)
                }
                m.running = true;

                function j() {
                    m.running = false;
                    m._trigger("activate", o, n)
                }

                function h() {
                    n.newTab.closest("li").addClass("ui-tabs-active ui-state-active");
                    if (g.length && l.show) {
                        g.animate(l.show, l.show.duration, function() {
                            j()
                        })
                    } else {
                        g.show();
                        j()
                    }
                }
                if (k.length && l.hide) {
                    k.animate(l.hide, l.hide.duration, function() {
                        n.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active");
                        h()
                    })
                } else {
                    n.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active");
                    k.hide();
                    h()
                }
            }
        })
    }
})(jQuery);
(function(d) {
    var b = 0;

    function c(f, g) {
        var e = (f.attr("aria-describedby") || "").split(/\s+/);
        e.push(g);
        f.data("ui-tooltip-id", g).attr("aria-describedby", d.trim(e.join(" ")))
    }

    function a(g) {
        var h = g.data("ui-tooltip-id"),
            f = (g.attr("aria-describedby") || "").split(/\s+/),
            e = d.inArray(h, f);
        if (e !== -1) {
            f.splice(e, 1)
        }
        g.removeData("ui-tooltip-id");
        f = d.trim(f.join(" "));
        if (f) {
            g.attr("aria-describedby", f)
        } else {
            g.removeAttr("aria-describedby")
        }
    }
    d.widget("ui.tooltip", {
        version: "1.9.2",
        options: {
            content: function() {
                return d(this).attr("title")
            },
            hide: true,
            items: "[title]:not([disabled])",
            position: {
                my: "left top+15",
                at: "left bottom",
                collision: "flipfit flip"
            },
            show: true,
            tooltipClass: null,
            track: false,
            close: null,
            open: null
        },
        _create: function() {
            this._on({
                mouseover: "open",
                focusin: "open"
            });
            this.tooltips = {};
            this.parents = {};
            if (this.options.disabled) {
                this._disable()
            }
        },
        _setOption: function(e, g) {
            var f = this;
            if (e === "disabled") {
                this[g ? "_disable" : "_enable"]();
                this.options[e] = g;
                return
            }
            this._super(e, g);
            if (e === "content") {
                d.each(this.tooltips, function(j, h) {
                    f._updateContent(h)
                })
            }
        },
        _disable: function() {
            var e = this;
            d.each(this.tooltips, function(h, f) {
                var g = d.Event("blur");
                g.target = g.currentTarget = f[0];
                e.close(g, true)
            });
            this.element.find(this.options.items).andSelf().each(function() {
                var f = d(this);
                if (f.is("[title]")) {
                    f.data("ui-tooltip-title", f.attr("title")).attr("title", "")
                }
            })
        },
        _enable: function() {
            this.element.find(this.options.items).andSelf().each(function() {
                var e = d(this);
                if (e.data("ui-tooltip-title")) {
                    e.attr("title", e.data("ui-tooltip-title"))
                }
            })
        },
        open: function(f) {
            var e = this,
                g = d(f ? f.target : this.element).closest(this.options.items);
            if (!g.length || g.data("ui-tooltip-id")) {
                return
            }
            if (g.attr("title")) {
                g.data("ui-tooltip-title", g.attr("title"))
            }
            g.data("ui-tooltip-open", true);
            if (f && f.type === "mouseover") {
                g.parents().each(function() {
                    var j = d(this),
                        h;
                    if (j.data("ui-tooltip-open")) {
                        h = d.Event("blur");
                        h.target = h.currentTarget = this;
                        e.close(h, true)
                    }
                    if (j.attr("title")) {
                        j.uniqueId();
                        e.parents[this.id] = {
                            element: this,
                            title: j.attr("title")
                        };
                        j.attr("title", "")
                    }
                })
            }
            this._updateContent(g, f)
        },
        _updateContent: function(k, j) {
            var h, e = this.options.content,
                g = this,
                f = j ? j.type : null;
            if (typeof e === "string") {
                return this._open(j, k, e)
            }
            h = e.call(k[0], function(l) {
                if (!k.data("ui-tooltip-open")) {
                    return
                }
                g._delay(function() {
                    if (j) {
                        j.type = f
                    }
                    this._open(j, k, l)
                })
            });
            if (h) {
                this._open(j, k, h)
            }
        },
        _open: function(j, l, h) {
            var k, g, f, m = d.extend({}, this.options.position);
            if (!h) {
                return
            }
            k = this._find(l);
            if (k.length) {
                k.find(".ui-tooltip-content").html(h);
                return
            }
            if (l.is("[title]")) {
                if (j && j.type === "mouseover") {
                    l.attr("title", "")
                } else {
                    l.removeAttr("title")
                }
            }
            k = this._tooltip(l);
            c(l, k.attr("id"));
            k.find(".ui-tooltip-content").html(h);

            function e(n) {
                m.of = n;
                if (k.is(":hidden")) {
                    return
                }
                k.position(m)
            }
            if (this.options.track && j && /^mouse/.test(j.type)) {
                this._on(this.document, {
                    mousemove: e
                });
                e(j)
            } else {
                k.position(d.extend({
                    of: l
                }, this.options.position))
            }
            k.hide();
            this._show(k, this.options.show);
            if (this.options.show && this.options.show.delay) {
                f = setInterval(function() {
                    if (k.is(":visible")) {
                        e(m.of);
                        clearInterval(f)
                    }
                }, d.fx.interval)
            }
            this._trigger("open", j, {
                tooltip: k
            });
            g = {
                keyup: function(n) {
                    if (n.keyCode === d.ui.keyCode.ESCAPE) {
                        var o = d.Event(n);
                        o.currentTarget = l[0];
                        this.close(o, true)
                    }
                },
                remove: function() {
                    this._removeTooltip(k)
                }
            };
            if (!j || j.type === "mouseover") {
                g.mouseleave = "close"
            }
            if (!j || j.type === "focusin") {
                g.focusout = "close"
            }
            this._on(true, l, g)
        },
        close: function(f) {
            var e = this,
                h = d(f ? f.currentTarget : this.element),
                g = this._find(h);
            if (this.closing) {
                return
            }
            if (h.data("ui-tooltip-title")) {
                h.attr("title", h.data("ui-tooltip-title"))
            }
            a(h);
            g.stop(true);
            this._hide(g, this.options.hide, function() {
                e._removeTooltip(d(this))
            });
            h.removeData("ui-tooltip-open");
            this._off(h, "mouseleave focusout keyup");
            if (h[0] !== this.element[0]) {
                this._off(h, "remove")
            }
            this._off(this.document, "mousemove");
            if (f && f.type === "mouseleave") {
                d.each(this.parents, function(k, j) {
                    d(j.element).attr("title", j.title);
                    delete e.parents[k]
                })
            }
            this.closing = true;
            this._trigger("close", f, {
                tooltip: g
            });
            this.closing = false
        },
        _tooltip: function(e) {
            var g = "ui-tooltip-" + b++,
                f = d("<div>").attr({
                    id: g,
                    role: "tooltip"
                }).addClass("ui-tooltip ui-widget ui-corner-all ui-widget-content " + (this.options.tooltipClass || ""));
            d("<div>").addClass("ui-tooltip-content").appendTo(f);
            f.appendTo(this.document[0].body);
            if (d.fn.bgiframe) {
                f.bgiframe()
            }
            this.tooltips[g] = e;
            return f
        },
        _find: function(e) {
            var f = e.data("ui-tooltip-id");
            return f ? d("#" + f) : d()
        },
        _removeTooltip: function(e) {
            e.remove();
            delete this.tooltips[e.attr("id")]
        },
        _destroy: function() {
            var e = this;
            d.each(this.tooltips, function(h, f) {
                var g = d.Event("blur");
                g.target = g.currentTarget = f[0];
                e.close(g, true);
                d("#" + h).remove();
                if (f.data("ui-tooltip-title")) {
                    f.attr("title", f.data("ui-tooltip-title"));
                    f.removeData("ui-tooltip-title")
                }
            })
        }
    })
}(jQuery));
(function(d) {
    d.widget("ui.widget", {
        yield: null,
        returnValues: {},
        before: function(h, g) {
            var e = this[h];
            this[h] = function() {
                g.apply(this, arguments);
                return e.apply(this, arguments)
            }
        },
        after: function(h, g) {
            var e = this[h];
            this[h] = function() {
                this.returnValues[h] = e.apply(this, arguments);
                return g.apply(this, arguments)
            }
        },
        around: function(h, g) {
            var e = this[h];
            this[h] = function() {
                var j = this.yield;
                this.yield = e;
                var f = g.apply(this, arguments);
                this.yield = j;
                return f
            }
        }
    });
    var c = (function(e) {
        return (function(f) {
            e.prototype = f;
            return new e()
        })
    })(function() {});
    var a = /xyz/.test(function() {
        xyz
    }) ? /\b_super\b/ : /.*/;
    d.ui.widget.subclass = function b(f) {
        d.widget(f);
        f = f.split(".");
        var g = d[f[0]][f[1]],
            l = this,
            e = l.prototype;
        var h = arguments[0] = g.prototype = c(e);
        d.extend.apply(null, arguments);
        g.subclass = b;
        for (key in h) {
            if (h.hasOwnProperty(key)) {
                switch (key) {
                    case "_create":
                        var j = h._create;
                        h._create = function() {
                            e._create.apply(this);
                            j.apply(this)
                        };
                        break;
                    case "_init":
                        var m = h._init;
                        h._init = function() {
                            e._init.apply(this);
                            m.apply(this)
                        };
                        break;
                    case "destroy":
                        var k = h.destroy;
                        h.destroy = function() {
                            k.apply(this);
                            e.destroy.apply(this)
                        };
                        break;
                    case "options":
                        var n = h.options;
                        h.options = d.extend({}, e.options, n);
                        break;
                    default:
                        if (d.isFunction(h[key]) && d.isFunction(e[key]) && a.test(h[key])) {
                            h[key] = (function(o, p) {
                                return function() {
                                    var r = this._super;
                                    this._super = e[o];
                                    try {
                                        var q = p.apply(this, arguments)
                                    } finally {
                                        this._super = r
                                    }
                                    return q
                                }
                            })(key, h[key])
                        }
                        break
                }
            }
        }
    }
})(jQuery);
(function(b, a) {
    (function(l, h) {
        var w = l.fn.domManip,
            k = "_tmplitem",
            x = /^[^<]*(<[\w\W]+>)[^>]*$|\{\{\! /,
            s = {},
            g = {},
            B, A = {
                key: 0,
                data: {}
            },
            z = 0,
            t = 0,
            j = [];

        function n(E, D, G, H) {
            var F = {
                data: H || (D ? D.data : {}),
                _wrap: D ? D._wrap : null,
                tmpl: null,
                parent: D || null,
                nodes: [],
                calls: e,
                nest: d,
                wrap: q,
                html: u,
                update: C
            };
            if (E) {
                l.extend(F, E, {
                    nodes: [],
                    parent: D
                })
            }
            if (G) {
                F.tmpl = G;
                F._ctnt = F._ctnt || F.tmpl(l, F);
                F.key = ++z;
                (j.length ? g : s)[z] = F
            }
            return F
        }
        l.each({
            appendTo: "append",
            prependTo: "prepend",
            insertBefore: "before",
            insertAfter: "after",
            replaceAll: "replaceWith"
        }, function(D, E) {
            l.fn[D] = function(F) {
                var I = [],
                    L = l(F),
                    H, J, G, M, K = this.length === 1 && this[0].parentNode;
                B = s || {};
                if (K && K.nodeType === 11 && K.childNodes.length === 1 && L.length === 1) {
                    L[E](this[0]);
                    I = this
                } else {
                    for (J = 0, G = L.length; J < G; J++) {
                        t = J;
                        H = (J > 0 ? this.clone(true) : this).get();
                        l.fn[E].apply(l(L[J]), H);
                        I = I.concat(H)
                    }
                    t = 0;
                    I = this.pushStack(I, D, L.selector)
                }
                M = B;
                B = null;
                l.tmpl.complete(M);
                return I
            }
        });
        l.fn.extend({
            tmpl: function(F, E, D) {
                return l.tmpl(this[0], F, E, D)
            },
            tmplItem: function() {
                return l.tmplItem(this[0])
            },
            template: function(D) {
                return l.template(D, this[0])
            },
            domManip: function(F, J, K, E) {
                if (F[0] && F[0].nodeType) {
                    var I = l.makeArray(arguments),
                        H = F.length,
                        G = 0,
                        D;
                    while (G < H && !(D = l.data(F[G++], "tmplItem"))) {}
                    if (H > 1) {
                        I[0] = [l.makeArray(F)]
                    }
                    if (D && t) {
                        I[2] = function(L) {
                            l.tmpl.afterManip(this, L, K)
                        }
                    }
                    w.apply(this, I)
                } else {
                    w.apply(this, arguments)
                }
                t = 0;
                if (!B) {
                    l.tmpl.complete(s)
                }
                return this
            }
        });
        l.extend({
            tmpl: function(F, I, H, E) {
                var G, D = !E;
                if (D) {
                    E = A;
                    F = l.template[F] || l.template(null, F);
                    g = {}
                } else {
                    if (!F) {
                        F = E.tmpl;
                        s[E.key] = E;
                        E.nodes = [];
                        if (E.wrapped) {
                            v(E, E.wrapped)
                        }
                        return l(p(E, null, E.tmpl(l, E)))
                    }
                }
                if (!F) {
                    return []
                }
                if (typeof I === "function") {
                    I = I.call(E || {})
                }
                if (H && H.wrapped) {
                    v(H, H.wrapped)
                }
                G = l.isArray(I) ? l.map(I, function(J) {
                    return J ? n(H, E, F, J) : null
                }) : [n(H, E, F, I)];
                return D ? l(p(E, null, G)) : G
            },
            tmplItem: function(E) {
                var D;
                if (E instanceof l) {
                    E = E[0]
                }
                while (E && E.nodeType === 1 && !(D = l.data(E, "tmplItem")) && (E = E.parentNode)) {}
                return D || A
            },
            template: function(E, D) {
                if (D) {
                    if (typeof D === "string") {
                        D = o(D)
                    } else {
                        if (D instanceof l) {
                            D = D[0] || {}
                        }
                    }
                    if (D.nodeType) {
                        D = l.data(D, "tmpl") || l.data(D, "tmpl", o(D.innerHTML))
                    }
                    return typeof E === "string" ? (l.template[E] = D) : D
                }
                return E ? (typeof E !== "string" ? l.template(null, E) : (l.template[E] || l.template(null, x.test(E) ? E : l(E)))) : null
            },
            encode: function(D) {
                return ("" + D).split("<").join("&lt;").split(">").join("&gt;").split('"').join("&#34;").split("'").join("&#39;")
            }
        });
        l.extend(l.tmpl, {
            tag: {
                tmpl: {
                    _default: {
                        $2: "null"
                    },
                    open: "if($notnull_1){_=_.concat($item.nest($1,$2));}"
                },
                wrap: {
                    _default: {
                        $2: "null"
                    },
                    open: "$item.calls(_,$1,$2);_=[];",
                    close: "call=$item.calls();_=call._.concat($item.wrap(call,_));"
                },
                each: {
                    _default: {
                        $2: "$index, $value"
                    },
                    open: "if($notnull_1){$.each($1a,function($2){with(this){",
                    close: "}});}"
                },
                "if": {
                    open: "if(($notnull_1) && $1a){",
                    close: "}"
                },
                "else": {
                    _default: {
                        $1: "true"
                    },
                    open: "}else if(($notnull_1) && $1a){"
                },
                html: {
                    open: "if($notnull_1){_.push($1a);}"
                },
                "=": {
                    _default: {
                        $1: "$data"
                    },
                    open: "if($notnull_1){_.push($.encode($1a));}"
                },
                "!": {
                    open: ""
                }
            },
            complete: function(D) {
                s = {}
            },
            afterManip: function y(F, D, G) {
                var E = D.nodeType === 11 ? l.makeArray(D.childNodes) : D.nodeType === 1 ? [D] : [];
                G.call(F, D);
                r(E);
                t++
            }
        });

        function p(D, H, F) {
            var G, E = F ? l.map(F, function(I) {
                return (typeof I === "string") ? (D.key ? I.replace(/(<\w+)(?=[\s>])(?![^>]*_tmplitem)([^>]*)/g, "$1 " + k + '="' + D.key + '" $2') : I) : p(I, D, I._ctnt)
            }) : D;
            if (H) {
                return E
            }
            E = E.join("");
            E.replace(/^\s*([^<\s][^<]*)?(<[\w\W]+>)([^>]*[^>\s])?\s*$/, function(J, K, I, L) {
                G = l(I).get();
                r(G);
                if (K) {
                    G = c(K).concat(G)
                }
                if (L) {
                    G = G.concat(c(L))
                }
            });
            return G ? G : c(E)
        }

        function c(E) {
            var D = document.createElement("div");
            D.innerHTML = E;
            return l.makeArray(D.childNodes)
        }

        function o(D) {
            return new Function("jQuery", "$item", "var $=jQuery,call,_=[],$data=$item.data;with($data){_.push('" + l.trim(D).replace(/([\\'])/g, "\\$1").replace(/[\r\t\n]/g, " ").replace(/\$\{([^\}]*)\}/g, "{{= $1}}").replace(/\{\{(\/?)(\w+|.)(?:\(((?:[^\}]|\}(?!\}))*?)?\))?(?:\s+(.*?)?)?(\(((?:[^\}]|\}(?!\}))*?)\))?\s*\}\}/g, function(L, F, J, G, H, M, I) {
                var O = l.tmpl.tag[J],
                    E, K, N;
                if (!O) {
                    throw "Template command not found: " + J
                }
                E = O._default || [];
                if (M && !/\w$/.test(H)) {
                    H += M;
                    M = ""
                }
                if (H) {
                    H = m(H);
                    I = I ? ("," + m(I) + ")") : (M ? ")" : "");
                    K = M ? (H.indexOf(".") > -1 ? H + M : ("(" + H + ").call($item" + I)) : H;
                    N = M ? K : "(typeof(" + H + ")==='function'?(" + H + ").call($item):(" + H + "))"
                } else {
                    N = K = E.$1 || "null"
                }
                G = m(G);
                return "');" + O[F ? "close" : "open"].split("$notnull_1").join(H ? "typeof(" + H + ")!=='undefined' && (" + H + ")!=null" : "true").split("$1a").join(N).split("$1").join(K).split("$2").join(G ? G.replace(/\s*([^\(]+)\s*(\((.*?)\))?/g, function(Q, P, R, S) {
                    S = S ? ("," + S + ")") : (R ? ")" : "");
                    return S ? ("(" + P + ").call($item" + S) : Q
                }) : (E.$2 || "")) + "_.push('"
            }) + "');}return _;")
        }

        function v(E, D) {
            E._wrap = p(E, true, l.isArray(D) ? D : [x.test(D) ? D : l(D).html()]).join("")
        }

        function m(D) {
            return D ? D.replace(/\\'/g, "'").replace(/\\\\/g, "\\") : null
        }

        function f(D) {
            var E = document.createElement("div");
            E.appendChild(D.cloneNode(true));
            return E.innerHTML
        }

        function r(J) {
            var L = "_" + t,
                E, D, H = {},
                I, G, F;
            for (I = 0, G = J.length; I < G; I++) {
                if ((E = J[I]).nodeType !== 1) {
                    continue
                }
                D = E.getElementsByTagName("*");
                for (F = D.length - 1; F >= 0; F--) {
                    K(D[F])
                }
                K(E)
            }

            function K(R) {
                var O, Q = R,
                    P, M, N;
                if ((N = R.getAttribute(k))) {
                    while (Q.parentNode && (Q = Q.parentNode).nodeType === 1 && !(O = Q.getAttribute(k))) {}
                    if (O !== N) {
                        Q = Q.parentNode ? (Q.nodeType === 11 ? 0 : (Q.getAttribute(k) || 0)) : 0;
                        if (!(M = s[N])) {
                            M = g[N];
                            M = n(M, s[Q] || g[Q], null, true);
                            M.key = ++z;
                            s[z] = M
                        }
                        if (t) {
                            S(N)
                        }
                    }
                    R.removeAttribute(k)
                } else {
                    if (t && (M = l.data(R, "tmplItem"))) {
                        S(M.key);
                        s[M.key] = M;
                        Q = l.data(R.parentNode, "tmplItem");
                        Q = Q ? Q.key : 0
                    }
                }
                if (M) {
                    P = M;
                    while (P && P.key != Q) {
                        P.nodes.push(R);
                        P = P.parent
                    }
                    delete M._ctnt;
                    delete M._wrap;
                    l.data(R, "tmplItem", M)
                }

                function S(T) {
                    T = T + L;
                    M = H[T] = (H[T] || n(M, s[M.parent.key + L] || M.parent, null, true))
                }
            }
        }

        function e(F, D, G, E) {
            if (!F) {
                return j.pop()
            }
            j.push({
                _: F,
                tmpl: D,
                item: this,
                data: G,
                options: E
            })
        }

        function d(D, F, E) {
            return l.tmpl(l.template(D), F, E, this)
        }

        function q(F, D) {
            var E = F.options || {};
            E.wrapped = D;
            return l.tmpl(l.template(F.tmpl), F.data, E, F.item)
        }

        function u(E, F) {
            var D = this._wrap;
            return l.map(l(l.isArray(D) ? D.join("") : D).filter(E || "*"), function(G) {
                return F ? G.innerText || G.textContent : G.outerHTML || f(G)
            })
        }

        function C() {
            var D = this.nodes;
            l.tmpl(null, null, null, this).insertBefore(D[0]);
            l(D).remove()
        }
    })(b)
})(window.$CQ || window.$ || function() {
    throw new Error("jQuery is not defined")
}(), window.$CQ || window.$);
(function() {
    var w = this;
    var k = w._;
    var E = {};
    var D = Array.prototype,
        f = Object.prototype,
        r = Function.prototype;
    var n = D.slice,
        A = D.unshift,
        c = f.toString,
        h = f.hasOwnProperty;
    var M = D.forEach,
        q = D.map,
        F = D.reduce,
        b = D.reduceRight,
        a = D.filter,
        B = D.every,
        o = D.some,
        m = D.indexOf,
        l = D.lastIndexOf,
        t = Array.isArray,
        e = Object.keys,
        G = r.bind;
    var N = function(p) {
        return new u(p)
    };
    if (typeof exports !== "undefined") {
        if (typeof module !== "undefined" && module.exports) {
            exports = module.exports = N
        }
        exports._ = N
    } else {
        w._ = N
    }
    N.VERSION = "1.3.3";
    var J = N.each = N.forEach = function(S, R, Q) {
        if (S == null) {
            return
        }
        if (M && S.forEach === M) {
            S.forEach(R, Q)
        } else {
            if (S.length === +S.length) {
                for (var P = 0, p = S.length; P < p; P++) {
                    if (P in S && R.call(Q, S[P], P, S) === E) {
                        return
                    }
                }
            } else {
                for (var O in S) {
                    if (N.has(S, O)) {
                        if (R.call(Q, S[O], O, S) === E) {
                            return
                        }
                    }
                }
            }
        }
    };
    N.map = N.collect = function(Q, P, O) {
        var p = [];
        if (Q == null) {
            return p
        }
        if (q && Q.map === q) {
            return Q.map(P, O)
        }
        J(Q, function(T, R, S) {
            p[p.length] = P.call(O, T, R, S)
        });
        if (Q.length === +Q.length) {
            p.length = Q.length
        }
        return p
    };
    N.reduce = N.foldl = N.inject = function(R, Q, p, P) {
        var O = arguments.length > 2;
        if (R == null) {
            R = []
        }
        if (F && R.reduce === F) {
            if (P) {
                Q = N.bind(Q, P)
            }
            return O ? R.reduce(Q, p) : R.reduce(Q)
        }
        J(R, function(U, S, T) {
            if (!O) {
                p = U;
                O = true
            } else {
                p = Q.call(P, p, U, S, T)
            }
        });
        if (!O) {
            throw new TypeError("Reduce of empty array with no initial value")
        }
        return p
    };
    N.reduceRight = N.foldr = function(R, Q, p, P) {
        var O = arguments.length > 2;
        if (R == null) {
            R = []
        }
        if (b && R.reduceRight === b) {
            if (P) {
                Q = N.bind(Q, P)
            }
            return O ? R.reduceRight(Q, p) : R.reduceRight(Q)
        }
        var S = N.toArray(R).reverse();
        if (P && !O) {
            Q = N.bind(Q, P)
        }
        return O ? N.reduce(S, Q, p, P) : N.reduce(S, Q)
    };
    N.find = N.detect = function(Q, P, O) {
        var p;
        z(Q, function(T, R, S) {
            if (P.call(O, T, R, S)) {
                p = T;
                return true
            }
        });
        return p
    };
    N.filter = N.select = function(Q, P, O) {
        var p = [];
        if (Q == null) {
            return p
        }
        if (a && Q.filter === a) {
            return Q.filter(P, O)
        }
        J(Q, function(T, R, S) {
            if (P.call(O, T, R, S)) {
                p[p.length] = T
            }
        });
        return p
    };
    N.reject = function(Q, P, O) {
        var p = [];
        if (Q == null) {
            return p
        }
        J(Q, function(T, R, S) {
            if (!P.call(O, T, R, S)) {
                p[p.length] = T
            }
        });
        return p
    };
    N.every = N.all = function(Q, P, O) {
        var p = true;
        if (Q == null) {
            return p
        }
        if (B && Q.every === B) {
            return Q.every(P, O)
        }
        J(Q, function(T, R, S) {
            if (!(p = p && P.call(O, T, R, S))) {
                return E
            }
        });
        return !!p
    };
    var z = N.some = N.any = function(Q, P, O) {
        P || (P = N.identity);
        var p = false;
        if (Q == null) {
            return p
        }
        if (o && Q.some === o) {
            return Q.some(P, O)
        }
        J(Q, function(T, R, S) {
            if (p || (p = P.call(O, T, R, S))) {
                return E
            }
        });
        return !!p
    };
    N.include = N.contains = function(P, O) {
        var p = false;
        if (P == null) {
            return p
        }
        if (m && P.indexOf === m) {
            return P.indexOf(O) != -1
        }
        p = z(P, function(Q) {
            return Q === O
        });
        return p
    };
    N.invoke = function(O, P) {
        var p = n.call(arguments, 2);
        return N.map(O, function(Q) {
            return (N.isFunction(P) ? P || Q : Q[P]).apply(Q, p)
        })
    };
    N.pluck = function(O, p) {
        return N.map(O, function(P) {
            return P[p]
        })
    };
    N.max = function(Q, P, O) {
        if (!P && N.isArray(Q) && Q[0] === +Q[0]) {
            return Math.max.apply(Math, Q)
        }
        if (!P && N.isEmpty(Q)) {
            return -Infinity
        }
        var p = {
            computed: -Infinity
        };
        J(Q, function(U, R, T) {
            var S = P ? P.call(O, U, R, T) : U;
            S >= p.computed && (p = {
                value: U,
                computed: S
            })
        });
        return p.value
    };
    N.min = function(Q, P, O) {
        if (!P && N.isArray(Q) && Q[0] === +Q[0]) {
            return Math.min.apply(Math, Q)
        }
        if (!P && N.isEmpty(Q)) {
            return Infinity
        }
        var p = {
            computed: Infinity
        };
        J(Q, function(U, R, T) {
            var S = P ? P.call(O, U, R, T) : U;
            S < p.computed && (p = {
                value: U,
                computed: S
            })
        });
        return p.value
    };
    N.shuffle = function(P) {
        var p = [],
            O;
        J(P, function(S, Q, R) {
            O = Math.floor(Math.random() * (Q + 1));
            p[Q] = p[O];
            p[O] = S
        });
        return p
    };
    N.sortBy = function(P, Q, p) {
        var O = N.isFunction(Q) ? Q : function(R) {
            return R[Q]
        };
        return N.pluck(N.map(P, function(T, R, S) {
            return {
                value: T,
                criteria: O.call(p, T, R, S)
            }
        }).sort(function(U, T) {
            var S = U.criteria,
                R = T.criteria;
            if (S === void 0) {
                return 1
            }
            if (R === void 0) {
                return -1
            }
            return S < R ? -1 : S > R ? 1 : 0
        }), "value")
    };
    N.groupBy = function(P, Q) {
        var p = {};
        var O = N.isFunction(Q) ? Q : function(R) {
            return R[Q]
        };
        J(P, function(T, R) {
            var S = O(T, R);
            (p[S] || (p[S] = [])).push(T)
        });
        return p
    };
    N.sortedIndex = function(S, R, P) {
        P || (P = N.identity);
        var p = 0,
            Q = S.length;
        while (p < Q) {
            var O = (p + Q) >> 1;
            P(S[O]) < P(R) ? p = O + 1 : Q = O
        }
        return p
    };
    N.toArray = function(p) {
        if (!p) {
            return []
        }
        if (N.isArray(p)) {
            return n.call(p)
        }
        if (N.isArguments(p)) {
            return n.call(p)
        }
        if (p.toArray && N.isFunction(p.toArray)) {
            return p.toArray()
        }
        return N.values(p)
    };
    N.size = function(p) {
        return N.isArray(p) ? p.length : N.keys(p).length
    };
    N.first = N.head = N.take = function(P, O, p) {
        return (O != null) && !p ? n.call(P, 0, O) : P[0]
    };
    N.initial = function(P, O, p) {
        return n.call(P, 0, P.length - ((O == null) || p ? 1 : O))
    };
    N.last = function(P, O, p) {
        if ((O != null) && !p) {
            return n.call(P, Math.max(P.length - O, 0))
        } else {
            return P[P.length - 1]
        }
    };
    N.rest = N.tail = function(P, p, O) {
        return n.call(P, (p == null) || O ? 1 : p)
    };
    N.compact = function(p) {
        return N.filter(p, function(O) {
            return !!O
        })
    };
    N.flatten = function(O, p) {
        return N.reduce(O, function(P, Q) {
            if (N.isArray(Q)) {
                return P.concat(p ? Q : N.flatten(Q))
            }
            P[P.length] = Q;
            return P
        }, [])
    };
    N.without = function(p) {
        return N.difference(p, n.call(arguments, 1))
    };
    N.uniq = N.unique = function(R, Q, P) {
        var p = P ? N.map(R, P) : R;
        var O = [];
        if (R.length < 3) {
            Q = true
        }
        N.reduce(p, function(S, U, T) {
            if (Q ? N.last(S) !== U || !S.length : !N.include(S, U)) {
                S.push(U);
                O.push(R[T])
            }
            return S
        }, []);
        return O
    };
    N.union = function() {
        return N.uniq(N.flatten(arguments, true))
    };
    N.intersection = N.intersect = function(O) {
        var p = n.call(arguments, 1);
        return N.filter(N.uniq(O), function(P) {
            return N.every(p, function(Q) {
                return N.indexOf(Q, P) >= 0
            })
        })
    };
    N.difference = function(O) {
        var p = N.flatten(n.call(arguments, 1), true);
        return N.filter(O, function(P) {
            return !N.include(p, P)
        })
    };
    N.zip = function() {
        var p = n.call(arguments);
        var Q = N.max(N.pluck(p, "length"));
        var P = new Array(Q);
        for (var O = 0; O < Q; O++) {
            P[O] = N.pluck(p, "" + O)
        }
        return P
    };
    N.indexOf = function(R, P, Q) {
        if (R == null) {
            return -1
        }
        var O, p;
        if (Q) {
            O = N.sortedIndex(R, P);
            return R[O] === P ? O : -1
        }
        if (m && R.indexOf === m) {
            return R.indexOf(P)
        }
        for (O = 0, p = R.length; O < p; O++) {
            if (O in R && R[O] === P) {
                return O
            }
        }
        return -1
    };
    N.lastIndexOf = function(P, O) {
        if (P == null) {
            return -1
        }
        if (l && P.lastIndexOf === l) {
            return P.lastIndexOf(O)
        }
        var p = P.length;
        while (p--) {
            if (p in P && P[p] === O) {
                return p
            }
        }
        return -1
    };
    N.range = function(S, Q, R) {
        if (arguments.length <= 1) {
            Q = S || 0;
            S = 0
        }
        R = arguments[2] || 1;
        var O = Math.max(Math.ceil((Q - S) / R), 0);
        var p = 0;
        var P = new Array(O);
        while (p < O) {
            P[p++] = S;
            S += R
        }
        return P
    };
    var H = function() {};
    N.bind = function d(Q, O) {
        var P, p;
        if (Q.bind === G && G) {
            return G.apply(Q, n.call(arguments, 1))
        }
        if (!N.isFunction(Q)) {
            throw new TypeError
        }
        p = n.call(arguments, 2);
        return P = function() {
            if (!(this instanceof P)) {
                return Q.apply(O, p.concat(n.call(arguments)))
            }
            H.prototype = Q.prototype;
            var S = new H;
            var R = Q.apply(S, p.concat(n.call(arguments)));
            if (Object(R) === R) {
                return R
            }
            return S
        }
    };
    N.bindAll = function(O) {
        var p = n.call(arguments, 1);
        if (p.length == 0) {
            p = N.functions(O)
        }
        J(p, function(P) {
            O[P] = N.bind(O[P], O)
        });
        return O
    };
    N.memoize = function(P, O) {
        var p = {};
        O || (O = N.identity);
        return function() {
            var Q = O.apply(this, arguments);
            return N.has(p, Q) ? p[Q] : (p[Q] = P.apply(this, arguments))
        }
    };
    N.delay = function(O, P) {
        var p = n.call(arguments, 2);
        return setTimeout(function() {
            return O.apply(null, p)
        }, P)
    };
    N.defer = function(p) {
        return N.delay.apply(N, [p, 1].concat(n.call(arguments, 1)))
    };
    N.throttle = function(P, Q) {
        var O, S, T, U, R, V;
        var p = N.debounce(function() {
            R = U = false
        }, Q);
        return function() {
            O = this;
            S = arguments;
            var W = function() {
                T = null;
                if (R) {
                    P.apply(O, S)
                }
                p()
            };
            if (!T) {
                T = setTimeout(W, Q)
            }
            if (U) {
                R = true
            } else {
                V = P.apply(O, S)
            }
            p();
            U = true;
            return V
        }
    };
    N.debounce = function(O, Q, p) {
        var P;
        return function() {
            var T = this,
                S = arguments;
            var R = function() {
                P = null;
                if (!p) {
                    O.apply(T, S)
                }
            };
            if (p && !P) {
                O.apply(T, S)
            }
            clearTimeout(P);
            P = setTimeout(R, Q)
        }
    };
    N.once = function(P) {
        var p = false,
            O;
        return function() {
            if (p) {
                return O
            }
            p = true;
            return O = P.apply(this, arguments)
        }
    };
    N.wrap = function(p, O) {
        return function() {
            var P = [p].concat(n.call(arguments, 0));
            return O.apply(this, P)
        }
    };
    N.compose = function() {
        var p = arguments;
        return function() {
            var O = arguments;
            for (var P = p.length - 1; P >= 0; P--) {
                O = [p[P].apply(this, O)]
            }
            return O[0]
        }
    };
    N.after = function(O, p) {
        if (O <= 0) {
            return p()
        }
        return function() {
            if (--O < 1) {
                return p.apply(this, arguments)
            }
        }
    };
    N.keys = e || function(P) {
        if (P !== Object(P)) {
            throw new TypeError("Invalid object")
        }
        var O = [];
        for (var p in P) {
            if (N.has(P, p)) {
                O[O.length] = p
            }
        }
        return O
    };
    N.values = function(p) {
        return N.map(p, N.identity)
    };
    N.functions = N.methods = function(P) {
        var O = [];
        for (var p in P) {
            if (N.isFunction(P[p])) {
                O.push(p)
            }
        }
        return O.sort()
    };
    N.extend = function(p) {
        J(n.call(arguments, 1), function(O) {
            for (var P in O) {
                p[P] = O[P]
            }
        });
        return p
    };
    N.pick = function(O) {
        var p = {};
        J(N.flatten(n.call(arguments, 1)), function(P) {
            if (P in O) {
                p[P] = O[P]
            }
        });
        return p
    };
    N.defaults = function(p) {
        J(n.call(arguments, 1), function(O) {
            for (var P in O) {
                if (p[P] == null) {
                    p[P] = O[P]
                }
            }
        });
        return p
    };
    N.clone = function(p) {
        if (!N.isObject(p)) {
            return p
        }
        return N.isArray(p) ? p.slice() : N.extend({}, p)
    };
    N.tap = function(O, p) {
        p(O);
        return O
    };

    function K(Q, P, O) {
        if (Q === P) {
            return Q !== 0 || 1 / Q == 1 / P
        }
        if (Q == null || P == null) {
            return Q === P
        }
        if (Q._chain) {
            Q = Q._wrapped
        }
        if (P._chain) {
            P = P._wrapped
        }
        if (Q.isEqual && N.isFunction(Q.isEqual)) {
            return Q.isEqual(P)
        }
        if (P.isEqual && N.isFunction(P.isEqual)) {
            return P.isEqual(Q)
        }
        var T = c.call(Q);
        if (T != c.call(P)) {
            return false
        }
        switch (T) {
            case "[object String]":
                return Q == String(P);
            case "[object Number]":
                return Q != +Q ? P != +P : (Q == 0 ? 1 / Q == 1 / P : Q == +P);
            case "[object Date]":
            case "[object Boolean]":
                return +Q == +P;
            case "[object RegExp]":
                return Q.source == P.source && Q.global == P.global && Q.multiline == P.multiline && Q.ignoreCase == P.ignoreCase
        }
        if (typeof Q != "object" || typeof P != "object") {
            return false
        }
        var U = O.length;
        while (U--) {
            if (O[U] == Q) {
                return true
            }
        }
        O.push(Q);
        var S = 0,
            p = true;
        if (T == "[object Array]") {
            S = Q.length;
            p = S == P.length;
            if (p) {
                while (S--) {
                    if (!(p = S in Q == S in P && K(Q[S], P[S], O))) {
                        break
                    }
                }
            }
        } else {
            if ("constructor" in Q != "constructor" in P || Q.constructor != P.constructor) {
                return false
            }
            for (var R in Q) {
                if (N.has(Q, R)) {
                    S++;
                    if (!(p = N.has(P, R) && K(Q[R], P[R], O))) {
                        break
                    }
                }
            }
            if (p) {
                for (R in P) {
                    if (N.has(P, R) && !(S--)) {
                        break
                    }
                }
                p = !S
            }
        }
        O.pop();
        return p
    }
    N.isEqual = function(O, p) {
        return K(O, p, [])
    };
    N.isEmpty = function(O) {
        if (O == null) {
            return true
        }
        if (N.isArray(O) || N.isString(O)) {
            return O.length === 0
        }
        for (var p in O) {
            if (N.has(O, p)) {
                return false
            }
        }
        return true
    };
    N.isElement = function(p) {
        return !!(p && p.nodeType == 1)
    };
    N.isArray = t || function(p) {
        return c.call(p) == "[object Array]"
    };
    N.isObject = function(p) {
        return p === Object(p)
    };
    N.isArguments = function(p) {
        return c.call(p) == "[object Arguments]"
    };
    if (!N.isArguments(arguments)) {
        N.isArguments = function(p) {
            return !!(p && N.has(p, "callee"))
        }
    }
    N.isFunction = function(p) {
        return c.call(p) == "[object Function]"
    };
    N.isString = function(p) {
        return c.call(p) == "[object String]"
    };
    N.isNumber = function(p) {
        return c.call(p) == "[object Number]"
    };
    N.isFinite = function(p) {
        return N.isNumber(p) && isFinite(p)
    };
    N.isNaN = function(p) {
        return p !== p
    };
    N.isBoolean = function(p) {
        return p === true || p === false || c.call(p) == "[object Boolean]"
    };
    N.isDate = function(p) {
        return c.call(p) == "[object Date]"
    };
    N.isRegExp = function(p) {
        return c.call(p) == "[object RegExp]"
    };
    N.isNull = function(p) {
        return p === null
    };
    N.isUndefined = function(p) {
        return p === void 0
    };
    N.has = function(O, p) {
        return h.call(O, p)
    };
    N.noConflict = function() {
        w._ = k;
        return this
    };
    N.identity = function(p) {
        return p
    };
    N.times = function(Q, P, O) {
        for (var p = 0; p < Q; p++) {
            P.call(O, p)
        }
    };
    N.escape = function(p) {
        return ("" + p).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;").replace(/\//g, "&#x2F;")
    };
    N.result = function(p, P) {
        if (p == null) {
            return null
        }
        var O = p[P];
        return N.isFunction(O) ? O.call(p) : O
    };
    N.mixin = function(p) {
        J(N.functions(p), function(O) {
            x(O, N[O] = p[O])
        })
    };
    var y = 0;
    N.uniqueId = function(p) {
        var O = y++;
        return p ? p + O : O
    };
    N.templateSettings = {
        evaluate: /<%([\s\S]+?)%>/g,
        interpolate: /<%=([\s\S]+?)%>/g,
        escape: /<%-([\s\S]+?)%>/g
    };
    var v = /.^/;
    var g = {
        "\\": "\\",
        "'": "'",
        r: "\r",
        n: "\n",
        t: "\t",
        u2028: "\u2028",
        u2029: "\u2029"
    };
    for (var I in g) {
        g[g[I]] = I
    }
    var j = /\\|'|\r|\n|\t|\u2028|\u2029/g;
    var C = /\\(\\|'|r|n|t|u2028|u2029)/g;
    var L = function(p) {
        return p.replace(C, function(O, P) {
            return g[P]
        })
    };
    N.template = function(S, R, P) {
        P = N.defaults(P || {}, N.templateSettings);
        var Q = "__p+='" + S.replace(j, function(T) {
            return "\\" + g[T]
        }).replace(P.escape || v, function(T, U) {
            return "'+\n_.escape(" + L(U) + ")+\n'"
        }).replace(P.interpolate || v, function(T, U) {
            return "'+\n(" + L(U) + ")+\n'"
        }).replace(P.evaluate || v, function(T, U) {
            return "';\n" + L(U) + "\n;__p+='"
        }) + "';\n";
        if (!P.variable) {
            Q = "with(obj||{}){\n" + Q + "}\n"
        }
        Q = "var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\n" + Q + "return __p;\n";
        var O = new Function(P.variable || "obj", "_", Q);
        if (R) {
            return O(R, N)
        }
        var p = function(T) {
            return O.call(this, T, N)
        };
        p.source = "function(" + (P.variable || "obj") + "){\n" + Q + "}";
        return p
    };
    N.chain = function(p) {
        return N(p).chain()
    };
    var u = function(p) {
        this._wrapped = p
    };
    N.prototype = u.prototype;
    var s = function(O, p) {
        return p ? N(O).chain() : O
    };
    var x = function(p, O) {
        u.prototype[p] = function() {
            var P = n.call(arguments);
            A.call(P, this._wrapped);
            return s(O.apply(N, P), this._chain)
        }
    };
    N.mixin(N);
    J(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function(p) {
        var O = D[p];
        u.prototype[p] = function() {
            var P = this._wrapped;
            O.apply(P, arguments);
            var Q = P.length;
            if ((p == "shift" || p == "splice") && Q === 0) {
                delete P[0]
            }
            return s(P, this._chain)
        }
    });
    J(["concat", "join", "slice"], function(p) {
        var O = D[p];
        u.prototype[p] = function() {
            return s(O.apply(this._wrapped, arguments), this._chain)
        }
    });
    u.prototype.chain = function() {
        this._chain = true;
        return this
    };
    u.prototype.value = function() {
        return this._wrapped
    }
}).call(this);
(function(a) {
    a(function() {
        function c(g, h) {
            try {
                if (a.cq.isAuthor() || window.location.hash == "#debug") {
                    if (typeof console != "undefined" && typeof console.log != "undefined") {
                        console.log(g);
                        console.log(h)
                    }
                    alert(g.name + ":\n" + g.message + ".\n" + h + ".")
                }
            } catch (j) {}
        }
        try {
            var d = a.browser.msie ? 0 : 250;

            function b(g) {
                try {
                    if (window.location.hash.length > 0 && a(window.location.hash, g).length > 0) {
                        window.location = (window.location + "").replace(window.location.hash, "")
                    }
                } catch (h) {
                    c(h, "Could not remove hash")
                }
            }
            try {
                a(".cq-carousel").each(function() {
                    var v = a(this);
                    var g = +a("var[title='play-delay']", this).text();
                    if (!g) {
                        g = 6000
                    }
                    var k = +a("var[title='transition-time']", this).text();
                    if (!k) {
                        k = 1000
                    }
                    var t = a(".cq-carousel-banners", this);
                    var o = a(".cq-carousel-banner-switch", this);
                    var u = o.find("a");
                    var p = a(".cq-carousel-banner-item", this);
                    var e = p.outerWidth();
                    var q = p.filter(":first");
                    var m = null;
                    var h = null;
                    var l = 0;
                    var n = a("a.cq-carousel-control-prev", this);
                    n.click(function() {
                        if (n.is(".cq-carousel-active")) {
                            a(u[(l + u.length - 1) % u.length]).click()
                        }
                        return false
                    });
                    var s = a("a.cq-carousel-control-next", this);
                    s.click(function() {
                        if (s.is(".cq-carousel-active")) {
                            a(u[(l + 1) % u.length]).click()
                        }
                        return false
                    });
                    if (u.length > 1) {
                        s.addClass("cq-carousel-active")
                    }

                    function j() {
                        r();
                        if (g > 0) {
                            h = setInterval(function() {
                                a(u[(l + 1) % u.length]).click()
                            }, g)
                        }
                    }

                    function r() {
                        if (h !== null) {
                            clearInterval(h);
                            h = null
                        }
                    }
                    if (d || a.browser.version > 6) {
                        q.css("left", 0)
                    } else {
                        q.show()
                    }
                    u.click(function() {
                        var y = a(this);
                        var w = p.filter(y.attr("href"));
                        var x = w.prevAll().length;
                        var z = (x > l || h !== null) ? 1 : -1;
                        if (!y.is(".cq-carousel-active")) {
                            u.removeClass("cq-carousel-active");
                            y.addClass("cq-carousel-active");
                            if (q.is(":animated")) {
                                q.stop(true, true);
                                m.stop(true, true)
                            }
                            if (d) {
                                w.css({
                                    left: z * e
                                }).animate({
                                    left: 0,
                                    opacity: 1
                                }, k);
                                q.animate({
                                    left: -z * e,
                                    opacity: 0
                                }, k)
                            } else {
                                if (a.browser.version > 6) {
                                    w.css({
                                        left: z * e,
                                        opacity: 1
                                    }).animate({
                                        left: 0
                                    }, k);
                                    q.animate({
                                        left: -z * e
                                    }, k)
                                } else {
                                    w.fadeIn();
                                    q.fadeOut()
                                }
                            }
                            m = q;
                            q = w;
                            l = x;
                            if (l > 0) {
                                n.addClass("cq-carousel-active")
                            } else {
                                n.removeClass("cq-carousel-active")
                            }
                            if (l < u.length - 1) {
                                s.addClass("cq-carousel-active")
                            } else {
                                s.removeClass("cq-carousel-active")
                            }
                        }
                        return false
                    }).each(function() {
                        var w = a(this);
                        w.attr("title", w.text())
                    }).filter(":first").addClass("cq-carousel-active");
                    j();
                    v.hover(function() {
                        r();
                        n.fadeIn();
                        s.fadeIn()
                    }, function() {
                        j();
                        n.fadeOut();
                        s.fadeOut()
                    });
                    b(this)
                })
            } catch (f) {
                c(f, "Could not initialize the banners")
            }
        } catch (f) {
            c(f, "Init failed")
        }
    })
})($CQ || $);
(function(d) {
    var b = d.event,
        a, c;
    a = b.special.debouncedresize = {
        setup: function() {
            d(this).on("resize", a.handler)
        },
        teardown: function() {
            d(this).off("resize", a.handler)
        },
        handler: function(j, e) {
            var h = this,
                g = arguments,
                f = function() {
                    j.type = "debouncedresize";
                    b.dispatch.apply(h, g)
                };
            if (c) {
                clearTimeout(c)
            }
            e ? f() : c = setTimeout(f, a.threshold)
        },
        threshold: 150
    }
})($CQ);
/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas. Dual MIT/BSD license */
window.matchMedia = window.matchMedia || (function(e, f) {
    var c, a = e.documentElement,
        b = a.firstElementChild || a.firstChild,
        d = e.createElement("body"),
        g = e.createElement("div");
    g.id = "mq-test-1";
    g.style.cssText = "position:absolute;top:-100em";
    d.style.background = "none";
    d.appendChild(g);
    return function(h) {
        g.innerHTML = '&shy;<style media="' + h + '"> #mq-test-1 { width: 42px; }</style>';
        a.insertBefore(d, b);
        c = g.offsetWidth === 42;
        a.removeChild(d);
        return {
            matches: c,
            media: h
        }
    }
}(document));
(function(b, a) {
    a.picturefill = function(c) {
        var d;
        if (c === d) {
            c = b("body")
        }
        b("div[data-picture]", c).each(function() {
            var f = this;
            var g = [];
            b("div[data-media]", f).each(function() {
                var j = b(this).attr("data-media");
                if (!j || (a.matchMedia && a.matchMedia(j).matches)) {
                    g.push(this)
                }
            });
            var e = b("img", f).first();
            if (g.length) {
                if (e.size() === 0) {
                    var h = b(f);
                    e = b("<img />").attr("alt", h.attr("data-alt")).appendTo(h)
                }
                e.attr("src", g.pop().getAttribute("data-src"))
            } else {
                e.remove()
            }
        })
    };
    b(function() {
        a.picturefill()
    });
    b(a).on("debouncedresize", function() {
        a.picturefill()
    })
}($CQ, this));

function cq5forms_isArray(a) {
    return typeof a.length == "number" && a.item
}

function cq5forms_showMsg(e, c, d, a) {
    var b = document.forms[e].elements[c];
    alert(d);
    if (cq5forms_isArray(b)) {
        if (!a) {
            a = 0
        }
        b[a].focus()
    } else {
        b.focus()
    }
}

function cq5forms_isEmpty(b) {
    if (b === undefined) {
        return false
    }
    var a = true;
    if (cq5forms_isArray(b)) {
        for (i = 0; i < b.length; i++) {
            if (b[i].type == "radio" || b[i].type == "checkbox") {
                if (b[i].checked) {
                    a = false
                }
            } else {
                if (b[i].localName == "option") {
                    if (b[i].selected) {
                        a = false
                    }
                } else {
                    if (b[i].value.length > 0) {
                        a = false
                    }
                }
            }
        }
    } else {
        if (b.type == "radio" || b.type == "checkbox") {
            if (b.checked) {
                a = false
            }
        } else {
            if (b.value.length > 0) {
                a = false
            }
        }
    }
    return a
}

function cq5forms_regcheck(f, d) {
    var b = false;
    var c = d.exec(f);
    if (c) {
        var a = f.length;
        var e = c[0].length;
        b = (e == a)
    }
    return b
}

function cq5forms_multiResourceChange(a, b, c) {
    if (!c) {
        if (!a) {
            a = window.event
        }
        if (a.keyCode < 48 && a.keyCode != 8 && a.keyCode != 46) {
            return
        }
    }
    try {
        document.getElementById(b).checked = true
    } catch (d) {}
}
if (typeof jQuery === "undefined") {
    throw new Error("Bootstrap's JavaScript requires jQuery")
} + function(b) {
    var a = b.fn.jquery.split(" ")[0].split(".");
    if ((a[0] < 2 && a[1] < 9) || (a[0] == 1 && a[1] == 9 && a[2] < 1)) {
        throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher")
    }
}(jQuery); + function(b) {
    function a() {
        var e = document.createElement("bootstrap");
        var d = {
            WebkitTransition: "webkitTransitionEnd",
            MozTransition: "transitionend",
            OTransition: "oTransitionEnd otransitionend",
            transition: "transitionend"
        };
        for (var c in d) {
            if (e.style[c] !== undefined) {
                return {
                    end: d[c]
                }
            }
        }
        return false
    }
    b.fn.emulateTransitionEnd = function(e) {
        var d = false;
        var c = this;
        b(this).one("bsTransitionEnd", function() {
            d = true
        });
        var f = function() {
            if (!d) {
                b(c).trigger(b.support.transition.end)
            }
        };
        setTimeout(f, e);
        return this
    };
    b(function() {
        b.support.transition = a();
        if (!b.support.transition) {
            return
        }
        b.event.special.bsTransitionEnd = {
            bindType: b.support.transition.end,
            delegateType: b.support.transition.end,
            handle: function(c) {
                if (b(c.target).is(this)) {
                    return c.handleObj.handler.apply(this, arguments)
                }
            }
        }
    })
}(jQuery); + function(e) {
    var d = '[data-dismiss="alert"]';
    var b = function(f) {
        e(f).on("click", d, this.close)
    };
    b.VERSION = "3.3.4";
    b.TRANSITION_DURATION = 150;
    b.prototype.close = function(k) {
        var j = e(this);
        var g = j.attr("data-target");
        if (!g) {
            g = j.attr("href");
            g = g && g.replace(/.*(?=#[^\s]*$)/, "")
        }
        var h = e(g);
        if (k) {
            k.preventDefault()
        }
        if (!h.length) {
            h = j.closest(".alert")
        }
        h.trigger(k = e.Event("close.bs.alert"));
        if (k.isDefaultPrevented()) {
            return
        }
        h.removeClass("in");

        function f() {
            h.detach().trigger("closed.bs.alert").remove()
        }
        e.support.transition && h.hasClass("fade") ? h.one("bsTransitionEnd", f).emulateTransitionEnd(b.TRANSITION_DURATION) : f()
    };

    function c(f) {
        return this.each(function() {
            var h = e(this);
            var g = h.data("bs.alert");
            if (!g) {
                h.data("bs.alert", (g = new b(this)))
            }
            if (typeof f == "string") {
                g[f].call(h)
            }
        })
    }
    var a = e.fn.alert;
    e.fn.alert = c;
    e.fn.alert.Constructor = b;
    e.fn.alert.noConflict = function() {
        e.fn.alert = a;
        return this
    };
    e(document).on("click.bs.alert.data-api", d, b.prototype.close)
}(jQuery); + function(d) {
    var b = function(f, e) {
        this.$element = d(f);
        this.options = d.extend({}, b.DEFAULTS, e);
        this.isLoading = false
    };
    b.VERSION = "3.3.4";
    b.DEFAULTS = {
        loadingText: "loading..."
    };
    b.prototype.setState = function(g) {
        var j = "disabled";
        var e = this.$element;
        var h = e.is("input") ? "val" : "html";
        var f = e.data();
        g = g + "Text";
        if (f.resetText == null) {
            e.data("resetText", e[h]())
        }
        setTimeout(d.proxy(function() {
            e[h](f[g] == null ? this.options[g] : f[g]);
            if (g == "loadingText") {
                this.isLoading = true;
                e.addClass(j).attr(j, j)
            } else {
                if (this.isLoading) {
                    this.isLoading = false;
                    e.removeClass(j).removeAttr(j)
                }
            }
        }, this), 0)
    };
    b.prototype.toggle = function() {
        var f = true;
        var e = this.$element.closest('[data-toggle="buttons"]');
        if (e.length) {
            var g = this.$element.find("input");
            if (g.prop("type") == "radio") {
                if (g.prop("checked") && this.$element.hasClass("active")) {
                    f = false
                } else {
                    e.find(".active").removeClass("active")
                }
            }
            if (f) {
                g.prop("checked", !this.$element.hasClass("active")).trigger("change")
            }
        } else {
            this.$element.attr("aria-pressed", !this.$element.hasClass("active"))
        }
        if (f) {
            this.$element.toggleClass("active")
        }
    };

    function c(e) {
        return this.each(function() {
            var h = d(this);
            var g = h.data("bs.button");
            var f = typeof e == "object" && e;
            if (!g) {
                h.data("bs.button", (g = new b(this, f)))
            }
            if (e == "toggle") {
                g.toggle()
            } else {
                if (e) {
                    g.setState(e)
                }
            }
        })
    }
    var a = d.fn.button;
    d.fn.button = c;
    d.fn.button.Constructor = b;
    d.fn.button.noConflict = function() {
        d.fn.button = a;
        return this
    };
    d(document).on("click.bs.button.data-api", '[data-toggle^="button"]', function(g) {
        var f = d(g.target);
        if (!f.hasClass("btn")) {
            f = f.closest(".btn")
        }
        c.call(f, "toggle");
        g.preventDefault()
    }).on("focus.bs.button.data-api blur.bs.button.data-api", '[data-toggle^="button"]', function(f) {
        d(f.target).closest(".btn").toggleClass("focus", /^focus(in)?$/.test(f.type))
    })
}(jQuery); + function(c) {
    var d = function(g, f) {
        this.$element = c(g);
        this.$indicators = this.$element.find(".carousel-indicators");
        this.options = f;
        this.paused = null;
        this.sliding = null;
        this.interval = null;
        this.$active = null;
        this.$items = null;
        this.options.keyboard && this.$element.on("keydown.bs.carousel", c.proxy(this.keydown, this));
        this.options.pause == "hover" && !("ontouchstart" in document.documentElement) && this.$element.on("mouseenter.bs.carousel", c.proxy(this.pause, this)).on("mouseleave.bs.carousel", c.proxy(this.cycle, this))
    };
    d.VERSION = "3.3.4";
    d.TRANSITION_DURATION = 600;
    d.DEFAULTS = {
        interval: 5000,
        pause: "hover",
        wrap: true,
        keyboard: true
    };
    d.prototype.keydown = function(f) {
        if (/input|textarea/i.test(f.target.tagName)) {
            return
        }
        switch (f.which) {
            case 37:
                this.prev();
                break;
            case 39:
                this.next();
                break;
            default:
                return
        }
        f.preventDefault()
    };
    d.prototype.cycle = function(f) {
        f || (this.paused = false);
        this.interval && clearInterval(this.interval);
        this.options.interval && !this.paused && (this.interval = setInterval(c.proxy(this.next, this), this.options.interval));
        return this
    };
    d.prototype.getItemIndex = function(f) {
        this.$items = f.parent().children(".item");
        return this.$items.index(f || this.$active)
    };
    d.prototype.getItemForDirection = function(k, j) {
        var f = this.getItemIndex(j);
        var g = (k == "prev" && f === 0) || (k == "next" && f == (this.$items.length - 1));
        if (g && !this.options.wrap) {
            return j
        }
        var l = k == "prev" ? -1 : 1;
        var h = (f + l) % this.$items.length;
        return this.$items.eq(h)
    };
    d.prototype.to = function(h) {
        var g = this;
        var f = this.getItemIndex(this.$active = this.$element.find(".item.active"));
        if (h > (this.$items.length - 1) || h < 0) {
            return
        }
        if (this.sliding) {
            return this.$element.one("slid.bs.carousel", function() {
                g.to(h)
            })
        }
        if (f == h) {
            return this.pause().cycle()
        }
        return this.slide(h > f ? "next" : "prev", this.$items.eq(h))
    };
    d.prototype.pause = function(f) {
        f || (this.paused = true);
        if (this.$element.find(".next, .prev").length && c.support.transition) {
            this.$element.trigger(c.support.transition.end);
            this.cycle(true)
        }
        this.interval = clearInterval(this.interval);
        return this
    };
    d.prototype.next = function() {
        if (this.sliding) {
            return
        }
        return this.slide("next")
    };
    d.prototype.prev = function() {
        if (this.sliding) {
            return
        }
        return this.slide("prev")
    };
    d.prototype.slide = function(n, j) {
        var q = this.$element.find(".item.active");
        var g = j || this.getItemForDirection(n, q);
        var l = this.interval;
        var o = n == "next" ? "left" : "right";
        var k = this;
        if (g.hasClass("active")) {
            return (this.sliding = false)
        }
        var m = g[0];
        var f = c.Event("slide.bs.carousel", {
            relatedTarget: m,
            direction: o
        });
        this.$element.trigger(f);
        if (f.isDefaultPrevented()) {
            return
        }
        this.sliding = true;
        l && this.pause();
        if (this.$indicators.length) {
            this.$indicators.find(".active").removeClass("active");
            var h = c(this.$indicators.children()[this.getItemIndex(g)]);
            h && h.addClass("active")
        }
        var p = c.Event("slid.bs.carousel", {
            relatedTarget: m,
            direction: o
        });
        if (c.support.transition && this.$element.hasClass("slide")) {
            g.addClass(n);
            g[0].offsetWidth;
            q.addClass(o);
            g.addClass(o);
            q.one("bsTransitionEnd", function() {
                g.removeClass([n, o].join(" ")).addClass("active");
                q.removeClass(["active", o].join(" "));
                k.sliding = false;
                setTimeout(function() {
                    k.$element.trigger(p)
                }, 0)
            }).emulateTransitionEnd(d.TRANSITION_DURATION)
        } else {
            q.removeClass("active");
            g.addClass("active");
            this.sliding = false;
            this.$element.trigger(p)
        }
        l && this.cycle();
        return this
    };

    function b(f) {
        return this.each(function() {
            var k = c(this);
            var j = k.data("bs.carousel");
            var g = c.extend({}, d.DEFAULTS, k.data(), typeof f == "object" && f);
            var h = typeof f == "string" ? f : g.slide;
            if (!j) {
                k.data("bs.carousel", (j = new d(this, g)))
            }
            if (typeof f == "number") {
                j.to(f)
            } else {
                if (h) {
                    j[h]()
                } else {
                    if (g.interval) {
                        j.pause().cycle()
                    }
                }
            }
        })
    }
    var a = c.fn.carousel;
    c.fn.carousel = b;
    c.fn.carousel.Constructor = d;
    c.fn.carousel.noConflict = function() {
        c.fn.carousel = a;
        return this
    };
    var e = function(l) {
        var g;
        var k = c(this);
        var f = c(k.attr("data-target") || (g = k.attr("href")) && g.replace(/.*(?=#[^\s]+$)/, ""));
        if (!f.hasClass("carousel")) {
            return
        }
        var h = c.extend({}, f.data(), k.data());
        var j = k.attr("data-slide-to");
        if (j) {
            h.interval = false
        }
        b.call(f, h);
        if (j) {
            f.data("bs.carousel").to(j)
        }
        l.preventDefault()
    };
    c(document).on("click.bs.carousel.data-api", "[data-slide]", e).on("click.bs.carousel.data-api", "[data-slide-to]", e);
    c(window).on("load", function() {
        c('[data-ride="carousel"]').each(function() {
            var f = c(this);
            b.call(f, f.data())
        })
    })
}(jQuery); + function(d) {
    var e = function(g, f) {
        this.$element = d(g);
        this.options = d.extend({}, e.DEFAULTS, f);
        this.$trigger = d('[data-toggle="collapse"][href="#' + g.id + '"],[data-toggle="collapse"][data-target="#' + g.id + '"]');
        this.transitioning = null;
        if (this.options.parent) {
            this.$parent = this.getParent()
        } else {
            this.addAriaAndCollapsedClass(this.$element, this.$trigger)
        }
        if (this.options.toggle) {
            this.toggle()
        }
    };
    e.VERSION = "3.3.4";
    e.TRANSITION_DURATION = 350;
    e.DEFAULTS = {
        toggle: true
    };
    e.prototype.dimension = function() {
        var f = this.$element.hasClass("width");
        return f ? "width" : "height"
    };
    e.prototype.show = function() {
        if (this.transitioning || this.$element.hasClass("in")) {
            return
        }
        var h;
        var k = this.$parent && this.$parent.children(".panel").children(".in, .collapsing");
        if (k && k.length) {
            h = k.data("bs.collapse");
            if (h && h.transitioning) {
                return
            }
        }
        var g = d.Event("show.bs.collapse");
        this.$element.trigger(g);
        if (g.isDefaultPrevented()) {
            return
        }
        if (k && k.length) {
            b.call(k, "hide");
            h || k.data("bs.collapse", null)
        }
        var l = this.dimension();
        this.$element.removeClass("collapse").addClass("collapsing")[l](0).attr("aria-expanded", true);
        this.$trigger.removeClass("collapsed").attr("aria-expanded", true);
        this.transitioning = 1;
        var f = function() {
            this.$element.removeClass("collapsing").addClass("collapse in")[l]("");
            this.transitioning = 0;
            var m = this.$element.attr("id");
            if (m.indexOf("navbar") != -1) {
                d("#mega-open").removeAttr("class");
                d("#mega-open").addClass("phone-mega-open")
            }
            this.$element.trigger("shown.bs.collapse")
        };
        if (!d.support.transition) {
            return f.call(this)
        }
        var j = d.camelCase(["scroll", l].join("-"));
        this.$element.one("bsTransitionEnd", d.proxy(f, this)).emulateTransitionEnd(e.TRANSITION_DURATION)[l](this.$element[0][j])
    };
    e.prototype.hide = function() {
        if (this.transitioning || !this.$element.hasClass("in")) {
            return
        }
        var g = d.Event("hide.bs.collapse");
        this.$element.trigger(g);
        if (g.isDefaultPrevented()) {
            return
        }
        var j = this.dimension();
        this.$element[j](this.$element[j]())[0].offsetHeight;
        this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded", false);
        var h = this.$element.attr("id");
        if (h.indexOf("navbar") != -1) {
            d("#mega-open").removeAttr("class");
            d("#mega-open").addClass("phone-empty")
        }
        this.$trigger.addClass("collapsed").attr("aria-expanded", false);
        this.transitioning = 1;
        var f = function() {
            this.transitioning = 0;
            this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")
        };
        if (!d.support.transition) {
            return f.call(this)
        }
        this.$element[j](0).one("bsTransitionEnd", d.proxy(f, this)).emulateTransitionEnd(e.TRANSITION_DURATION)
    };
    e.prototype.toggle = function() {
        this[this.$element.hasClass("in") ? "hide" : "show"]()
    };
    e.prototype.getParent = function() {
        return d(this.options.parent).find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]').each(d.proxy(function(h, g) {
            var f = d(g);
            this.addAriaAndCollapsedClass(c(f), f)
        }, this)).end()
    };
    e.prototype.addAriaAndCollapsedClass = function(g, f) {
        var j = g.hasClass("in");
        g.attr("aria-expanded", j);
        f.toggleClass("collapsed", !j).attr("aria-expanded", j);
        var h = g.attr("id");
        if (h.indexOf("navbar") != -1) {
            d("#mega-open").removeAttr("class");
            d("#mega-open").addClass("phone-mega-open")
        }
    };

    function c(f) {
        var g;
        var h = f.attr("data-target") || (g = f.attr("href")) && g.replace(/.*(?=#[^\s]+$)/, "");
        return d(h)
    }

    function b(f) {
        return this.each(function() {
            var j = d(this);
            var h = j.data("bs.collapse");
            var g = d.extend({}, e.DEFAULTS, j.data(), typeof f == "object" && f);
            if (!h && g.toggle && /show|hide/.test(f)) {
                g.toggle = false
            }
            if (!h) {
                j.data("bs.collapse", (h = new e(this, g)))
            }
            if (typeof f == "string") {
                h[f]()
            }
        })
    }
    var a = d.fn.collapse;
    d.fn.collapse = b;
    d.fn.collapse.Constructor = e;
    d.fn.collapse.noConflict = function() {
        d.fn.collapse = a;
        return this
    };
    d(document).on("click.bs.collapse.data-api", '[data-toggle="collapse"]', function(k) {
        var j = d(this);
        if (!j.attr("data-target")) {
            k.preventDefault()
        }
        var f = c(j);
        var h = f.data("bs.collapse");
        var g = h ? "toggle" : j.data();
        b.call(f, g)
    })
}(jQuery); + function(h) {
    var e = ".dropdown-backdrop";
    var b = '[data-toggle="dropdown"]';
    var a = function(j) {
        h(j).on("click.bs.dropdown", this.toggle)
    };
    a.VERSION = "3.3.4";
    a.prototype.toggle = function(o) {
        var n = h(this);
        if (n.is(".disabled, :disabled")) {
            return
        }
        var m = f(n);
        var l = m.hasClass("open");
        d();
        if (!l) {
            if ("ontouchstart" in document.documentElement && !m.closest(".navbar-nav").length) {
                h('<div class="dropdown-backdrop"/>').insertAfter(h(this)).on("click", d)
            }
            var j = {
                relatedTarget: this
            };
            m.trigger(o = h.Event("show.bs.dropdown", j));
            if (o.isDefaultPrevented()) {
                return
            }
            n.trigger("focus").attr("aria-expanded", "true");
            m.toggleClass("open").trigger("shown.bs.dropdown", j);
            var k = n.attr("id");
            if (!n.is(".multiselect")) {
                h("#mega-open").removeAttr("class");
                h("#mega-open").addClass(k);
                h("#mega-open").addClass("phone-mega-open")
            }
        } else {
            h("#mega-open").removeAttr("class");
            h("#mega-open").addClass("phone-empty")
        }
        return false
    };
    a.prototype.keydown = function(n) {
        if (!/(38|40|27|32)/.test(n.which) || /input|textarea/i.test(n.target.tagName)) {
            return
        }
        var m = h(this);
        n.preventDefault();
        n.stopPropagation();
        if (m.is(".disabled, :disabled")) {
            return
        }
        var l = f(m);
        var k = l.hasClass("open");
        if ((!k && n.which != 27) || (k && n.which == 27)) {
            if (n.which == 27) {
                l.find(b).trigger("focus")
            }
            return m.trigger("click")
        }
        var o = " li:not(.disabled):visible a";
        var p = l.find('[role="menu"]' + o + ', [role="listbox"]' + o);
        if (!p.length) {
            return
        }
        var j = p.index(n.target);
        if (n.which == 38 && j > 0) {
            j--
        }
        if (n.which == 40 && j < p.length - 1) {
            j++
        }
        if (!~j) {
            j = 0
        }
        p.eq(j).trigger("focus")
    };

    function d(j) {
        if (j && j.which === 3) {
            return
        }
        h(e).remove();
        h(b).each(function() {
            var m = h(this);
            var l = f(m);
            var k = {
                relatedTarget: this
            };
            if (!l.hasClass("open")) {
                return
            }
            l.trigger(j = h.Event("hide.bs.dropdown", k));
            if (j.isDefaultPrevented()) {
                return
            }
            m.attr("aria-expanded", "false");
            l.removeClass("open").trigger("hidden.bs.dropdown", k);
            h("#mega-open").removeAttr("class")
        })
    }

    function f(l) {
        var j = l.attr("data-target");
        if (!j) {
            j = l.attr("href");
            j = j && /#[A-Za-z]/.test(j) && j.replace(/.*(?=#[^\s]*$)/, "")
        }
        var k = j && h(j);
        return k && k.length ? k : l.parent()
    }

    function g(j) {
        return this.each(function() {
            var l = h(this);
            var k = l.data("bs.dropdown");
            if (!k) {
                l.data("bs.dropdown", (k = new a(this)))
            }
            if (typeof j == "string") {
                k[j].call(l)
            }
        })
    }
    var c = h.fn.dropdown;
    h.fn.dropdown = g;
    h.fn.dropdown.Constructor = a;
    h.fn.dropdown.noConflict = function() {
        h.fn.dropdown = c;
        return this
    };
    h(document).on("click.bs.dropdown.data-api", d).on("click.bs.dropdown.data-api", ".dropdown form", function(j) {
        j.stopPropagation()
    }).on("click.bs.dropdown.data-api", b, a.prototype.toggle).on("keydown.bs.dropdown.data-api", b, a.prototype.keydown).on("keydown.bs.dropdown.data-api", '[role="menu"]', a.prototype.keydown).on("keydown.bs.dropdown.data-api", '[role="listbox"]', a.prototype.keydown)
}(jQuery); + function(d) {
    var b = function(f, e) {
        this.options = e;
        this.$body = d(document.body);
        this.$element = d(f);
        this.$dialog = this.$element.find(".modal-dialog");
        this.$backdrop = null;
        this.isShown = null;
        this.originalBodyPad = null;
        this.scrollbarWidth = 0;
        this.ignoreBackdropClick = false;
        if (this.options.remote) {
            this.$element.find(".modal-content").load(this.options.remote, d.proxy(function() {
                this.$element.trigger("loaded.bs.modal")
            }, this))
        }
    };
    b.VERSION = "3.3.4";
    b.TRANSITION_DURATION = 300;
    b.BACKDROP_TRANSITION_DURATION = 150;
    b.DEFAULTS = {
        backdrop: true,
        keyboard: true,
        show: true
    };
    b.prototype.toggle = function(e) {
        return this.isShown ? this.hide() : this.show(e)
    };
    b.prototype.show = function(h) {
        var f = this;
        var g = d.Event("show.bs.modal", {
            relatedTarget: h
        });
        this.$element.trigger(g);
        if (this.isShown || g.isDefaultPrevented()) {
            return
        }
        this.isShown = true;
        this.checkScrollbar();
        this.setScrollbar();
        this.$body.addClass("modal-open");
        this.escape();
        this.resize();
        this.$element.on("click.dismiss.bs.modal", '[data-dismiss="modal"]', d.proxy(this.hide, this));
        this.$dialog.on("mousedown.dismiss.bs.modal", function() {
            f.$element.one("mouseup.dismiss.bs.modal", function(j) {
                if (d(j.target).is(f.$element)) {
                    f.ignoreBackdropClick = true
                }
            })
        });
        this.backdrop(function() {
            var k = d.support.transition && f.$element.hasClass("fade");
            if (!f.$element.parent().length) {
                f.$element.appendTo(f.$body)
            }
            f.$element.show().scrollTop(0);
            f.adjustDialog();
            if (k) {
                f.$element[0].offsetWidth
            }
            f.$element.addClass("in").attr("aria-hidden", false);
            f.enforceFocus();
            var j = d.Event("shown.bs.modal", {
                relatedTarget: h
            });
            k ? f.$dialog.one("bsTransitionEnd", function() {
                f.$element.trigger("focus").trigger(j)
            }).emulateTransitionEnd(b.TRANSITION_DURATION) : f.$element.trigger("focus").trigger(j)
        })
    };
    b.prototype.hide = function(f) {
        if (f) {
            f.preventDefault()
        }
        f = d.Event("hide.bs.modal");
        this.$element.trigger(f);
        if (!this.isShown || f.isDefaultPrevented()) {
            return
        }
        this.isShown = false;
        this.escape();
        this.resize();
        d(document).off("focusin.bs.modal");
        this.$element.removeClass("in").attr("aria-hidden", true).off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal");
        this.$dialog.off("mousedown.dismiss.bs.modal");
        d.support.transition && this.$element.hasClass("fade") ? this.$element.one("bsTransitionEnd", d.proxy(this.hideModal, this)).emulateTransitionEnd(b.TRANSITION_DURATION) : this.hideModal()
    };
    b.prototype.enforceFocus = function() {
        d(document).off("focusin.bs.modal").on("focusin.bs.modal", d.proxy(function(f) {
            if (this.$element[0] !== f.target && !this.$element.has(f.target).length) {
                this.$element.trigger("focus")
            }
        }, this))
    };
    b.prototype.escape = function() {
        if (this.isShown && this.options.keyboard) {
            this.$element.on("keydown.dismiss.bs.modal", d.proxy(function(f) {
                f.which == 27 && this.hide()
            }, this))
        } else {
            if (!this.isShown) {
                this.$element.off("keydown.dismiss.bs.modal")
            }
        }
    };
    b.prototype.resize = function() {
        if (this.isShown) {
            d(window).on("resize.bs.modal", d.proxy(this.handleUpdate, this))
        } else {
            d(window).off("resize.bs.modal")
        }
    };
    b.prototype.hideModal = function() {
        var e = this;
        this.$element.hide();
        this.backdrop(function() {
            e.$body.removeClass("modal-open");
            e.resetAdjustments();
            e.resetScrollbar();
            e.$element.trigger("hidden.bs.modal")
        })
    };
    b.prototype.removeBackdrop = function() {
        this.$backdrop && this.$backdrop.remove();
        this.$backdrop = null
    };
    b.prototype.backdrop = function(j) {
        var h = this;
        var f = this.$element.hasClass("fade") ? "fade" : "";
        if (this.isShown && this.options.backdrop) {
            var e = d.support.transition && f;
            this.$backdrop = d('<div class="modal-backdrop ' + f + '" />').appendTo(this.$body);
            this.$element.on("click.dismiss.bs.modal", d.proxy(function(k) {
                if (this.ignoreBackdropClick) {
                    this.ignoreBackdropClick = false;
                    return
                }
                if (k.target !== k.currentTarget) {
                    return
                }
                this.options.backdrop == "static" ? this.$element[0].focus() : this.hide()
            }, this));
            if (e) {
                this.$backdrop[0].offsetWidth
            }
            this.$backdrop.addClass("in");
            if (!j) {
                return
            }
            e ? this.$backdrop.one("bsTransitionEnd", j).emulateTransitionEnd(b.BACKDROP_TRANSITION_DURATION) : j()
        } else {
            if (!this.isShown && this.$backdrop) {
                this.$backdrop.removeClass("in");
                var g = function() {
                    h.removeBackdrop();
                    j && j()
                };
                d.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one("bsTransitionEnd", g).emulateTransitionEnd(b.BACKDROP_TRANSITION_DURATION) : g()
            } else {
                if (j) {
                    j()
                }
            }
        }
    };
    b.prototype.handleUpdate = function() {
        this.adjustDialog()
    };
    b.prototype.adjustDialog = function() {
        var e = this.$element[0].scrollHeight > document.documentElement.clientHeight;
        this.$element.css({
            paddingLeft: !this.bodyIsOverflowing && e ? this.scrollbarWidth : "",
            paddingRight: this.bodyIsOverflowing && !e ? this.scrollbarWidth : ""
        })
    };
    b.prototype.resetAdjustments = function() {
        this.$element.css({
            paddingLeft: "",
            paddingRight: ""
        })
    };
    b.prototype.checkScrollbar = function() {
        var f = window.innerWidth;
        if (!f) {
            var e = document.documentElement.getBoundingClientRect();
            f = e.right - Math.abs(e.left)
        }
        this.bodyIsOverflowing = document.body.clientWidth < f;
        this.scrollbarWidth = this.measureScrollbar()
    };
    b.prototype.setScrollbar = function() {
        var e = parseInt((this.$body.css("padding-right") || 0), 10);
        this.originalBodyPad = document.body.style.paddingRight || "";
        if (this.bodyIsOverflowing) {
            this.$body.css("padding-right", e + this.scrollbarWidth)
        }
    };
    b.prototype.resetScrollbar = function() {
        this.$body.css("padding-right", this.originalBodyPad)
    };
    b.prototype.measureScrollbar = function() {
        var f = document.createElement("div");
        f.className = "modal-scrollbar-measure";
        this.$body.append(f);
        var e = f.offsetWidth - f.clientWidth;
        this.$body[0].removeChild(f);
        return e
    };

    function c(e, f) {
        return this.each(function() {
            var j = d(this);
            var h = j.data("bs.modal");
            var g = d.extend({}, b.DEFAULTS, j.data(), typeof e == "object" && e);
            if (!h) {
                j.data("bs.modal", (h = new b(this, g)))
            }
            if (typeof e == "string") {
                h[e](f)
            } else {
                if (g.show) {
                    h.show(f)
                }
            }
        })
    }
    var a = d.fn.modal;
    d.fn.modal = c;
    d.fn.modal.Constructor = b;
    d.fn.modal.noConflict = function() {
        d.fn.modal = a;
        return this
    };
    d(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function(k) {
        var j = d(this);
        var g = j.attr("href");
        var f = d(j.attr("data-target") || (g && g.replace(/.*(?=#[^\s]+$)/, "")));
        var h = f.data("bs.modal") ? "toggle" : d.extend({
            remote: !/#/.test(g) && g
        }, f.data(), j.data());
        if (j.is("a")) {
            k.preventDefault()
        }
        f.one("show.bs.modal", function(e) {
            if (e.isDefaultPrevented()) {
                return
            }
            f.one("hidden.bs.modal", function() {
                j.is(":visible") && j.trigger("focus")
            })
        });
        c.call(f, h, this)
    })
}(jQuery); + function(d) {
    var c = function(f, e) {
        this.type = null;
        this.options = null;
        this.enabled = null;
        this.timeout = null;
        this.hoverState = null;
        this.$element = null;
        this.init("tooltip", f, e)
    };
    c.VERSION = "3.3.4";
    c.TRANSITION_DURATION = 150;
    c.DEFAULTS = {
        animation: true,
        placement: "top",
        selector: false,
        template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
        trigger: "hover focus",
        title: "",
        delay: 0,
        html: false,
        container: false,
        viewport: {
            selector: "body",
            padding: 0
        }
    };
    c.prototype.init = function(l, j, g) {
        this.enabled = true;
        this.type = l;
        this.$element = d(j);
        this.options = this.getOptions(g);
        this.$viewport = this.options.viewport && d(this.options.viewport.selector || this.options.viewport);
        if (this.$element[0] instanceof document.constructor && !this.options.selector) {
            throw new Error("`selector` option must be specified when initializing " + this.type + " on the window.document object!")
        }
        var k = this.options.trigger.split(" ");
        for (var h = k.length; h--;) {
            var f = k[h];
            if (f == "click") {
                this.$element.on("click." + this.type, this.options.selector, d.proxy(this.toggle, this))
            } else {
                if (f != "manual") {
                    var m = f == "hover" ? "mouseenter" : "focusin";
                    var e = f == "hover" ? "mouseleave" : "focusout";
                    this.$element.on(m + "." + this.type, this.options.selector, d.proxy(this.enter, this));
                    this.$element.on(e + "." + this.type, this.options.selector, d.proxy(this.leave, this))
                }
            }
        }
        this.options.selector ? (this._options = d.extend({}, this.options, {
            trigger: "manual",
            selector: ""
        })) : this.fixTitle()
    };
    c.prototype.getDefaults = function() {
        return c.DEFAULTS
    };
    c.prototype.getOptions = function(e) {
        e = d.extend({}, this.getDefaults(), this.$element.data(), e);
        if (e.delay && typeof e.delay == "number") {
            e.delay = {
                show: e.delay,
                hide: e.delay
            }
        }
        return e
    };
    c.prototype.getDelegateOptions = function() {
        var e = {};
        var f = this.getDefaults();
        this._options && d.each(this._options, function(g, h) {
            if (f[g] != h) {
                e[g] = h
            }
        });
        return e
    };
    c.prototype.enter = function(f) {
        var e = f instanceof this.constructor ? f : d(f.currentTarget).data("bs." + this.type);
        if (e && e.$tip && e.$tip.is(":visible")) {
            e.hoverState = "in";
            return
        }
        if (!e) {
            e = new this.constructor(f.currentTarget, this.getDelegateOptions());
            d(f.currentTarget).data("bs." + this.type, e)
        }
        clearTimeout(e.timeout);
        e.hoverState = "in";
        if (!e.options.delay || !e.options.delay.show) {
            return e.show()
        }
        e.timeout = setTimeout(function() {
            if (e.hoverState == "in") {
                e.show()
            }
        }, e.options.delay.show)
    };
    c.prototype.leave = function(f) {
        var e = f instanceof this.constructor ? f : d(f.currentTarget).data("bs." + this.type);
        if (!e) {
            e = new this.constructor(f.currentTarget, this.getDelegateOptions());
            d(f.currentTarget).data("bs." + this.type, e)
        }
        clearTimeout(e.timeout);
        e.hoverState = "out";
        if (!e.options.delay || !e.options.delay.hide) {
            return e.hide()
        }
        e.timeout = setTimeout(function() {
            if (e.hoverState == "out") {
                e.hide()
            }
        }, e.options.delay.hide)
    };
    c.prototype.show = function() {
        var q = d.Event("show.bs." + this.type);
        if (this.hasContent() && this.enabled) {
            this.$element.trigger(q);
            var r = d.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]);
            if (q.isDefaultPrevented() || !r) {
                return
            }
            var p = this;
            var n = this.tip();
            var j = this.getUID(this.type);
            this.setContent();
            n.attr("id", j);
            this.$element.attr("aria-describedby", j);
            if (this.options.animation) {
                n.addClass("fade")
            }
            var m = typeof this.options.placement == "function" ? this.options.placement.call(this, n[0], this.$element[0]) : this.options.placement;
            var u = /\s?auto?\s?/i;
            var v = u.test(m);
            if (v) {
                m = m.replace(u, "") || "top"
            }
            n.detach().css({
                top: 0,
                left: 0,
                display: "block"
            }).addClass(m).data("bs." + this.type, this);
            this.options.container ? n.appendTo(this.options.container) : n.insertAfter(this.$element);
            var s = this.getPosition();
            var f = n[0].offsetWidth;
            var o = n[0].offsetHeight;
            if (v) {
                var l = m;
                var t = this.options.container ? d(this.options.container) : this.$element.parent();
                var h = this.getPosition(t);
                m = m == "bottom" && s.bottom + o > h.bottom ? "top" : m == "top" && s.top - o < h.top ? "bottom" : m == "right" && s.right + f > h.width ? "left" : m == "left" && s.left - f < h.left ? "right" : m;
                n.removeClass(l).addClass(m)
            }
            var k = this.getCalculatedOffset(m, s, f, o);
            this.applyPlacement(k, m);
            var g = function() {
                var e = p.hoverState;
                p.$element.trigger("shown.bs." + p.type);
                p.hoverState = null;
                if (e == "out") {
                    p.leave(p)
                }
            };
            d.support.transition && this.$tip.hasClass("fade") ? n.one("bsTransitionEnd", g).emulateTransitionEnd(c.TRANSITION_DURATION) : g()
        }
    };
    c.prototype.applyPlacement = function(k, l) {
        var m = this.tip();
        var g = m[0].offsetWidth;
        var r = m[0].offsetHeight;
        var f = parseInt(m.css("margin-top"), 10);
        var j = parseInt(m.css("margin-left"), 10);
        if (isNaN(f)) {
            f = 0
        }
        if (isNaN(j)) {
            j = 0
        }
        k.top = k.top + f;
        k.left = k.left + j;
        d.offset.setOffset(m[0], d.extend({
            using: function(s) {
                m.css({
                    top: Math.round(s.top),
                    left: Math.round(s.left)
                })
            }
        }, k), 0);
        m.addClass("in");
        var e = m[0].offsetWidth;
        var n = m[0].offsetHeight;
        if (l == "top" && n != r) {
            k.top = k.top + r - n
        }
        var q = this.getViewportAdjustedDelta(l, k, e, n);
        if (q.left) {
            k.left += q.left
        } else {
            k.top += q.top
        }
        var o = /top|bottom/.test(l);
        var h = o ? q.left * 2 - g + e : q.top * 2 - r + n;
        var p = o ? "offsetWidth" : "offsetHeight";
        m.offset(k);
        this.replaceArrow(h, m[0][p], o)
    };
    c.prototype.replaceArrow = function(g, e, f) {
        this.arrow().css(f ? "left" : "top", 50 * (1 - g / e) + "%").css(f ? "top" : "left", "")
    };
    c.prototype.setContent = function() {
        var f = this.tip();
        var e = this.getTitle();
        f.find(".tooltip-inner")[this.options.html ? "html" : "text"](e);
        f.removeClass("fade in top bottom left right")
    };
    c.prototype.hide = function(k) {
        var g = this;
        var j = d(this.$tip);
        var h = d.Event("hide.bs." + this.type);

        function f() {
            if (g.hoverState != "in") {
                j.detach()
            }
            g.$element.removeAttr("aria-describedby").trigger("hidden.bs." + g.type);
            k && k()
        }
        this.$element.trigger(h);
        if (h.isDefaultPrevented()) {
            return
        }
        j.removeClass("in");
        d.support.transition && j.hasClass("fade") ? j.one("bsTransitionEnd", f).emulateTransitionEnd(c.TRANSITION_DURATION) : f();
        this.hoverState = null;
        return this
    };
    c.prototype.fixTitle = function() {
        var e = this.$element;
        if (e.attr("title") || typeof(e.attr("data-original-title")) != "string") {
            e.attr("data-original-title", e.attr("title") || "").attr("title", "")
        }
    };
    c.prototype.hasContent = function() {
        return this.getTitle()
    };
    c.prototype.getPosition = function(g) {
        g = g || this.$element;
        var j = g[0];
        var f = j.tagName == "BODY";
        var h = j.getBoundingClientRect();
        if (h.width == null) {
            h = d.extend({}, h, {
                width: h.right - h.left,
                height: h.bottom - h.top
            })
        }
        var l = f ? {
            top: 0,
            left: 0
        } : g.offset();
        var e = {
            scroll: f ? document.documentElement.scrollTop || document.body.scrollTop : g.scrollTop()
        };
        var k = f ? {
            width: d(window).width(),
            height: d(window).height()
        } : null;
        return d.extend({}, h, e, k, l)
    };
    c.prototype.getCalculatedOffset = function(e, h, f, g) {
        return e == "bottom" ? {
            top: h.top + h.height,
            left: h.left + h.width / 2 - f / 2
        } : e == "top" ? {
            top: h.top - g,
            left: h.left + h.width / 2 - f / 2
        } : e == "left" ? {
            top: h.top + h.height / 2 - g / 2,
            left: h.left - f
        } : {
            top: h.top + h.height / 2 - g / 2,
            left: h.left + h.width
        }
    };
    c.prototype.getViewportAdjustedDelta = function(h, l, e, k) {
        var n = {
            top: 0,
            left: 0
        };
        if (!this.$viewport) {
            return n
        }
        var g = this.options.viewport && this.options.viewport.padding || 0;
        var m = this.getPosition(this.$viewport);
        if (/right|left/.test(h)) {
            var o = l.top - g - m.scroll;
            var j = l.top + g - m.scroll + k;
            if (o < m.top) {
                n.top = m.top - o
            } else {
                if (j > m.top + m.height) {
                    n.top = m.top + m.height - j
                }
            }
        } else {
            var p = l.left - g;
            var f = l.left + g + e;
            if (p < m.left) {
                n.left = m.left - p
            } else {
                if (f > m.width) {
                    n.left = m.left + m.width - f
                }
            }
        }
        return n
    };
    c.prototype.getTitle = function() {
        var g;
        var e = this.$element;
        var f = this.options;
        g = e.attr("data-original-title") || (typeof f.title == "function" ? f.title.call(e[0]) : f.title);
        return g
    };
    c.prototype.getUID = function(e) {
        do {
            e += ~~(Math.random() * 1000000)
        } while (document.getElementById(e));
        return e
    };
    c.prototype.tip = function() {
        return (this.$tip = this.$tip || d(this.options.template))
    };
    c.prototype.arrow = function() {
        return (this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow"))
    };
    c.prototype.enable = function() {
        this.enabled = true
    };
    c.prototype.disable = function() {
        this.enabled = false
    };
    c.prototype.toggleEnabled = function() {
        this.enabled = !this.enabled
    };
    c.prototype.toggle = function(g) {
        var f = this;
        if (g) {
            f = d(g.currentTarget).data("bs." + this.type);
            if (!f) {
                f = new this.constructor(g.currentTarget, this.getDelegateOptions());
                d(g.currentTarget).data("bs." + this.type, f)
            }
        }
        f.tip().hasClass("in") ? f.leave(f) : f.enter(f)
    };
    c.prototype.destroy = function() {
        var e = this;
        clearTimeout(this.timeout);
        this.hide(function() {
            e.$element.off("." + e.type).removeData("bs." + e.type)
        })
    };

    function b(e) {
        return this.each(function() {
            var h = d(this);
            var g = h.data("bs.tooltip");
            var f = typeof e == "object" && e;
            if (!g && /destroy|hide/.test(e)) {
                return
            }
            if (!g) {
                h.data("bs.tooltip", (g = new c(this, f)))
            }
            if (typeof e == "string") {
                g[e]()
            }
        })
    }
    var a = d.fn.tooltip;
    d.fn.tooltip = b;
    d.fn.tooltip.Constructor = c;
    d.fn.tooltip.noConflict = function() {
        d.fn.tooltip = a;
        return this
    }
}(jQuery); + function(d) {
    var c = function(f, e) {
        this.init("popover", f, e)
    };
    if (!d.fn.tooltip) {
        throw new Error("Popover requires tooltip.js")
    }
    c.VERSION = "3.3.4";
    c.DEFAULTS = d.extend({}, d.fn.tooltip.Constructor.DEFAULTS, {
        placement: "right",
        trigger: "click",
        content: "",
        template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
    });
    c.prototype = d.extend({}, d.fn.tooltip.Constructor.prototype);
    c.prototype.constructor = c;
    c.prototype.getDefaults = function() {
        return c.DEFAULTS
    };
    c.prototype.setContent = function() {
        var g = this.tip();
        var f = this.getTitle();
        var e = this.getContent();
        g.find(".popover-title")[this.options.html ? "html" : "text"](f);
        g.find(".popover-content").children().detach().end()[this.options.html ? (typeof e == "string" ? "html" : "append") : "text"](e);
        g.removeClass("fade top bottom left right in");
        if (!g.find(".popover-title").html()) {
            g.find(".popover-title").hide()
        }
    };
    c.prototype.hasContent = function() {
        return this.getTitle() || this.getContent()
    };
    c.prototype.getContent = function() {
        var e = this.$element;
        var f = this.options;
        return e.attr("data-content") || (typeof f.content == "function" ? f.content.call(e[0]) : f.content)
    };
    c.prototype.arrow = function() {
        return (this.$arrow = this.$arrow || this.tip().find(".arrow"))
    };

    function b(e) {
        return this.each(function() {
            var h = d(this);
            var g = h.data("bs.popover");
            var f = typeof e == "object" && e;
            if (!g && /destroy|hide/.test(e)) {
                return
            }
            if (!g) {
                h.data("bs.popover", (g = new c(this, f)))
            }
            if (typeof e == "string") {
                g[e]()
            }
        })
    }
    var a = d.fn.popover;
    d.fn.popover = b;
    d.fn.popover.Constructor = c;
    d.fn.popover.noConflict = function() {
        d.fn.popover = a;
        return this
    }
}(jQuery); + function(d) {
    function c(f, e) {
        this.$body = d(document.body);
        this.$scrollElement = d(f).is(document.body) ? d(window) : d(f);
        this.options = d.extend({}, c.DEFAULTS, e);
        this.selector = (this.options.target || "") + " .nav li > a";
        this.offsets = [];
        this.targets = [];
        this.activeTarget = null;
        this.scrollHeight = 0;
        this.$scrollElement.on("scroll.bs.scrollspy", d.proxy(this.process, this));
        this.refresh();
        this.process()
    }
    c.VERSION = "3.3.4";
    c.DEFAULTS = {
        offset: 10
    };
    c.prototype.getScrollHeight = function() {
        return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)
    };
    c.prototype.refresh = function() {
        var g = this;
        var e = "offset";
        var f = 0;
        this.offsets = [];
        this.targets = [];
        this.scrollHeight = this.getScrollHeight();
        if (!d.isWindow(this.$scrollElement[0])) {
            e = "position";
            f = this.$scrollElement.scrollTop()
        }
        this.$body.find(this.selector).map(function() {
            var j = d(this);
            var h = j.data("target") || j.attr("href");
            var k = /^#./.test(h) && d(h);
            return (k && k.length && k.is(":visible") && [
                [k[e]().top + f, h]
            ]) || null
        }).sort(function(j, h) {
            return j[0] - h[0]
        }).each(function() {
            g.offsets.push(this[0]);
            g.targets.push(this[1])
        })
    };
    c.prototype.process = function() {
        var k = this.$scrollElement.scrollTop() + this.options.offset;
        var g = this.getScrollHeight();
        var j = this.options.offset + g - this.$scrollElement.height();
        var h = this.offsets;
        var e = this.targets;
        var l = this.activeTarget;
        var f;
        if (this.scrollHeight != g) {
            this.refresh()
        }
        if (k >= j) {
            return l != (f = e[e.length - 1]) && this.activate(f)
        }
        if (l && k < h[0]) {
            this.activeTarget = null;
            return this.clear()
        }
        for (f = h.length; f--;) {
            l != e[f] && k >= h[f] && (h[f + 1] === undefined || k < h[f + 1]) && this.activate(e[f])
        }
    };
    c.prototype.activate = function(g) {
        this.activeTarget = g;
        this.clear();
        var e = this.selector + '[data-target="' + g + '"],' + this.selector + '[href="' + g + '"]';
        var f = d(e).parents("li").addClass("active");
        if (f.parent(".dropdown-menu").length) {
            f = f.closest("li.dropdown").addClass("active")
        }
        f.trigger("activate.bs.scrollspy")
    };
    c.prototype.clear = function() {
        d(this.selector).parentsUntil(this.options.target, ".active").removeClass("active")
    };

    function b(e) {
        return this.each(function() {
            var h = d(this);
            var g = h.data("bs.scrollspy");
            var f = typeof e == "object" && e;
            if (!g) {
                h.data("bs.scrollspy", (g = new c(this, f)))
            }
            if (typeof e == "string") {
                g[e]()
            }
        })
    }
    var a = d.fn.scrollspy;
    d.fn.scrollspy = b;
    d.fn.scrollspy.Constructor = c;
    d.fn.scrollspy.noConflict = function() {
        d.fn.scrollspy = a;
        return this
    };
    d(window).on("load.bs.scrollspy.data-api", function() {
        d('[data-spy="scroll"]').each(function() {
            var e = d(this);
            b.call(e, e.data())
        })
    })
}(jQuery); + function(d) {
    var b = function(f) {
        this.element = d(f)
    };
    b.VERSION = "3.3.4";
    b.TRANSITION_DURATION = 150;
    b.prototype.show = function() {
        var m = this.element;
        var h = m.closest("ul:not(.dropdown-menu)");
        var g = m.data("target");
        if (!g) {
            g = m.attr("href");
            g = g && g.replace(/.*(?=#[^\s]*$)/, "")
        }
        if (m.parent("li").hasClass("active")) {
            return
        }
        var k = h.find(".active:last a");
        var l = d.Event("hide.bs.tab", {
            relatedTarget: m[0]
        });
        var j = d.Event("show.bs.tab", {
            relatedTarget: k[0]
        });
        k.trigger(l);
        m.trigger(j);
        if (j.isDefaultPrevented() || l.isDefaultPrevented()) {
            return
        }
        var f = d(g);
        this.activate(m.closest("li"), h);
        this.activate(f, f.parent(), function() {
            k.trigger({
                type: "hidden.bs.tab",
                relatedTarget: m[0]
            });
            m.trigger({
                type: "shown.bs.tab",
                relatedTarget: k[0]
            })
        })
    };
    b.prototype.activate = function(h, g, l) {
        var f = g.find("> .active");
        var k = l && d.support.transition && ((f.length && f.hasClass("fade")) || !!g.find("> .fade").length);

        function j() {
            f.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", false);
            h.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded", true);
            if (k) {
                h[0].offsetWidth;
                h.addClass("in")
            } else {
                h.removeClass("fade")
            }
            if (h.parent(".dropdown-menu").length) {
                h.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", true)
            }
            l && l()
        }
        f.length && k ? f.one("bsTransitionEnd", j).emulateTransitionEnd(b.TRANSITION_DURATION) : j();
        f.removeClass("in")
    };

    function c(f) {
        return this.each(function() {
            var h = d(this);
            var g = h.data("bs.tab");
            if (!g) {
                h.data("bs.tab", (g = new b(this)))
            }
            if (typeof f == "string") {
                g[f]()
            }
        })
    }
    var a = d.fn.tab;
    d.fn.tab = c;
    d.fn.tab.Constructor = b;
    d.fn.tab.noConflict = function() {
        d.fn.tab = a;
        return this
    };
    var e = function(f) {
        f.preventDefault();
        c.call(d(this), "show")
    };
    d(document).on("click.bs.tab.data-api", '[data-toggle="tab"]', e).on("click.bs.tab.data-api", '[data-toggle="pill"]', e)
}(jQuery); + function(d) {
    var c = function(f, e) {
        this.options = d.extend({}, c.DEFAULTS, e);
        this.$target = d(this.options.target).on("scroll.bs.affix.data-api", d.proxy(this.checkPosition, this)).on("click.bs.affix.data-api", d.proxy(this.checkPositionWithEventLoop, this));
        this.$element = d(f);
        this.affixed = null;
        this.unpin = null;
        this.pinnedOffset = null;
        this.checkPosition()
    };
    c.VERSION = "3.3.4";
    c.RESET = "affix affix-top affix-bottom";
    c.DEFAULTS = {
        offset: 0,
        target: window
    };
    c.prototype.getState = function(o, n, f, g) {
        var e = this.$target.scrollTop();
        var j = this.$element.offset();
        var k = this.$target.height();
        if (f != null && this.affixed == "top") {
            return e < f ? "top" : false
        }
        if (this.affixed == "bottom") {
            if (f != null) {
                return (e + this.unpin <= j.top) ? false : "bottom"
            }
            return (e + k <= o - g) ? false : "bottom"
        }
        var h = this.affixed == null;
        var m = h ? e : j.top;
        var l = h ? k : n;
        if (f != null && e <= f) {
            return "top"
        }
        if (g != null && (m + l >= o - g)) {
            return "bottom"
        }
        return false
    };
    c.prototype.getPinnedOffset = function() {
        if (this.pinnedOffset) {
            return this.pinnedOffset
        }
        this.$element.removeClass(c.RESET).addClass("affix");
        var f = this.$target.scrollTop();
        var e = this.$element.offset();
        return (this.pinnedOffset = e.top - f)
    };
    c.prototype.checkPositionWithEventLoop = function() {
        setTimeout(d.proxy(this.checkPosition, this), 1)
    };
    c.prototype.checkPosition = function() {
        if (!this.$element.is(":visible")) {
            return
        }
        var f = this.$element.height();
        var m = this.options.offset;
        var k = m.top;
        var h = m.bottom;
        var j = d(document.body).height();
        if (typeof m != "object") {
            h = k = m
        }
        if (typeof k == "function") {
            k = m.top(this.$element)
        }
        if (typeof h == "function") {
            h = m.bottom(this.$element)
        }
        var g = this.getState(j, f, k, h);
        if (this.affixed != g) {
            if (this.unpin != null) {
                this.$element.css("top", "")
            }
            var n = "affix" + (g ? "-" + g : "");
            var l = d.Event(n + ".bs.affix");
            this.$element.trigger(l);
            if (l.isDefaultPrevented()) {
                return
            }
            this.affixed = g;
            this.unpin = g == "bottom" ? this.getPinnedOffset() : null;
            this.$element.removeClass(c.RESET).addClass(n).trigger(n.replace("affix", "affixed") + ".bs.affix")
        }
        if (g == "bottom") {
            this.$element.offset({
                top: j - f - h
            })
        }
    };

    function b(e) {
        return this.each(function() {
            var h = d(this);
            var g = h.data("bs.affix");
            var f = typeof e == "object" && e;
            if (!g) {
                h.data("bs.affix", (g = new c(this, f)))
            }
            if (typeof e == "string") {
                g[e]()
            }
        })
    }
    var a = d.fn.affix;
    d.fn.affix = b;
    d.fn.affix.Constructor = c;
    d.fn.affix.noConflict = function() {
        d.fn.affix = a;
        return this
    };
    d(window).on("load", function() {
        d('[data-spy="affix"]').each(function() {
            var f = d(this);
            var e = f.data();
            e.offset = e.offset || {};
            if (e.offsetBottom != null) {
                e.offset.bottom = e.offsetBottom
            }
            if (e.offsetTop != null) {
                e.offset.top = e.offsetTop
            }
            b.call(f, e)
        })
    })
}(jQuery);
/*!
 * jQuery Cookie Plugin v1.4.1
 * https://github.com/carhartl/jquery-cookie
 *
 * Copyright 2013 Klaus Hartl
 * Released under the MIT license
 */
(function(a) {
    if (typeof define === "function" && define.amd) {
        define(["jquery"], a)
    } else {
        if (typeof exports === "object") {
            a(require("jquery"))
        } else {
            a(jQuery)
        }
    }
}(function(f) {
    var a = /\+/g;

    function d(j) {
        return b.raw ? j : encodeURIComponent(j)
    }

    function g(j) {
        return b.raw ? j : decodeURIComponent(j)
    }

    function h(j) {
        return d(b.json ? JSON.stringify(j) : String(j))
    }

    function c(j) {
        if (j.indexOf('"') === 0) {
            j = j.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, "\\")
        }
        try {
            j = decodeURIComponent(j.replace(a, " "));
            return b.json ? JSON.parse(j) : j
        } catch (k) {}
    }

    function e(k, j) {
        var l = b.raw ? k : c(k);
        return f.isFunction(j) ? j(l) : l
    }
    var b = f.cookie = function(q, p, v) {
        if (p !== undefined && !f.isFunction(p)) {
            v = f.extend({}, b.defaults, v);
            if (typeof v.expires === "number") {
                var r = v.expires,
                    u = v.expires = new Date();
                u.setTime(+u + r * 86400000)
            }
            return (document.cookie = [d(q), "=", h(p), v.expires ? "; expires=" + v.expires.toUTCString() : "", v.path ? "; path=" + v.path : "", v.domain ? "; domain=" + v.domain : "", v.secure ? "; secure" : ""].join(""))
        }
        var w = q ? undefined : {};
        var s = document.cookie ? document.cookie.split("; ") : [];
        for (var o = 0, m = s.length; o < m; o++) {
            var n = s[o].split("=");
            var j = g(n.shift());
            var k = n.join("=");
            if (q && q === j) {
                w = e(k, p);
                break
            }
            if (!q && (k = e(k)) !== undefined) {
                w[j] = k
            }
        }
        return w
    };
    b.defaults = {};
    f.removeCookie = function(k, j) {
        if (f.cookie(k) === undefined) {
            return false
        }
        f.cookie(k, "", f.extend({}, j, {
            expires: -1
        }));
        return !f.cookie(k)
    }
}));
/*!
 * jQuery postMessage - v0.5 - 9/11/2009
 * http://benalman.com/projects/jquery-postmessage-plugin/
 * 
 * Copyright (c) 2009 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */
(function($) {
    var b, d, k = 1,
        a, f = this,
        g = !1,
        h = "postMessage",
        c = "addEventListener",
        e, j = f[h];
    $[h] = function(l, n, m) {
        if (!n) {
            return
        }
        l = typeof l === "string" ? l : $.param(l);
        m = m || parent;
        if (j) {
            m[h](l, n.replace(/([^:]+:\/\/[^\/]+).*/, "$1"))
        } else {
            if (n) {
                m.location = n.replace(/#.*$/, "") + "#" + (+new Date) + (k++) + "&" + l
            }
        }
    };
    $.receiveMessage = e = function(n, m, l) {
        if (j) {
            if (n) {
                a && e();
                a = function(o) {
                    if ((typeof m === "string" && o.origin !== m) || ($.isFunction(m) && m(o.origin) === g)) {
                        return g
                    }
                    n(o)
                }
            }
            if (f[c]) {
                f[n ? c : "removeEventListener"]("message", a, g)
            } else {
                f[n ? "attachEvent" : "detachEvent"]("onmessage", a)
            }
        } else {
            b && clearInterval(b);
            b = null;
            if (n) {
                l = typeof m === "number" ? m : typeof l === "number" ? l : 100;
                b = setInterval(function() {
                    var p = document.location.hash,
                        o = /^#?\d+&/;
                    if (p !== d && o.test(p)) {
                        d = p;
                        n({
                            data: p.replace(o, "")
                        })
                    }
                }, l)
            }
        }
    }
})(jQuery);
(function(a, c, b) {
    if (typeof define === "function" && define.amd) {
        define(["jquery"], function(d) {
            b(d, a, c);
            return d.mobile
        })
    } else {
        b(a.jQuery, a, c)
    }
}(this, document, function(c, b, a, d) {
    (function(B, K, j, q) {
        var J = "virtualMouseBindings",
            f = "virtualTouchID",
            e = "vmouseover vmousedown vmousemove vmouseup vclick vmouseout vmousecancel".split(" "),
            A = "clientX clientY pageX pageY screenX screenY".split(" "),
            G = B.event.mouseHooks ? B.event.mouseHooks.props : [],
            C = B.event.props.concat(G),
            E = {},
            L = 0,
            w = 0,
            v = 0,
            t = false,
            O = [],
            l = false,
            V = false,
            y = "addEventListener" in j,
            x = B(j),
            I = 1,
            R = 0,
            g, P;
        B.vmouse = {
            moveDistanceThreshold: 10,
            clickDistanceThreshold: 10,
            resetTimerDuration: 1500
        };

        function u(W) {
            while (W && typeof W.originalEvent !== "undefined") {
                W = W.originalEvent
            }
            return W
        }

        function m(X, Y) {
            var ag = X.type,
                ah, af, Z, W, ad, ac, ab, aa, ae;
            X = B.Event(X);
            X.type = Y;
            ah = X.originalEvent;
            af = B.event.props;
            if (ag.search(/^(mouse|click)/) > -1) {
                af = C
            }
            if (ah) {
                for (ab = af.length, W; ab;) {
                    W = af[--ab];
                    X[W] = ah[W]
                }
            }
            if (ag.search(/mouse(down|up)|click/) > -1 && !X.which) {
                X.which = 1
            }
            if (ag.search(/^touch/) !== -1) {
                Z = u(ah);
                ag = Z.touches;
                ad = Z.changedTouches;
                ac = (ag && ag.length) ? ag[0] : ((ad && ad.length) ? ad[0] : q);
                if (ac) {
                    for (aa = 0, ae = A.length; aa < ae; aa++) {
                        W = A[aa];
                        X[W] = ac[W]
                    }
                }
            }
            return X
        }

        function T(Z) {
            var X = {},
                W, Y;
            while (Z) {
                W = B.data(Z, J);
                for (Y in W) {
                    if (W[Y]) {
                        X[Y] = X.hasVirtualBinding = true
                    }
                }
                Z = Z.parentNode
            }
            return X
        }

        function F(Y, X) {
            var W;
            while (Y) {
                W = B.data(Y, J);
                if (W && (!X || W[X])) {
                    return Y
                }
                Y = Y.parentNode
            }
            return null
        }

        function N() {
            V = false
        }

        function o() {
            V = true
        }

        function U() {
            R = 0;
            O.length = 0;
            l = false;
            o()
        }

        function s() {
            N()
        }

        function z() {
            D();
            L = setTimeout(function() {
                L = 0;
                U()
            }, B.vmouse.resetTimerDuration)
        }

        function D() {
            if (L) {
                clearTimeout(L);
                L = 0
            }
        }

        function r(Y, Z, W) {
            var X;
            if ((W && W[Y]) || (!W && F(Z.target, Y))) {
                X = m(Z, Y);
                B(Z.target).trigger(X)
            }
            return X
        }

        function n(X) {
            var Y = B.data(X.target, f),
                W;
            if (!l && (!R || R !== Y)) {
                W = r("v" + X.type, X);
                if (W) {
                    if (W.isDefaultPrevented()) {
                        X.preventDefault()
                    }
                    if (W.isPropagationStopped()) {
                        X.stopPropagation()
                    }
                    if (W.isImmediatePropagationStopped()) {
                        X.stopImmediatePropagation()
                    }
                }
            }
        }

        function S(Y) {
            var aa = u(Y).touches,
                Z, W, X;
            if (aa && aa.length === 1) {
                Z = Y.target;
                W = T(Z);
                if (W.hasVirtualBinding) {
                    R = I++;
                    B.data(Z, f, R);
                    D();
                    s();
                    t = false;
                    X = u(Y).touches[0];
                    w = X.pageX;
                    v = X.pageY;
                    r("vmouseover", Y, W);
                    r("vmousedown", Y, W)
                }
            }
        }

        function M(W) {
            if (V) {
                return
            }
            if (!t) {
                r("vmousecancel", W, T(W.target))
            }
            t = true;
            z()
        }

        function h(aa) {
            if (V) {
                return
            }
            var Y = u(aa).touches[0],
                X = t,
                Z = B.vmouse.moveDistanceThreshold,
                W = T(aa.target);
            t = t || (Math.abs(Y.pageX - w) > Z || Math.abs(Y.pageY - v) > Z);
            if (t && !X) {
                r("vmousecancel", aa, W)
            }
            r("vmousemove", aa, W);
            z()
        }

        function k(Z) {
            if (V) {
                return
            }
            o();
            var W = T(Z.target),
                X, Y;
            r("vmouseup", Z, W);
            if (!t) {
                X = r("vclick", Z, W);
                if (X && X.isDefaultPrevented()) {
                    Y = u(Z).changedTouches[0];
                    O.push({
                        touchID: R,
                        x: Y.clientX,
                        y: Y.clientY
                    });
                    l = true
                }
            }
            r("vmouseout", Z, W);
            t = false;
            z()
        }

        function H(X) {
            var Y = B.data(X, J),
                W;
            if (Y) {
                for (W in Y) {
                    if (Y[W]) {
                        return true
                    }
                }
            }
            return false
        }

        function Q() {}

        function p(W) {
            var X = W.substr(1);
            return {
                setup: function() {
                    if (!H(this)) {
                        B.data(this, J, {})
                    }
                    var Y = B.data(this, J);
                    Y[W] = true;
                    E[W] = (E[W] || 0) + 1;
                    if (E[W] === 1) {
                        x.bind(X, n)
                    }
                    B(this).bind(X, Q);
                    if (y) {
                        E.touchstart = (E.touchstart || 0) + 1;
                        if (E.touchstart === 1) {
                            x.bind("touchstart", S).bind("touchend", k).bind("touchmove", h).bind("scroll", M)
                        }
                    }
                },
                teardown: function() {
                    --E[W];
                    if (!E[W]) {
                        x.unbind(X, n)
                    }
                    if (y) {
                        --E.touchstart;
                        if (!E.touchstart) {
                            x.unbind("touchstart", S).unbind("touchmove", h).unbind("touchend", k).unbind("scroll", M)
                        }
                    }
                    var Y = B(this),
                        Z = B.data(this, J);
                    if (Z) {
                        Z[W] = false
                    }
                    Y.unbind(X, Q);
                    if (!H(this)) {
                        Y.removeData(J)
                    }
                }
            }
        }
        for (P = 0; P < e.length; P++) {
            B.event.special[e[P]] = p(e[P])
        }
        if (y) {
            j.addEventListener("click", function(aa) {
                var X = O.length,
                    ab = aa.target,
                    ad, ac, ae, Z, W, Y;
                if (X) {
                    ad = aa.clientX;
                    ac = aa.clientY;
                    g = B.vmouse.clickDistanceThreshold;
                    ae = ab;
                    while (ae) {
                        for (Z = 0; Z < X; Z++) {
                            W = O[Z];
                            Y = 0;
                            if ((ae === ab && Math.abs(W.x - ad) < g && Math.abs(W.y - ac) < g) || B.data(ae, f) === W.touchID) {
                                aa.preventDefault();
                                aa.stopPropagation();
                                return
                            }
                        }
                        ae = ae.parentNode
                    }
                }
            }, true)
        }
    })(c, b, a);
    (function(e) {
        e.mobile = {}
    }(c));
    (function(f, g) {
        var e = {
            touch: "ontouchend" in a
        };
        f.mobile.support = f.mobile.support || {};
        f.extend(f.support, e);
        f.extend(f.mobile.support, e)
    }(c));
    (function(h, n, e) {
        var f = h(a),
            j = h.mobile.support.touch,
            k = "touchmove scroll",
            o = j ? "touchstart" : "mousedown",
            m = j ? "touchend" : "mouseup",
            g = j ? "touchmove" : "mousemove";
        h.each(("touchstart touchmove touchend tap taphold swipe swipeleft swiperight scrollstart scrollstop").split(" "), function(q, p) {
            h.fn[p] = function(r) {
                return r ? this.bind(p, r) : this.trigger(p)
            };
            if (h.attrFn) {
                h.attrFn[p] = true
            }
        });

        function l(t, q, s, p) {
            var r = s.type;
            s.type = q;
            if (p) {
                h.event.trigger(s, e, t)
            } else {
                h.event.dispatch.call(t, s)
            }
            s.type = r
        }
        h.event.special.scrollstart = {
            enabled: true,
            setup: function() {
                var p = this,
                    s = h(p),
                    r, t;

                function q(u, v) {
                    r = v;
                    l(p, r ? "scrollstart" : "scrollstop", u)
                }
                s.bind(k, function(u) {
                    if (!h.event.special.scrollstart.enabled) {
                        return
                    }
                    if (!r) {
                        q(u, true)
                    }
                    clearTimeout(t);
                    t = setTimeout(function() {
                        q(u, false)
                    }, 50)
                })
            },
            teardown: function() {
                h(this).unbind(k)
            }
        };
        h.event.special.tap = {
            tapholdThreshold: 750,
            emitTapOnTaphold: true,
            setup: function() {
                var p = this,
                    r = h(p),
                    q = false;
                r.bind("vmousedown", function(u) {
                    q = false;
                    if (u.which && u.which !== 1) {
                        return false
                    }
                    var t = u.target,
                        x;

                    function s() {
                        clearTimeout(x)
                    }

                    function w() {
                        s();
                        r.unbind("vclick", v).unbind("vmouseup", s);
                        f.unbind("vmousecancel", w)
                    }

                    function v(y) {
                        w();
                        if (!q && t === y.target) {
                            l(p, "tap", y)
                        } else {
                            if (q) {
                                y.preventDefault()
                            }
                        }
                    }
                    r.bind("vmouseup", s).bind("vclick", v);
                    f.bind("vmousecancel", w);
                    x = setTimeout(function() {
                        if (!h.event.special.tap.emitTapOnTaphold) {
                            q = true
                        }
                        l(p, "taphold", h.Event("taphold", {
                            target: t
                        }))
                    }, h.event.special.tap.tapholdThreshold)
                })
            },
            teardown: function() {
                h(this).unbind("vmousedown").unbind("vclick").unbind("vmouseup");
                f.unbind("vmousecancel")
            }
        };
        h.event.special.swipe = {
            scrollSupressionThreshold: 30,
            durationThreshold: 1000,
            horizontalDistanceThreshold: 30,
            verticalDistanceThreshold: 30,
            getLocation: function(s) {
                var r = n.pageXOffset,
                    q = n.pageYOffset,
                    p = s.clientX,
                    t = s.clientY;
                if (s.pageY === 0 && Math.floor(t) > Math.floor(s.pageY) || s.pageX === 0 && Math.floor(p) > Math.floor(s.pageX)) {
                    p = p - r;
                    t = t - q
                } else {
                    if (t < (s.pageY - q) || p < (s.pageX - r)) {
                        p = s.pageX - r;
                        t = s.pageY - q
                    }
                }
                return {
                    x: p,
                    y: t
                }
            },
            start: function(q) {
                var r = q.originalEvent.touches ? q.originalEvent.touches[0] : q,
                    p = h.event.special.swipe.getLocation(r);
                return {
                    time: (new Date()).getTime(),
                    coords: [p.x, p.y],
                    origin: h(q.target)
                }
            },
            stop: function(q) {
                var r = q.originalEvent.touches ? q.originalEvent.touches[0] : q,
                    p = h.event.special.swipe.getLocation(r);
                return {
                    time: (new Date()).getTime(),
                    coords: [p.x, p.y]
                }
            },
            handleSwipe: function(t, q, p, r) {
                if (q.time - t.time < h.event.special.swipe.durationThreshold && Math.abs(t.coords[0] - q.coords[0]) > h.event.special.swipe.horizontalDistanceThreshold && Math.abs(t.coords[1] - q.coords[1]) < h.event.special.swipe.verticalDistanceThreshold) {
                    var s = t.coords[0] > q.coords[0] ? "swipeleft" : "swiperight";
                    l(p, "swipe", h.Event("swipe", {
                        target: r,
                        swipestart: t,
                        swipestop: q
                    }), true);
                    l(p, s, h.Event(s, {
                        target: r,
                        swipestart: t,
                        swipestop: q
                    }), true);
                    return true
                }
                return false
            },
            eventInProgress: false,
            setup: function() {
                var r, p = this,
                    s = h(p),
                    q = {};
                r = h.data(this, "mobile-events");
                if (!r) {
                    r = {
                        length: 0
                    };
                    h.data(this, "mobile-events", r)
                }
                r.length++;
                r.swipe = q;
                q.start = function(v) {
                    if (h.event.special.swipe.eventInProgress) {
                        return
                    }
                    h.event.special.swipe.eventInProgress = true;
                    var t, x = h.event.special.swipe.start(v),
                        u = v.target,
                        w = false;
                    q.move = function(y) {
                        if (!x || y.isDefaultPrevented()) {
                            return
                        }
                        t = h.event.special.swipe.stop(y);
                        if (!w) {
                            w = h.event.special.swipe.handleSwipe(x, t, p, u);
                            if (w) {
                                h.event.special.swipe.eventInProgress = false
                            }
                        }
                        if (Math.abs(x.coords[0] - t.coords[0]) > h.event.special.swipe.scrollSupressionThreshold) {
                            y.preventDefault()
                        }
                    };
                    q.stop = function() {
                        w = true;
                        h.event.special.swipe.eventInProgress = false;
                        f.off(g, q.move);
                        q.move = null
                    };
                    f.on(g, q.move).one(m, q.stop)
                };
                s.on(o, q.start)
            },
            teardown: function() {
                var q, p;
                q = h.data(this, "mobile-events");
                if (q) {
                    p = q.swipe;
                    delete q.swipe;
                    q.length--;
                    if (q.length === 0) {
                        h.removeData(this, "mobile-events")
                    }
                }
                if (p) {
                    if (p.start) {
                        h(this).off(o, p.start)
                    }
                    if (p.move) {
                        f.off(g, p.move)
                    }
                    if (p.stop) {
                        f.off(m, p.stop)
                    }
                }
            }
        };
        h.each({
            scrollstop: "scrollstart",
            taphold: "tap",
            swipeleft: "swipe.left",
            swiperight: "swipe.right"
        }, function(q, p) {
            h.event.special[q] = {
                setup: function() {
                    h(this).bind(p, h.noop)
                },
                teardown: function() {
                    h(this).unbind(p)
                }
            }
        })
    })(c, this)
}));
$(window).resize(function() {
    $(".carousel-inner").each(function() {
        $(".product-details", this).each(function() {
            $(this).css("height", "")
        })
    });
    resizeFeaturedProducts()
});

function isNumberKey(b) {
    var a = (b.which) ? b.which : event.keyCode;
    if ((a > 46 && a < 65) || a == 190) {
        return true
    }
    return false
}

function numbersonly(f, b, d) {
    var a;
    var c;
    if (window.event) {
        a = window.event.keyCode
    } else {
        if (b) {
            a = b.which
        } else {
            return true
        }
    }
    c = String.fromCharCode(a);
    if ((a == null) || (a == 0) || (a == 8) || (a == 9) || (a == 13) || (a == 27)) {
        return true
    } else {
        if ((("0123456789.-").indexOf(c) > -1)) {
            return true
        } else {
            return false
        }
    }
}

function findBootstrapEnvironment() {
    var c = ["xs", "sm", "md", "lg"],
        e = window.document,
        a = e.createElement("div");
    e.body.appendChild(a);
    for (var b = c.length - 1; b >= 0; b--) {
        var d = c[b];
        a.className = "hidden-" + d;
        if (a.offsetParent === null) {
            e.body.removeChild(a);
            return d
        }
    }
    return ""
}

function resizeFeaturedProducts() {
    $("[id^=featured-products-]").each(function() {
        var a = $(this).attr("id");
        $(".carousel-inner").each(function() {
            var b = -1;
            $(".h2-height", this).removeAttr("style");
            $(".h2-height", this).each(function() {
                if ($(this).height() > b) {
                    b = $(this).height()
                }
            });
            if (a.indexOf("carousel") != -1 && $("#responsiveXS").is(":visible")) {
                b = 0
            }
            if (b > 0) {
                $(".h2-height", this).height(b)
            }
            var e = -1;
            var d = -1;
            $(".product-details", this).removeAttr("style");
            $(".product-details", this).each(function() {
                var f = -1;
                $(".featured-products-links", this).each(function() {
                    if ($(this).height() > f) {
                        f = $(this).height()
                    }
                });
                if ($(this).height() + f > e) {
                    e = $(this).height() + f
                }
            });
            $(".product-details", this).removeAttr("style");
            $(".product-details", this).each(function() {
                if ($(this).height() > e) {
                    e = $(this).height()
                }
            });
            var c = e + d;
            if (c < 275) {
                c = 275
            }
            $(".product-details", this).height(c);
            $(".featured-products-links", this).css({
                position: "absolute",
                "max-width": "calc(100% - 60px)",
                bottom: "0"
            })
        });
        $(".carousel.slide").each(function() {
            var b = -1;
            $(".carousel-inner.carousel-height", this).removeAttr("style");
            $(".carousel-inner.carousel-height", this).each(function() {
                if ($(this).height() > b) {
                    b = $(this).height()
                }
            });
            if ($("#responsiveXS").is(":visible")) {
                if (b > 0) {
                    $(".carousel-inner.carousel-height", this).height(b)
                } else {
                    $(".carousel-inner.carousel-height", this).height("auto")
                }
            } else {
                if (b < 10) {
                    heighestBox = "auto"
                }
                $(".carousel-inner.carousel-height", this).removeAttr("style");
                $(".carousel-inner.carousel-height", this).height(b)
            }
        })
    })
}
$(document).ready(function() {
    checkSize();
    $(window).resize(checkSize);
    if ($("#responsiveXS").is(":visible")) {
        $("#related-products").insertAfter("#xs-related-products")
    }
    if ($("#responsiveSM").is(":visible")) {
        $("#related-products").insertAfter("#board-image-zone")
    }
    if ($("#responsiveMD").is(":visible")) {
        $("#related-products").insertAfter("#board-image-zone")
    }
    if ($("#responsiveLG").is(":visible")) {
        $("#related-products").insertAfter("#board-image-zone")
    }
    $(".default-table").wrap('<div class="table-resp" />');
    $(".table-nowrap").wrap('<div class="table-resp" />');
	$(".panel-group.responsive").insertAfter('#myTab');
    $(".panel-group.responsive .panel .panel-heading").click(function(j) {
        var h = location.hash;
        var d = $(this).attr("id");
        var l = $(this).offset();
        var e = ($(this).find("a:first").attr("href"));
        var g = e.replace("#", "#panel-");
        if (g == "#panel-collapse-overview") {
            resizeFeaturedProducts()
        }
        $("div[id^='panel-collapse']").removeAttr("style");
        if ($(e).attr("aria-expanded") == "false" || $(e).attr("aria-expanded") == undefined) {
            $("div" + g).css("background-color", "#006482")
        }
        $(this).find("h4 a:first").get(0).click();
        var k = $(this).offset();
        var f = location.hash;
        window.scrollTo(0, 0)
    });
    $(".dropdown-menu").click(function(d) {
        if ($(this).hasClass("keep_open")) {
            d.stopPropagation()
        }
    });
    $("a.accordion-toggle").click(function(d) {});
    $("[id^='featured-products-carousel-']").swiperight(function() {
        $(this).carousel("prev")
    });
    $("[id^='featured-products-carousel-']").swipeleft(function() {
        $(this).carousel("next")
    });
    $("[id^='featured-products-'] .product-item-carousel").swiperight(function() {
        $(this).carousel("prev")
    });
    $("[id^='featured-products-'] .product-item-carousel").swipeleft(function() {
        $(this).carousel("next")
    });
    $(document).on("click", ".openall", function(h) {
        var j = $(this).attr("id");
        var f = j.replace("expandAll-", "");
        $("#" + j).removeClass("enableLink").addClass("disableLink");
        $("#" + j).removeClass("openall");
        var g = $(this).attr("id").replace("expandAll-", "closeAll-");
        $("#" + g).removeClass("disableLink").addClass("enableLink").addClass("closeall");
        var d = "." + $(this).attr("id").replace("expandAll-", "");
        $(".component-accordion." + f + " .panel-collapse").collapse("show")
    });
    $(document).on("click", ".closeall", function() {
        var g = $(this).attr("id");
        var d = g.replace("closeAll-", "");
        $("#" + g).removeClass("enableLink").removeClass("closeall").addClass("disableLink");
        var f = $(this).attr("id").replace("closeAll-", "expandAll-");
        $("#" + f).removeClass("disableLink").addClass("enableLink").addClass("openall");
        var e = "." + $(this).attr("id").replace("closeAll-", "");
        $(".component-accordion." + d + " .panel-collapse").collapse("hide")
    });
    $(".disableLink").click(function(d) {
        d.preventDefault()
    });
    $(".childClick").click(function(j) {
        var d = ($(this).find("h4.collapsed").length);
        var f = $(this).attr("class").replace("panel-heading ", "").replace("panel-light-grey ", "").replace("panel-white ", "").replace(" childClick", "");
        f = f.replace("PanelClick", "");
        var l = $(this).closest(".component-accordion").attr("id");
        var h = $("#" + f).attr("aria-expanded");
        if (h == "true") {
            var k = "expandAll-" + l;
            $("#" + k).removeClass("disableLink").addClass("enableLink").addClass("openall")
        } else {
            var g = "closeAll-" + l;
            $("#" + g).removeClass("disableLink").addClass("enableLink").addClass("closeall")
        }
    });
    $(document).mouseup(function(f) {
        var d = $("#topSignIn");
        if (!d.is(f.target) && d.has(f.target).length === 0) {
            $("#signInDropDown").removeClass("click_hover");
            $("#signInDropDown").addClass("hideSignedInMenu")
        }
    });
    var b = location.href;
    if (b.indexOf("en/editprofile") != -1 || b.indexOf("en/registration") != -1 || b.indexOf("en/sign-in") != -1 || b.indexOf("en/myintersil") != -1) {
        b = location.protocol + "//" + location.host + "/en.html"
    }
    var c = "/en/sign-in.html?resource=" + b;
    if (location.protocol === "http:" && location.port == "") {
        c = "https://" + location.host + c
    }
    $("#signInLink").attr("href", c);
    var a = "/en/cart.html?resource=" + location.href;
    $("#shoppingCartLink").attr("href", a);
    $(document.body).on("click", "#signedInMenu2", function(d) {
        if ($("#signInDropDown").hasClass("click_hover")) {
            $("#signInDropDown").removeClass("click_hover");
            $("#signInDropDown").addClass("hideSignedInMenu")
        } else {
            $("#signInDropDown").addClass("click_hover");
            $("#signInDropDown").removeClass("hideSignedInMenu")
        }
    });
    $(document.body).on("click", "#signedInMenu", function(d) {
        if ($("#signInDropDown").hasClass("click_hover")) {
            $("#signInDropDown").removeClass("click_hover");
            $("#signInDropDown").addClass("hideSignedInMenu")
        } else {
            $("#signInDropDown").addClass("click_hover");
            $("#signInDropDown").removeClass("hideSignedInMenu")
        }
    });
    $("#print_btn").click(function() {
        $("#printModal").printThis()
    });
    $("#navbar-collapse-grid").on("shown.bs.collapse", function() {
        console.log("H:" + $(this).height())
    });
    $(document).on("click tap swipe touchmove", function(h) {
        var f = $("#navbar-collapse-grid");
        var g = $(".navbar-toggle.main-navigation");
        var d = $("#searchLink-xs");
        if ((!f.is(h.target) && f.has(h.target).length === 0) && (!g.is(h.target) && g.has(h.target).length === 0) && $("#responsiveXS").is(":visible")) {
            $("#navbar-collapse-grid").removeClass("in").attr("aria-expanded", "false");
            $("#mega-open").removeClass("phone-mega-open");
            $("button.navbar-toggle.main-navigation").removeClass("active");
            $("button.navbar-toggle.main-navigation").addClass("collapsed");
            $("#mega-open").attr("class", "");
            console.log("G: " + f.height())
        }
    });
    $("#searchLink-xs").click(function(d) {
        console.log("search");
        $("#navbar-collapse-grid").removeClass("in").attr("aria-expanded", "false");
        $("#mega-open").removeClass("phone-mega-open");
        $("button.navbar-toggle.main-navigation").removeClass("active");
        $("button.navbar-toggle.main-navigation").addClass("collapsed")
    })
});
$(function() {
    $(document).on("click", ".yamm .dropdown-menu", function(a) {})
});

function checkSize() {
    var c = $("div.cq-colctrl-lt3").width();
    var b = $("div.cq-colctrl-lt3-c1").width();
    var a = $("div.cq-colctrl-lt3-c0").width();
    if (c <= 768) {
        $("div.cq-colctrl-lt3-c2").insertBefore("div.cq-colctrl-lt3-c1")
    } else {
        $("div.cq-colctrl-lt3-c2").insertAfter("div.cq-colctrl-lt3-c1")
    }
}
var hoverOrClick = function() {
    if ($("#signInDropDown").hasClass("click_hover")) {
        $("#signInDropDown").removeClass("click_hover");
        $("#signInDropDown").addClass("hideSignedInMenu")
    } else {
        $("#signInDropDown").addClass("click_hover");
        $("#signInDropDown").removeClass("hideSignedInMenu")
    }
};
$(window).load(function() {
    resizeFeaturedProducts();
    var b = navigator.userAgent;
    if (b.indexOf("Android") >= 0) {
        var a = parseFloat(b.slice(b.indexOf("Android") + 8));
        document.getElementsByName("viewport")[0].setAttribute("content", "width=device-width, initial-scale=1.02")
    }
});
$(document).ready(function() {
    $("#search input[name=q]").focus()
});
(function(b) {
    var a;
    b.fn.printThis = function(d) {
        a = b.extend({}, b.fn.printThis.defaults, d);
        var c = this instanceof jQuery ? this : b(this);
        var f = "printThis-" + (new Date()).getTime();
        if (window.location.hostname !== document.domain && navigator.userAgent.match(/msie/i)) {
            var j = 'javascript:document.write("<head><script>document.domain=\\"' + document.domain + '\\";<\/script></head><body></body>")';
            var h = document.createElement("iframe");
            h.name = "printIframe";
            h.id = f;
            h.className = "MSIE";
            document.body.appendChild(h);
            h.src = j
        } else {
            var e = b("<iframe id='" + f + "' name='printIframe' />");
            e.appendTo("body")
        }
        var g = b("#" + f);
        if (!a.debug) {
            g.css({
                position: "absolute",
                width: "0px",
                height: "0px",
                left: "-600px",
                top: "-600px"
            })
        }
        setTimeout(function() {
            var p = g.contents(),
                k = p.find("head"),
                m = p.find("body");
            k.append('<base href="' + document.location.protocol + "//" + document.location.host + '">');
            if (a.importCSS) {
                b("link[rel=stylesheet]").each(function() {
                    var q = b(this).attr("href");
                    if (q) {
                        var r = b(this).attr("media") || "all";
                        k.append("<link type='text/css' rel='stylesheet' href='" + q + "' media='" + r + "'>")
                    }
                })
            }
            if (a.importStyle) {
                b("style").each(function() {
                    b(this).clone().appendTo(k)
                })
            }
            if (a.pageTitle) {
                k.append("<title>" + a.pageTitle + "</title>")
            }
            if (a.loadCSS) {
                if (b.isArray(a.loadCSS)) {
                    jQuery.each(a.loadCSS, function(q, r) {
                        k.append("<link type='text/css' rel='stylesheet' href='" + this + "'>")
                    })
                } else {
                    k.append("<link type='text/css' rel='stylesheet' href='" + a.loadCSS + "'>")
                }
            }
            if (a.header) {
                m.append(a.header)
            }
            if (a.printContainer) {
                m.append(c.outer())
            } else {
                c.each(function() {
                    m.append(b(this).html())
                })
            }
            if (a.formValues) {
                var o = c.find("input");
                if (o.length) {
                    o.each(function() {
                        var t = b(this),
                            u = b(this).attr("name"),
                            q = t.is(":checkbox") || t.is(":radio"),
                            r = p.find('input[name="' + u + '"]'),
                            s = t.val();
                        if (!q) {
                            r.val(s)
                        } else {
                            if (t.is(":checked")) {
                                if (t.is(":checkbox")) {
                                    r.attr("checked", "checked")
                                } else {
                                    if (t.is(":radio")) {
                                        p.find('input[name="' + u + '"][value=' + s + "]").attr("checked", "checked")
                                    }
                                }
                            }
                        }
                    })
                }
                var l = c.find("select");
                if (l.length) {
                    l.each(function() {
                        var r = b(this),
                            s = b(this).attr("name"),
                            q = r.val();
                        p.find('select[name="' + s + '"]').val(q)
                    })
                }
                var n = c.find("textarea");
                if (n.length) {
                    n.each(function() {
                        var r = b(this),
                            s = b(this).attr("name"),
                            q = r.val();
                        p.find('textarea[name="' + s + '"]').val(q)
                    })
                }
            }
            if (a.removeInline) {
                if (b.isFunction(b.removeAttr)) {
                    p.find("body *").removeAttr("style")
                } else {
                    p.find("body *").attr("style", "")
                }
            }
            setTimeout(function() {
                if (g.hasClass("MSIE")) {
                    window.frames.printIframe.focus();
                    k.append("<script>  window.print(); <\/script>")
                } else {
                    g[0].contentWindow.focus();
                    g[0].contentWindow.print()
                }
                if (!a.debug) {
                    setTimeout(function() {
                        g.remove()
                    }, 1000)
                }
            }, a.printDelay)
        }, 333)
    };
    b.fn.printThis.defaults = {
        debug: false,
        importCSS: true,
        importStyle: false,
        printContainer: true,
        loadCSS: "",
        pageTitle: "",
        removeInline: false,
        printDelay: 333,
        header: null,
        formValues: true
    };
    jQuery.fn.outer = function() {
        return b(b("<div></div>").html(this.clone())).html()
    }
})(jQuery);
$("a#signedInMenu2").click(function(a) {
    if ($("#signInDropDown").hasClass("click_hover")) {
        $("#signInDropDown").removeClass("click_hover");
        $("#arrowDown").removeClass("click_hover")
    } else {
        $("#signInDropDown").addClass("click_hover");
        $("#arrowDown").addClass("click_hover")
    }
});
var fakewaffle = (function(b, a) {
    a.responsiveTabs = function(e) {
        a.currentPosition = "tabs";
        var d = b(".nav-tabs.responsive");
        var f = "";
        var g = "";
        var c = "";
        if (e === undefined) {
            e = ["xs", "sm"]
        }
        b.each(e, function() {
            f += " hidden-" + this;
            g += " visible-" + this
        });
        b.each(d, function() {
            var h = b(this);
            var j = h.find("li a");
            var k = b("<div></div>", {
                "class": "panel-group responsive" + g,
                id: "collapse-" + h.attr("id")
            });
            b.each(j, function() {
                var q = b(this);
                var m = q.attr("class") === undefined ? "" : q.attr("class");
                var l = "accordion-toggle collapsed";
                var p = q.parent().attr("class") === undefined ? "" : q.parent().attr("class");
                var o = "panel panel-default";
                //var n = q.get(0).hash.replace("#", "collapse-");
                var n = q.attr("href");
                if (m.length > 0) {
                    l += " " + m
                }
                if (p.length > 0) {
                    p = p.replace(/\bactive\b/g, "");
                    o += " " + p;
                    o = o.replace(/\s{2,}/g, " ");
                    o = o.replace(/^\s+|\s+$/g, "")
                }
                if (q.parent().hasClass("active")) {
                    c = "#" + n
                }
                k.append(b("<div>").attr("class", o).html(b("<div>").attr("class", "panel-heading").attr("id", "panel-" + n).html(b("<h4>").attr("class", "panel-title").html(b("<a>", {
                    "class": l,
                    //"data-toggle": "collapse",
					//"data-parent": "#collapse-" + h.attr("id"),
                    //href: "#" + n,
                    href: n,
                    html: q.html()
                })))).append(b("<div>", {
                    id: n,
                    "class": "panel-collapse collapse"
                })))
            });
            h.next().after(k);
            h.addClass(f);
           // b(".tab-content.responsive").addClass(f)
        });
        a.checkResize();
        a.bindTabToCollapse();
        if (c) {
            b(c).collapse("show")
        }
    };
    a.checkResize = function() {
        if (b(".panel-group.responsive").is(":visible") === true && a.currentPosition === "tabs") {
            a.tabToPanel();
            a.currentPosition = "panel"
        } else {
            if (b(".panel-group.responsive").is(":visible") === false && a.currentPosition === "panel") {
                a.panelToTab();
                a.currentPosition = "tabs"
            }
        }
    };
    a.tabToPanel = function() {
        var c = b(".nav-tabs.responsive");
        b.each(c, function(d, e) {
            var f = b(e).next(".tab-content").find(".tab-pane");
            b.each(f, function(g, h) {
                var j = b(h).attr("id").replace(/^/, "#collapse-");
                b(h).removeClass("tab-pane").addClass("panel-body").appendTo(b(j))
            })
        })
    };
    a.panelToTab = function() {
        var c = b(".panel-group.responsive");
        b.each(c, function(f, e) {
            var h = b(e).attr("id").replace("collapse-", "#");
            var d = b(h).next(".tab-content")[0];
            var g = b(e).find(".panel-body");
            g.removeClass("panel-body").addClass("tab-pane").appendTo(b(d))
        })
    };
    a.bindTabToCollapse = function() {
        var c = b(".nav-tabs.responsive").find("li a");
        var d = b(".panel-group.responsive").find(".panel-collapse");
        c.on("shown.bs.tab", function(j) {
            var k = b(this).attr("id");
            var h = "panel-collapse-" + b(this).attr("id").replace("-tab", "");
            var g = b(j.currentTarget.hash.replace(/#/, "#collapse-"));
            g.collapse("show");
            b(".panel-heading").removeClass("active");
            b("#" + h).addClass("active");
            if (j.relatedTarget) {
                var f = b(j.relatedTarget.hash.replace(/#/, "#collapse-"));
                f.collapse("hide")
            }
        });
        d.on("shown.bs.collapse", function(j) {
            var h = "panel-collapse-" + b(this).attr("id").replace("-tab", "");
            b(".panel-heading").removeClass("active");
            var g = b(j.target).context.id.replace(/collapse-/g, "#");
            b('a[href="' + g + '"]').tab("show");
            var f = b(j.currentTarget).closest(".panel-group.responsive");
            b(f).find(".panel-body").removeClass("active");
            b(j.currentTarget).find(".panel-body").addClass("active")
        })
    };
    b(window).resize(function() {
        a.checkResize()
    });
    return a
}(window.jQuery, fakewaffle || {}));
/*! jQuery ResponsiveIframe - v0.0.3 - 2013-09-05
 * https://github.com/npr/responsiveiframe
 * Copyright (c) 2013 Irakli Nadareishvili; Licensed MIT, GPL */
if (typeof jQuery !== "undefined") {
    (function(d) {
        var c = {
            xdomain: "*",
            ie: navigator.userAgent.toLowerCase().indexOf("msie") > -1,
            scrollToTop: true
        };
        var a = {
            init: function() {
                return this.each(function(e) {
                    var f = d(this);
                    if (window.postMessage) {
                        if (window.addEventListener) {
                            window.addEventListener("message", function(g) {
                                b.messageHandler(f, g)
                            }, false)
                        } else {
                            if (window.attachEvent) {
                                window.attachEvent("onmessage", function(g) {
                                    b.messageHandler(f, g)
                                }, f)
                            }
                        }
                    } else {
                        setInterval(function() {
                            var h = window.location.hash,
                                g = h.match(/^#h(\d+)(s?)$/);
                            if (g) {
                                b.setHeight(f, g[1]);
                                if (c.scrollToTop && g[2] === "s") {
                                    scroll(0, 0)
                                }
                            }
                        }, 150)
                    }
                })
            }
        };
        var b = {
            messageHandler: function(k, m) {
                var f, j, l, n;
                if (c.xdomain !== "*") {
                    var h = new RegExp(c.xdomain + "$");
                    if (m.origin == "null") {
                        throw new Error("messageHandler( elem, e): There is no origin.  You are viewing the page from your file system.  Please run through a web server.")
                    }
                    if (m.origin.match(h)) {
                        l = true
                    } else {
                        throw new Error("messageHandler( elem, e): The orgin doesn't match the responsiveiframe  xdomain.")
                    }
                }
                if (c.xdomain === "*" || l) {
                    n = m.data + "";
                    j = n.match(/^(\d+)(s?)$/);
                    if (j && j.length === 3) {
                        f = parseInt(j[1], 10);
                        if (!isNaN(f)) {
                            try {
                                b.setHeight(k, f)
                            } catch (g) {}
                        }
                        if (c.scrollToTop && j[2] === "s") {
                            scroll(0, 0)
                        }
                    }
                }
            },
            setHeight: function(f, e) {
                f.css("height", e + "px")
            },
            getDocHeight: function() {
                var e = document;
                return Math.min(Math.max(e.body.scrollHeight, e.documentElement.scrollHeight), Math.max(e.body.offsetHeight, e.documentElement.offsetHeight), Math.max(e.body.clientHeight, e.documentElement.clientHeight))
            }
        };
        d.fn.responsiveIframe = function(e) {
            if (a[e]) {
                return a[e].apply(this, Array.prototype.slice.call(arguments, 1))
            } else {
                if (typeof e === "object" || !e) {
                    d.extend(c, arguments[0]);
                    return a.init.apply(this)
                } else {
                    d.error("Method " + e + " does not exist on jQuery.responsiveIframe")
                }
            }
        }
    }(jQuery))
}(function() {
    var a, c, d = function() {
        a = this
    };
    d.prototype.allowResponsiveEmbedding = function() {
        if (window.addEventListener) {
            window.addEventListener("load", a.messageParent, false);
            window.addEventListener("resize", a.messageParent, false)
        } else {
            if (window.attachEvent) {
                window.attachEvent("onload", a.messageParent);
                window.attachEvent("onresize", a.messageParent)
            }
        }
    };
    d.prototype.messageParent = function(f) {
        var e = document.body.offsetHeight;
        e = (f) ? e + "s" : e;
        if (top.postMessage) {
            top.postMessage(e, "*")
        } else {
            window.location.hash = "h" + e
        }
    };

    function b() {
        return new d()
    }
    if ("undefined" === typeof exports) {
        window.responsiveIframe = b
    } else {
        c.exports.responsiveIframe = b
    }
}());
if (!window.CQ_Analytics) {
    window.CQ_Analytics = {}
}
CQ_Analytics.Operator = (function() {
    return function() {}
})();
CQ_Analytics.Operator.IS = "is";
CQ_Analytics.Operator.EQUALS = "equals";
CQ_Analytics.Operator.NOT_EQUAL = "notequal";
CQ_Analytics.Operator.GREATER = "greater";
CQ_Analytics.Operator.GREATER_OR_EQUAL = "greaterorequal";
CQ_Analytics.Operator.OLDER = "older";
CQ_Analytics.Operator.OLDER_OR_EQUAL = "olderorequal";
CQ_Analytics.Operator.LESS = "less";
CQ_Analytics.Operator.LESS_OR_EQUAL = "lessorequal";
CQ_Analytics.Operator.YOUNGER = "younger";
CQ_Analytics.Operator.YOUNGER_OR_EQUAL = "youngerorequal";
CQ_Analytics.Operator.CONTAINS = "contains";
CQ_Analytics.Operator.BEGINS_WITH = "beginswith";
CQ_Analytics.OperatorActions = function() {
    var mapping = {};
    var addOperator = function(name, text, operation) {
        mapping[name] = [text, operation]
    };
    addOperator(CQ_Analytics.Operator.EQUALS, "equals", "==");
    addOperator(CQ_Analytics.Operator.IS, "is", "==");
    addOperator(CQ_Analytics.Operator.NOT_EQUAL, "is not equal to", "!=");
    addOperator(CQ_Analytics.Operator.GREATER, "is greater than", ">");
    addOperator(CQ_Analytics.Operator.GREATER_OR_EQUAL, "is equal to or greater than", ">=");
    addOperator(CQ_Analytics.Operator.OLDER, "is older than", ">");
    addOperator(CQ_Analytics.Operator.OLDER_OR_EQUAL, "is equal to or older than", ">=");
    addOperator(CQ_Analytics.Operator.LESS, "is less than", "<");
    addOperator(CQ_Analytics.Operator.LESS_OR_EQUAL, "is equal to or less than", "<=");
    addOperator(CQ_Analytics.Operator.YOUNGER, "is younger than", "<");
    addOperator(CQ_Analytics.Operator.YOUNGER_OR_EQUAL, "is equal to or younger than", "<=");
    addOperator(CQ_Analytics.Operator.CONTAINS, "contains", function(s1, s2) {
        if (s1) {
            if (s2) {
                s1 = "" + s1;
                s2 = "" + s2;
                return s1.toLowerCase().indexOf(s2.toLowerCase()) != -1
            }
            return true
        }
        return false
    });
    addOperator(CQ_Analytics.Operator.BEGINS_WITH, "begins with", function(s1, s2) {
        if (s1) {
            if (s2) {
                s1 = "" + s1;
                s2 = "" + s2;
                return s1.toLowerCase().indexOf(s2.toLowerCase()) == 0
            }
            return true
        }
        return false
    });
    var getByIndex = function(op, index) {
        if (mapping[op] && mapping[op][index]) {
            return mapping[op][index]
        }
        return ""
    };
    var escapeQuote = function(str) {
        if (str) {
            str = str.replace(new RegExp("\\'", "ig"), str)
        }
        return str
    };
    return {
        getText: function(operator) {
            return getByIndex(operator, 0)
        },
        setText: function(operator, newText) {
            if (mapping[operator] && mapping[operator][0]) {
                mapping[operator][0] = newText
            }
        },
        getOperation: function(operator) {
            return getByIndex(operator, 1)
        },
        operate: function(object, property, operator, value, valueFormat) {
            try {
                if (object && object[property]) {
                    var toEval = "";
                    var op = this.getOperation(operator);
                    op = op ? op : operator;
                    var objectValue = CQ.shared.XSS.getXSSTablePropertyValue(object, property);
                    if (typeof op == "function") {
                        return op.call(this, objectValue, value, valueFormat)
                    } else {
                        if (valueFormat) {
                            toEval = valueFormat + "('" + objectValue + "') " + op + " " + valueFormat + "('" + value + "')"
                        } else {
                            var s1 = escapeQuote(objectValue);
                            var s2 = escapeQuote(value);
                            toEval = "'" + s1 + "' " + op + " '" + s2 + "'"
                        }
                        var b = eval(toEval);
                        return b
                    }
                }
            } catch (e) {}
            return false
        }
    }
}();
CQ_Analytics.Utils = new function() {
    return {
        registerDocumentEventHandler: function(c, b) {
            var a = window.document[c];
            if (typeof window.document[c] != "function") {
                window.document[c] = b
            } else {
                window.document[c] = function(d) {
                    if (a) {
                        a(d)
                    }
                    b(d)
                }
            }
        },
        eventWrapper: function(a) {
            return function(d) {
                var c, b;
                if (document.all) {
                    c = window.event.keyCode;
                    b = window.event
                } else {
                    c = (typeof(d.which) != "undefined") ? d.which : 0;
                    b = d
                }
                if (b) {
                    a(b, c)
                }
            }
        },
        loadElement: function(a, b) {
            $CQ("#" + b).load(a)
        },
        loadTeaserElement: function(a, d) {
            var e = $CQ("#" + d).css("height");
            var f = $CQ("#" + d).height();
            if (f > 0) {
                $CQ("#" + d).css("height", f)
            }
            var g = function(m) {
                if (m && m != "") {
                    var h = $CQ(m).css("display", "none");
                    $CQ("#" + d).append(h);
                    h.fadeIn(function() {
                        if (e && e != "0px") {
                            $CQ("#" + d).css("height", e)
                        }
                    })
                } else {
                    if (e && e != "0px") {
                        $CQ("#" + d).css("height", e)
                    }
                }
            };
            var j = function(h, m) {
                if (!CQ_Analytics.Utils.teasersCache) {
                    CQ_Analytics.Utils.teasersCache = {}
                }
                CQ_Analytics.Utils.teasersCache[h] = m
            };
            var b = function() {
                if (CQ_Analytics.Utils.teasersCache && CQ_Analytics.Utils.teasersCache[a]) {
                    g(CQ_Analytics.Utils.teasersCache[a])
                } else {
                    CQ_Analytics.Utils.teasersLoading = CQ_Analytics.Utils.teasersLoading || {};
                    if (CQ_Analytics.Utils.teasersLoading[a]) {
                        window.setTimeout(function() {
                            CQ_Analytics.Utils.loadTeaserElement(a, d)
                        }, 100)
                    } else {
                        CQ_Analytics.Utils.teasersLoading[a] = true;
                        k()
                    }
                }
            };
            var k = function() {
                var m = a;
                var h = location.href;
                if (typeof CQ_CONTENT_PATH != "undefined") {
                    h = CQ_CONTENT_PATH
                }
                var n = CQ.shared.HTTP.getParameter(h, "wcmmode");
                if (n) {
                    m += (m.indexOf("?") > 0 ? "&" : "?") + "wcmmode=" + n
                }
                CQ.shared.HTTP.get(m, function(s, r, p) {
                    if (r) {
                        var q = p.body;
                        if (q) {
                            q = q.replace(new RegExp("\\n", "ig"), "");
                            q = q.replace(new RegExp("\\r", "ig"), "");
                            j(a, q);
                            delete CQ_Analytics.Utils.teasersLoading[a];
                            b()
                        }
                    } else {
                        j(a, "")
                    }
                })
            };
            var c = $CQ("#" + d).children().length;
            if (c > 0) {
                var l = 0;
                $CQ("#" + d).children().fadeOut(function() {
                    var h = $CQ(this);
                    window.setTimeout(function() {
                        h.remove();
                        l++;
                        if (l >= c) {
                            b()
                        }
                    }, 50)
                })
            } else {
                b()
            }
        },
        clearElement: function(a) {
            if (a) {
                $CQ("#" + a).html("")
            }
        },
        indexOf: function(d, c) {
            for (var b = 0, a = d.length; b < a; b++) {
                if (d[b] == c) {
                    return b
                }
            }
            return -1
        },
        load: function(a, c, b) {
            return CQ.shared.HTTP.get(a, c, b)
        },
        post: function(a, d, c, b) {
            return CQ.shared.HTTP.post(a, d, c, b)
        },
        getPagePath: function() {
            return CQ.shared.HTTP.getPath()
        },
        getPath: function(a) {
            return CQ.shared.HTTP.getPath(a)
        },
        addParameter: function(b, a, c) {
            return CQ.shared.HTTP.addParameter(b, a, c)
        },
        removeParameters: function(a) {
            return CQ.shared.HTTP.removeParameters(a)
        },
        removeAnchor: function(a) {
            return CQ.shared.HTTP.removeAnchor(a)
        },
        getSchemeAndAuthority: function(a) {
            return CQ.shared.HTTP.getSchemeAndAuthority(a)
        },
        internalize: function(a, b) {
            return CQ.shared.HTTP.internalize(b)
        },
        externalize: function(a, b) {
            return CQ.shared.HTTP.externalize(a, b)
        },
        encodePathOfURI: function(a) {
            return CQ.shared.HTTP.encodePathOfURI(a)
        },
        encodePath: function(a) {
            return CQ.shared.HTTP.encodePath(a)
        },
        getContextPath: function() {
            return CQ.shared.HTTP.getContextPath()
        },
        detectContextPath: function() {
            return CQ.shared.HTTP.detectContextPath()
        },
        urlEncode: function(h) {
            if (!h) {
                return ""
            }
            if (typeof h == "string") {
                return h
            }
            var c = [];
            for (var f in h) {
                var e = h[f],
                    b = encodeURIComponent(f);
                var g = typeof e;
                if (g == "undefined") {
                    c.push(b, "=&")
                } else {
                    if (g != "function" && g != "object") {
                        c.push(b, "=", encodeURIComponent(e), "&")
                    } else {
                        if (typeof e == "array") {
                            if (e.length) {
                                for (var d = 0, a = e.length; d < a; d++) {
                                    c.push(b, "=", encodeURIComponent(e[d] === undefined ? "" : e[d]), "&")
                                }
                            } else {
                                c.push(b, "=&")
                            }
                        }
                    }
                }
            }
            c.pop();
            return c.join("")
        },
        getUID: function() {
            var a = Math.floor(Math.random() * (Math.pow(2, 42) - 1));
            return this.getTimestamp().toString(16) + a.toString(16)
        },
        getTimestamp: function() {
            var a = new Date();
            return a.getTime()
        },
        insert: function(d, c, b) {
            if (!d || isNaN(c) || !b) {
                return d
            }
            var a = "";
            var f = 0;
            var e = c;
            while (e < d.length) {
                a += d.substring(f, e) + b;
                f += c;
                e += c
            }
            if (f < d.length) {
                a += d.substring(f)
            }
            return a
        },
        addListener: function() {
            if (window.addEventListener) {
                return function(d, b, c, a) {
                    d.addEventListener(b, c, (a))
                }
            } else {
                if (window.attachEvent) {
                    return function(d, b, c, a) {
                        d.attachEvent("on" + b, c)
                    }
                } else {
                    return function() {}
                }
            }
        },
        removeListener: function() {
            if (window.removeEventListener) {
                return function(d, b, c, a) {
                    d.removeEventListener(b, c, (a))
                }
            } else {
                if (window.detachEvent) {
                    return function(c, a, b) {
                        c.detachEvent("on" + a, b)
                    }
                } else {
                    return function() {}
                }
            }
        }
    }
};
CQ_Analytics.ClickstreamcloudRenderingUtils = new function() {
    return {
        createLink: function(f, d, b, a) {
            var c = document.createElement("a");
            c.href = a;
            c.onclick = d;
            c.innerHTML = f;
            if (b) {
                for (var e in b) {
                    if (b.hasOwnProperty(e)) {
                        c[e] = b[e]
                    }
                }
            }
            return c
        },
        createStaticLink: function(d, a, c) {
            var b = document.createElement("a");
            b.href = a;
            b.innerHTML = d;
            b.title = c;
            b.alt = c;
            return b
        },
        createNameValue: function(b, d, a, e) {
            var c = document.createElement("span");
            c.className = a || "ccl-data";
            c.innerHTML = b + " = " + d;
            c.title = e;
            c.alt = e;
            return c
        },
        createText: function(d, a, c) {
            var b = document.createElement("span");
            b.className = a || "ccl-data";
            if (d && d.indexOf && ((d.indexOf("/home") != -1 && d.indexOf("/image") != -1) || (d.indexOf("/") != -1 && d.indexOf(".png") != -1))) {
                b.innerHTML = '<img src="' + d + '.prof.thumbnail.png" border="0">'
            } else {
                if (d && d.indexOf && d.indexOf("www.gravatar.com") != -1) {
                    b.innerHTML = '<img src="' + d + '">'
                } else {
                    b.innerHTML = d
                }
            }
            b.title = c;
            b.alt = c;
            return b
        },
        createEditablePropertySpan: function(b, d) {
            var a = "var editSpan = this.nextSibling; this.style.display = 'none'; editSpan.style.display = 'block';";
            var e = "var editSpan = this.parentNode; var readSpan = this.parentNode.previousSibling;var newValue = this.value;editSpan.style.display = 'none'; readSpan.innerHTML = '" + b + " = '+value; readSpan.style.display = 'block';";
            var c = document.createElement("span");
            c.innerHTML = '<span class="ccl-data" onclick="' + a + '">' + b + " = " + d + "</span>";
            c.innerHTML += '<span class="ccl-data" style="display: none;">' + b + ' = <input class="ccl-input" type="text" value="' + d + '" onblur="' + e + '"></span>';
            c.className = "ccl-data";
            return c
        }
    }
};
CQ_Analytics.ClientContextUtils = new function() {
    return {
        renderStoreProperty: function(f, c, b, d, e, a) {
            if (CQ_Analytics && CQ_Analytics.CCM) {
                CQ_Analytics.CCM.onReady(function() {
                    var g = function() {
                        var h = CQ_Analytics.StoreRegistry.getStore(c);
                        if (h) {
                            var j = function() {
                                var m = h.getProperty(b) || a;
                                var l = $CQ("#" + f);
                                if (l.attr("contenteditable") && l.attr("contenteditable") != "inherit") {
                                    return
                                }
                                if (typeof(m) == "string" && ((m.indexOf("/") == 0 && (m.toLowerCase().indexOf(".png") != -1 || m.toLowerCase().indexOf(".jpg") != -1 || m.toLowerCase().indexOf(".gif") != -1) || m.toLowerCase().indexOf("http") == 0))) {
                                    if (!m || m == "") {
                                        l.children().remove();
                                        if (CQ_Analytics.isUIAvailable) {
                                            l.html(CQ.I18n.getMessage("No", null, "Ex: No address, No keywords") + " " + b)
                                        } else {
                                            l.html("No " + b)
                                        }
                                    } else {
                                        var k = "";
                                        if (l.parents(".cq-cc-thumbnail").length == 0 || m.toLowerCase().indexOf("http") == 0 || m.indexOf("/libs/wcm/mobile") == 0) {
                                            k = m.replace(new RegExp("&amp;", "g"), "&")
                                        } else {
                                            k = "/etc/clientcontext/shared/thumbnail/content.png";
                                            k = CQ.shared.HTTP.addParameter(k, "path", CQ_Analytics.Variables.replaceVariables(m))
                                        }
                                        k = CQ_Analytics.Variables.replaceVariables(k);
                                        if (l.find("div").css("background-image") != "url(" + k + ")") {
                                            if (h.fireEvent("beforepropertyrender", h, f) !== false) {
                                                l.html("");
                                                l.children().remove();
                                                $CQ("<div>").addClass("cq-cc-thumbnail-img").css("background-image", "url(" + CQ.shared.HTTP.externalize(k) + ")").appendTo(l);
                                                h.fireEvent("propertyrender", h, f)
                                            }
                                        }
                                    }
                                } else {
                                    m = CQ_Analytics.Variables.replaceVariables(m);
                                    if (CQ_Analytics.isUIAvailable) {
                                        m = (!m || m == "") ? CQ.I18n.getMessage("No", null, "Ex: No address, No keywords") + " " + b : m = d + m + e
                                    } else {
                                        m = (!m || m == "") ? "No " + b : m = d + m + e
                                    }
                                    if (l.html() != m) {
                                        if (h.fireEvent("beforepropertyrender", h, f) !== false) {
                                            l.html(m);
                                            h.fireEvent("propertyrender", h, f)
                                        }
                                    }
                                }
                            };
                            if (h.fireEvent("beforeinitialpropertyrender", h, f) !== false) {
                                j();
                                if (h.addListener) {
                                    h.addListener("update", function() {
                                        j()
                                    })
                                }
                                h.fireEvent("initialpropertyrender", h, f)
                            }
                        }
                    };
                    CQ_Analytics.ClientContextUtils.onStoreRegistered(c, g)
                })
            }
        },
        renderStore: function(b, a) {
            if (CQ_Analytics && CQ_Analytics.CCM && b && a) {
                CQ_Analytics.CCM.onReady(function() {
                    var c = function() {
                        var d = CQ_Analytics.StoreRegistry.getStore(a);
                        if (d) {
                            d.divId = b;
                            var e = function() {
                                if (d.fireEvent("beforerender", d, d.divId) !== false) {
                                    d.renderer(d, d.divId);
                                    d.fireEvent("render", d, d.divId)
                                }
                            };
                            if (d.fireEvent("beforeinitialrender", d, b) !== false) {
                                e();
                                if (d.addListener) {
                                    d.addListener("update", function() {
                                        e()
                                    })
                                }
                                d.fireEvent("initialrender", d, b)
                            }
                        }
                    };
                    CQ_Analytics.ClientContextUtils.onStoreRegistered(a, c)
                })
            }
        },
        storesOptionsProvider: function() {
            var c = [];
            var a = CQ_Analytics.StoreRegistry.getStores();
            for (var b in a) {
                c.push({
                    value: b
                })
            }
            return c
        },
        storePropertiesOptionsProvider: function(c, e) {
            var b = [];
            var a = CQ_Analytics.StoreRegistry.getStore(c);
            if (a) {
                var g = a.getPropertyNames();
                for (var d = 0; d < g.length; d++) {
                    var f = g[d];
                    if (!CQ.shared.XSS.KEY_REGEXP.test(f)) {
                        var h = {
                            value: f
                        };
                        if (e) {
                            h.text = f + " - " + a.getProperty(f)
                        }
                        b.push(h)
                    }
                }
            }
            return b
        },
        onStoreRegistered: function(b, c) {
            if (c) {
                var a = CQ_Analytics.StoreRegistry.getStore(b);
                if (a) {
                    c.call(a, a)
                } else {
                    CQ_Analytics.CCM.addListener("storeregister", function(f, d) {
                        if (d.getName() == b) {
                            c.call(d, d)
                        }
                    })
                }
            }
        },
        onStoreInitialized: function(c, e, b) {
            if (b === true) {
                b = CQ_Analytics.ClientContextUtils.DEFAULT_INIT_DELAY
            }
            var d = function() {
                var f = CQ_Analytics.StoreRegistry.getStore(c);
                if (f.DELAYED_INIT_TIMEOUT) {
                    window.clearTimeout(f.DELAYED_INIT_TIMEOUT);
                    f.DELAYED_INIT_TIMEOUT = null
                }
                if (b > 0) {
                    f.DELAYED_INIT_TIMEOUT = window.setTimeout(function() {
                        f.DELAYED_INIT_TIMEOUT = null;
                        e.call(f, "initialize", f)
                    }, b)
                } else {
                    e.call(f, "initialize", f)
                }
            };
            var a = CQ_Analytics.StoreRegistry.getStore(c);
            if (a) {
                if (a.isInitialized()) {
                    d.call(a);
                    a.addListener("initialize", function(g, f) {
                        d.call(f)
                    })
                } else {
                    a.addListener("initialize", function(g, f) {
                        d.call(f)
                    })
                }
            } else {
                CQ_Analytics.CCM.addListener("storeregister", function(g, f) {
                    if (f.getName() == c) {
                        CQ_Analytics.ClientContextUtils.onStoreInitialized(c, e, b)
                    }
                })
            }
        },
        init: function(d, c) {
            CQ_Analytics.ClientContextMgr.PATH = d;
            CQ_Analytics.ClientContextMgr.loadConfig(null, true);
            var a = CQ.shared.HTTP.externalize(d + "/content/jcr:content/stores.init.js");
            a = CQ.shared.HTTP.addParameter(a, "path", c);
            a = CQ.shared.HTTP.noCaching(a);
            var b = CQ.shared.HTTP.get(a)
        },
        initUI: function(c, a, b) {
            CQ_Analytics.ClientContextUI.create(c, a, b)
        }
    }
};
CQ_Analytics.ClientContextUtils.DEFAULT_INIT_DELAY = 200;
CQ_Analytics.Variables = new function() {
    return {
        containsVariable: function(a) {
            return CQ_Analytics.Variables.getVariables(a).length > 0
        },
        getVariables: function(b) {
            if (!b || typeof(b) != "string") {
                return []
            }
            var a = b.match(new RegExp("\\$\\{([\\w/]*)\\}", "ig"));
            return a ? a : []
        },
        replaceVariables: function(e) {
            if (!e) {
                return e
            }
            var f = "";
            var d = e;
            var g = CQ_Analytics.Variables.getVariables(e);
            while (g.length > 0 && f.indexOf(g.join()) == -1) {
                for (var c = 0; c < g.length; c++) {
                    var b = CQ_Analytics.Variables.getPropertyPath(g[c]);
                    var a = CQ_Analytics.ClientContext.get(b) || "";
                    d = CQ_Analytics.Variables.replace(d, b, a)
                }
                f += g.join();
                g = CQ_Analytics.Variables.getVariables(d)
            }
            return d
        },
        getPropertyPath: function(a) {
            if (!a || a.length < 2) {
                return null
            }
            return a.substring(2, a.length - 1)
        },
        getPropertyName: function(a) {
            var c = CQ_Analytics.Variables.getPropertyPath(a);
            if (c) {
                var b = c.split("/");
                if (b.length == 3) {
                    return b[2]
                }
            }
            return null
        },
        getStoreName: function(a) {
            var c = CQ_Analytics.Variables.getPropertyPath(a);
            if (c) {
                var b = c.split("/");
                if (b.length > 1) {
                    return b[1]
                }
            }
            return null
        },
        replace: function(a, b, c) {
            return a.replace(new RegExp("\\$\\{" + b + "\\}", "ig"), c)
        }
    }
};
CQ_Analytics.SessionPersistence = CQ.shared.ClientSidePersistence;
CQ_Analytics.Cookie = CQ.shared.ClientSidePersistence.CookieHelper;
CQ_Analytics.Observable = function() {
    this.fireEvent = function(d) {
        if (d && this.listeners && !this.suppressEvents) {
            d = d.toLowerCase();
            var b = Array.prototype.slice.call(arguments, 0);
            var e = this.listeners.slice(0);
            for (var c = 0; c < e.length; c++) {
                var a = e[c];
                if (d == a.event) {
                    if (a.fireFn.apply(a.scope || this || window, b) === false) {
                        return false
                    }
                }
            }
        }
        return true
    }
};
CQ_Analytics.Observable.prototype.addListener = function(c, a, b) {
    this.listeners = this.listeners || new Array();
    if (c && a) {
        this.listeners.push({
            event: c.toLowerCase(),
            fireFn: a,
            scope: b
        })
    }
};
CQ_Analytics.Observable.prototype.removeListener = function(c, a) {
    this.listeners = this.listeners || new Array();
    if (c && a) {
        for (var b = 0; b < this.listeners.length; b++) {
            if (this.listeners[b].event == c && this.listeners[b].fireFn == a) {
                this.listeners.splice(b, 1)
            }
        }
    }
};
CQ_Analytics.Observable.prototype.setSuppressEvents = function(a) {
    this.suppressEvents = a
};
CQ_Analytics.Observable.prototype.listeners = null;
CQ_Analytics.Observable.prototype.suppressEvents = false;
if (!CQ_Analytics.StoreRegistry) {
    CQ_Analytics.StoreRegistry = new function() {
        var a = {};
        return {
            register: function(b) {
                if (b.STORENAME) {
                    a[b.STORENAME] = b
                }
            },
            getStores: function() {
                return a
            },
            getStore: function(b) {
                return a[b]
            }
        }
    }()
}
CQ_Analytics.SessionStore = function() {};
CQ_Analytics.SessionStore.prototype = new CQ_Analytics.Observable();
CQ_Analytics.SessionStore.prototype.setProperty = function(a, b) {
    if (this.data == null) {
        this.init()
    }
    this.data[a] = b;
    this.fireEvent("update", a)
};
CQ_Analytics.SessionStore.prototype.setProperties = function(b) {
    if (this.data == null) {
        this.init()
    }
    var d = [];
    for (var a in b) {
        if (b.hasOwnProperty(a)) {
            d.push(a);
            var c = b[a];
            this.data[a] = c
        }
    }
    if (d.length > 0) {
        this.fireEvent("update", d)
    }
};
CQ_Analytics.SessionStore.prototype.initialized = false;
CQ_Analytics.SessionStore.prototype.init = function() {
    this.initialized = true;
    this.fireEvent("initialize", this)
};
CQ_Analytics.SessionStore.prototype.getLabel = function(a) {
    return a
};
CQ_Analytics.SessionStore.prototype.getLink = function(a) {
    return a
};
CQ_Analytics.SessionStore.prototype.removeProperty = function(a) {
    if (this.data == null) {
        this.init()
    }
    if (this.data[a]) {
        delete this.data[a]
    }
    this.fireEvent("update", a)
};
CQ_Analytics.SessionStore.prototype.getPropertyNames = function(a) {
    if (this.data == null) {
        this.init()
    }
    a = a ? a : [];
    var b = new Array();
    for (var c in this.data) {
        if (CQ_Analytics.Utils.indexOf(a, c) == -1) {
            b.push(c)
        }
    }
    return b
};
CQ_Analytics.SessionStore.prototype.getSessionStore = function() {
    return this
};
CQ_Analytics.SessionStore.prototype.clear = function() {
    this.data = null
};
CQ_Analytics.SessionStore.prototype.getData = function(b) {
    if (this.data == null) {
        this.init()
    }
    if (b) {
        var a = {};
        for (var c in this.data) {
            if (CQ_Analytics.Utils.indexOf(b, c) == -1) {
                a[c] = this.data[c]
            }
        }
        return a
    } else {
        return this.data
    }
};
CQ_Analytics.SessionStore.prototype.reset = function() {
    if (this.data != null) {
        this.data = null;
        this.fireEvent("update")
    }
};
CQ_Analytics.SessionStore.prototype.getProperty = function(b, a) {
    if (this.data == null) {
        this.init()
    }
    var d = this.data[b];
    if (!a) {
        var c = CQ.shared.XSS.getXSSValue(d);
        return c
    }
    return d
};
CQ_Analytics.SessionStore.prototype.getName = function() {
    return this.STORENAME
};
CQ_Analytics.SessionStore.prototype.addInitProperty = function(a, b) {
    if (!this.initProperty) {
        this.initProperty = {}
    }
    this.initProperty[a] = b
};
CQ_Analytics.SessionStore.prototype.getInitProperty = function(a) {
    return this.initProperty ? this.initProperty[a] : null
};
CQ_Analytics.SessionStore.prototype.loadInitProperties = function(c, a) {
    if (c) {
        for (var b in c) {
            this.addInitProperty(b, c[b]);
            if (a && this.data && this.data[b] === undefined) {
                this.setProperty(b, c[b])
            }
        }
    }
};
CQ_Analytics.SessionStore.prototype.isInitialized = function() {
    return this.initialized
};
CQ_Analytics.PersistedSessionStore = function() {};
CQ_Analytics.PersistedSessionStore.prototype = new CQ_Analytics.SessionStore();
CQ_Analytics.PersistedSessionStore.prototype.STOREKEY = "key";
CQ_Analytics.PersistedSessionStore.prototype.setNonPersisted = function(a) {
    if (!this.nonPersisted) {
        this.nonPersisted = {}
    }
    this.nonPersisted[a] = true
};
CQ_Analytics.PersistedSessionStore.EXCLUDED_PROPERTIES_REGEX = "^generated*";
CQ_Analytics.PersistedSessionStore.prototype.isPersisted = function(a) {
    if (!this.nonPersisted) {
        this.nonPersisted = {}
    }
    return this.nonPersisted[a] !== true && !new RegExp(CQ_Analytics.PersistedSessionStore.EXCLUDED_PROPERTIES_REGEX, "ig").test(a) && !$CQ.isFunction(this.data[a]) && (typeof this.data[a]) != "object"
};
CQ_Analytics.PersistedSessionStore.prototype.getStoreKey = function() {
    return this.STOREKEY
};
CQ_Analytics.PersistedSessionStore.prototype.persist = function() {
    if (this.fireEvent("beforepersist") !== false) {
        var a = new CQ_Analytics.SessionPersistence({
            container: "ClientContext"
        });
        a.set(this.getStoreKey(), this.toString());
        this.fireEvent("persist")
    }
};
CQ_Analytics.PersistedSessionStore.prototype.setProperty = function(a, b) {
    if (this.data == null) {
        this.init()
    }
    this.data[a] = b;
    if (this.isPersisted(a)) {
        this.persist()
    }
    this.fireEvent("update", a)
};
CQ_Analytics.PersistedSessionStore.prototype.setProperties = function(b) {
    if (this.data == null) {
        this.init()
    }
    var d = [];
    var e = false;
    for (var a in b) {
        if (b.hasOwnProperty(a)) {
            d.push(a);
            var c = b[a];
            this.data[a] = c;
            if (this.isPersisted(a)) {
                e = true
            }
        }
    }
    if (e) {
        this.persist()
    }
    if (d.length > 0) {
        this.fireEvent("update", d)
    }
};
CQ_Analytics.PersistedSessionStore.prototype.toString = function() {
    var b = null;
    if (this.data) {
        var a = function(e) {
            if (!e || typeof(e) != "string") {
                return e
            }
            var d = e;
            d = d.replace(new RegExp(",", "g"), "&#44;");
            d = d.replace(new RegExp("=", "g"), "&#61;");
            d = d.replace(new RegExp("\\|", "g"), "&#124;");
            return d
        };
        for (var c in this.data) {
            if (this.isPersisted(c) && this.data.hasOwnProperty(c)) {
                b = (b === null ? "" : b + ",");
                b += (c + "=" + a(this.data[c]))
            }
        }
    }
    return b
};
CQ_Analytics.PersistedSessionStore.prototype.parse = function(e) {
    var d = function(h) {
        if (!h || typeof(h) != "string") {
            return h
        }
        var g = h;
        g = g.replace(new RegExp("&#44;", "g"), ",");
        g = g.replace(new RegExp("&#61;", "g"), "=");
        g = g.replace(new RegExp("&#124;", "g"), "|");
        return g
    };
    var c = {};
    var f = e.split(",");
    for (var a in f) {
        if (f.hasOwnProperty(a)) {
            var b = f[a].split("=");
            if (b.length == 2) {
                c[b[0]] = d(b[1])
            }
        }
    }
    return c
};
CQ_Analytics.PersistedSessionStore.prototype.reset = function(a) {
    if (this.data != null) {
        this.data = {};
        this.persist();
        this.data = null;
        if (!a) {
            this.fireEvent("update")
        }
    }
};
CQ_Analytics.PersistedSessionStore.prototype.removeProperty = function(a) {
    if (this.data == null) {
        this.init()
    }
    if (this.data[a]) {
        delete this.data[a];
        if (this.isPersisted(a)) {
            this.persist()
        }
    }
    this.fireEvent("update", a)
};
CQ_Analytics.PersistedSessionStore.prototype.clear = function() {
    var a = new CQ_Analytics.SessionPersistence({
        container: "ClientContext"
    });
    a.remove(this.getStoreKey());
    this.data = null
};
if (!CQ_Analytics.ClientContextMgr) {
    CQ_Analytics.ClientContextMgr = function() {
        this.clientcontext = null;
        this.clientcontextToServer = null;
        this.stores = {};
        this.data = null;
        this.config = null;
        this.isConfigLoaded = false;
        this.areStoresLoaded = false
    };
    CQ_Analytics.ClientContextMgr.prototype = new CQ_Analytics.PersistedSessionStore();
    CQ_Analytics.ClientContextMgr.prototype.STOREKEY = "CLIENTCONTEXT";
    CQ_Analytics.ClientContextMgr.prototype.STORENAME = "clientcontext";
    CQ_Analytics.ClientContextMgr.prototype.INITIALIZATION_EVENT_TIMER = 1000;
    CQ_Analytics.ClientContextMgr.prototype.CONFIG_PATH = CQ_Analytics.Utils.externalize("/etc/clientcontext/legacy/config.json", true);
    CQ_Analytics.ClientContextMgr.prototype.init = function() {
        if (!this.initialized) {
            this.clientcontext = {};
            this.clientcontextToServer = {}
        }
        var a = new CQ_Analytics.SessionPersistence({
            container: "ClientContext"
        });
        var b = a.get(this.getStoreKey());
        if (b) {
            this.data = this.parse(b)
        } else {
            this.data = {}
        }
        this.initialized = true;
        this.fireEvent("initialize", this)
    };
    CQ_Analytics.ClientContextMgr.prototype.getSessionId = function() {
        if (!this.data.sessionId) {
            this.setSessionId(CQ_Analytics.Utils.getUID())
        }
        return this.data.sessionId
    };
    CQ_Analytics.ClientContextMgr.prototype.setSessionId = function(a) {
        if (a) {
            this.setProperty("sessionId", a)
        }
    };
    CQ_Analytics.ClientContextMgr.prototype.getVisitorId = function() {
        return this.data.visitorId
    };
    CQ_Analytics.ClientContextMgr.prototype.setVisitorId = function(a) {
        this.setProperty("visitorId", a)
    };
    CQ_Analytics.ClientContextMgr.prototype.getId = function() {
        var a = this.getVisitorId();
        if (!a) {
            return this.getSessionId()
        }
        return a
    };
    CQ_Analytics.ClientContextMgr.prototype.isAnonymous = function() {
        var a = this.getVisitorId();
        return (!a)
    };
    CQ_Analytics.ClientContextMgr.prototype.isMode = function(a) {
        return CQ_Analytics.ClientContextMgr.ServerStorage.isMode(a)
    };
    CQ_Analytics.ClientContextMgr.prototype.get = function(a) {
        if (this.clientcontext == null) {
            this.init()
        }
        if (a) {
            return this.clientcontextToServer
        }
        return this.clientcontext
    };
    CQ_Analytics.ClientContextMgr.prototype.register = function(c) {
        if (this.clientcontext == null) {
            this.init()
        }
        var a = this;
        this.clientcontext[c.getName()] = c.getData();
        this.stores[c.getName()] = c;
        CQ_Analytics.StoreRegistry.register(c);
        var b = this.getStoreConfig(c.getName());
        if (b.stats !== false && b.stats != "false") {
            this.clientcontextToServer[c.getName()] = c.getData(b.excludedFromStats)
        }
        if (this.initTimer) {
            window.clearTimeout(this.initTimer);
            this.initTimer = null
        }
        this.initTimer = window.setTimeout(function() {
            a.fireEvent("storesinitialize");
            a.areStoresInitialized = true
        }, this.INITIALIZATION_EVENT_TIMER);
        c.addListener("update", function() {
            a.update(c)
        });
        CQ_Analytics.ClientContextMgr.ServerStorage.handleStoreRegistration(c);
        this.addListener("clear", function() {
            c.clear()
        });
        this.fireEvent("storeregister", c);
        this.fireEvent("storeupdate", c)
    };
    CQ_Analytics.ClientContextMgr.prototype.update = function(b) {
        if (this.clientcontext == null) {
            this.init()
        }
        this.clientcontext[b.getName()] = b.getData();
        var a = this.getStoreConfig(b.getName());
        if (a.stats !== false && a.stats != "false") {
            this.clientcontextToServer[b.getName()] = b.getData(a.excludedFromStats)
        }
        this.fireEvent("storeupdate", b)
    };
    CQ_Analytics.ClientContextMgr.prototype.startPosting = function() {
        return CQ_Analytics.ClientContextMgr.ServerStorage.startPosting()
    };
    CQ_Analytics.ClientContextMgr.prototype.stopPosting = function() {
        return CQ_Analytics.ClientContextMgr.ServerStorage.stopPosting()
    };
    CQ_Analytics.ClientContextMgr.prototype.post = function() {
        return CQ_Analytics.ClientContextMgr.ServerStorage.post()
    };
    CQ_Analytics.ClientContextMgr.prototype.getCCMToJCR = function() {
        return CQ_Analytics.ClientContextMgr.ServerStorage.getCCMToJCR()
    };
    CQ_Analytics.ClientContextMgr.prototype.getName = function() {
        return this.STORENAME
    };
    CQ_Analytics.ClientContextMgr.prototype.clear = function() {
        this.clientcontext = null;
        this.clientcontextToServer = null;
        this.fireEvent("clear")
    };
    CQ_Analytics.ClientContextMgr.prototype.getRegisteredStore = function(a) {
        return this.stores && this.stores[a] ? this.stores[a] : null
    };
    CQ_Analytics.ClientContextMgr.prototype.loadConfig = function(c, autoConfig) {
        var setConfig = function(ccm, config) {
            ccm.config = config;
            ccm.isConfigLoaded = true;
            ccm.fireEvent("configloaded");
            ccm.fireEvent("storesloaded");
            ccm.areStoresLoaded = true
        };
        if (c) {
            setConfig(this, c)
        } else {
            if (!autoConfig) {
                var params = {};
                params.path = CQ_Analytics.Utils.getPagePath();
                params.cq_ck = new Date().valueOf();
                var url = this.CONFIG_PATH;
                url += "?" + CQ_Analytics.Utils.urlEncode(params);
                CQ_Analytics.Utils.load(url, function(data, status, response) {
                    var config = {};
                    try {
                        config = eval("config = " + response.responseText)
                    } catch (error) {}
                    setConfig(this, config)
                }, this)
            } else {
                setConfig(this, {})
            }
        }
    };
    CQ_Analytics.ClientContextMgr.prototype.getConfig = function() {
        return this.config
    };
    CQ_Analytics.ClientContextMgr.prototype.getStoreConfig = function(a) {
        if (this.config && this.config.configs && this.config.configs[a] && this.config.configs[a]["store"]) {
            return this.config.configs[a]["store"]
        }
        return {}
    };
    CQ_Analytics.ClientContextMgr.prototype.getEditConfig = function(a) {
        if (this.config && this.config.configs && this.config.configs[a] && this.config.configs[a]["edit"]) {
            return this.config.configs[a]["edit"]
        }
        return {}
    };
    CQ_Analytics.ClientContextMgr.prototype.getUIConfig = function(a) {
        if (this.config && this.config.configs && this.config.configs[a] && this.config.configs[a]["ui"]) {
            return this.config.configs[a]["ui"]
        }
        return {}
    };
    CQ_Analytics.ClientContextMgr.prototype.getInitialData = function(a) {
        if (this.config && this.config.data && this.config.data[a]) {
            return this.config.data[a]
        }
        return {}
    };
    CQ_Analytics.ClientContextMgr.prototype.getStores = function() {
        return this.stores
    };
    CQ_Analytics.ClientContextMgr.prototype.onReady = function(b, a) {
        if (b) {
            if (this.areStoresLoaded) {
                b.call(a)
            } else {
                this.addListener("storesloaded", b, a)
            }
        }
    };
    CQ_Analytics.ClientContextMgr = CQ_Analytics.CCM = new CQ_Analytics.ClientContextMgr();
    CQ_Analytics.ClickstreamcloudMgr = CQ_Analytics.CCM;
    CQ_Analytics.ContextCloudMgr = CQ_Analytics.CCM;
    CQ_Analytics.ClientContextMgr.PATH = null;
    CQ_Analytics.ClientContextMgr.getClientContextURL = function(a) {
        return CQ_Analytics.ClientContextMgr.PATH + a
    };
    window.setTimeout(function() {
        CQ_Analytics.CCM.init()
    }, 1);
    CQ_Analytics.Utils.addListener(window, "unload", function() {
        try {
            for (var b in CQ_Analytics.ClientContextMgr) {
                delete CQ_Analytics.ClientContextMgr[b]
            }
            CQ_Analytics.ClientContextMgr = null
        } catch (a) {}
        CQ_Analytics.CCM = null
    })
}
if (CQ_Analytics.ClientContextMgr && !CQ_Analytics.ClientContextMgr.ServerStorage) {
    CQ_Analytics.ClientContextMgr.ServerStorage = function() {
        this.posting = false;
        this.initialized = false
    };
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.POST_MODE_PAGELOAD = 1;
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.POST_MODE_TIMER = 2;
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.POST_MODE_DATAUPDATE = 4;
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.POST_TIMER = 600;
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.POST_PROCESS_TIMER = 60;
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.POST_MODE = 6;
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.POST_PATH = "/var/statistics/";
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.init = function() {
        if (this.isMode(CQ_Analytics.ClientContextMgr.ServerStorage.POST_MODE_TIMER)) {
            var a = this;
            var b = function() {
                a.timer = window.setInterval(function() {
                    try {
                        var d = parseInt(a.data.lastPost);
                        var f = false;
                        if (isNaN(d)) {
                            f = true
                        } else {
                            var e = new Date().getTime();
                            if (e > d + CQ_Analytics.ClientContextMgr.ServerStorage.POST_TIMER * 1000) {
                                f = true
                            }
                        }
                    } catch (c) {}
                    if (f) {
                        a.post()
                    }
                }, CQ_Analytics.ClientContextMgr.ServerStorage.POST_PROCESS_TIMER * 1000)
            };
            b.call(this)
        }
        this.initialized = true
    };
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.isMode = function(a) {
        return (CQ_Analytics.CCM.POST_MODE & a) > 0
    };
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.handleStoreRegistration = function(a) {
        if (!this.initialized) {
            this.init()
        }
        if (this.isMode(CQ_Analytics.ClientContextMgr.ServerStorage.POST_MODE_DATAUPDATE)) {
            a.addListener("persist", function() {
                CQ_Analytics.ClientContextMgr.ServerStorage.post(a)
            })
        }
    };
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.startPosting = function() {
        this.posting = true
    };
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.stopPosting = function() {
        this.posting = false
    };
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.post = function(d, f) {
        if (this.posting || f) {
            try {
                var g = this.getCCMToJCR(d);
                var e = CQ_Analytics.Utils.getTimestamp();
                g["./jcr:primaryType"] = "nt:unstructured";
                g["./sessionId"] = CQ_Analytics.CCM.getSessionId();
                var c = this.POST_PATH + "clientcontext/";
                if (CQ_Analytics.CCM.isAnonymous()) {
                    var a = CQ_Analytics.Utils.insert(CQ_Analytics.CCM.getId(), 2, "/");
                    c += "anonymous/" + a + "/" + e
                } else {
                    c += "users/" + CQ_Analytics.CCM.getId() + "/" + e
                }
                CQ_Analytics.Utils.post(c, null, g);
                this.lastPost = e
            } catch (b) {}
        }
    };
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.getCCMToJCR = function(g) {
        var c = CQ_Analytics.CCM.get(true);
        var e = {};
        for (var j in c) {
            if (!g || j == g) {
                var a = c[j],
                    b = encodeURIComponent(j);
                var f = typeof a;
                if (f == "object") {
                    for (var d in a) {
                        var h = a[d];
                        d = d.replace(":", "/");
                        e["./" + j + "/./" + d] = h
                    }
                } else {
                    e["./" + j] = a
                }
            }
        }
        return e
    };
    CQ_Analytics.ClientContextMgr.ServerStorage = new CQ_Analytics.ClientContextMgr.ServerStorage();
    CQ_Analytics.ClickstreamcloudMgr.POST_MODE_PAGELOAD = CQ_Analytics.ClientContextMgr.ServerStorage.POST_MODE_PAGELOAD;
    CQ_Analytics.ClickstreamcloudMgr.POST_MODE_TIMER = CQ_Analytics.ClientContextMgr.ServerStorage.POST_MODE_TIMER;
    CQ_Analytics.ClickstreamcloudMgr.POST_MODE_DATAUPDATE = CQ_Analytics.ClientContextMgr.ServerStorage.POST_MODE_DATAUPDATE;
    CQ_Analytics.ClickstreamcloudMgr.POST_TIMER = CQ_Analytics.ClientContextMgr.ServerStorage.POST_PROCESS_TIMER;
    CQ_Analytics.ClickstreamcloudMgr.POST_PROCESS_TIMER = CQ_Analytics.ClientContextMgr.ServerStorage.POST_PROCESS_TIMER;
    CQ_Analytics.ClickstreamcloudMgr.POST_MODE = CQ_Analytics.ClientContextMgr.ServerStorage.POST_MODE;
    CQ_Analytics.ClickstreamcloudMgr.POST_PATH = CQ_Analytics.ClientContextMgr.ServerStorage.POST_PATH
}
CQ_Analytics.Percentile = {};
CQ_Analytics.Percentile.matchesPercentiles = function(b) {
    var d = ClientContext.get("/surferinfo/percentile");
    if (!d) {
        d = Math.round(Math.random() * 100);
        ClientContext.set("/surferinfo/percentile", d)
    }
    for (var c = 0; c < b.length; c++) {
        var a = b[c];
        if ((a.start <= d) && (d < a.end)) {
            return true
        }
    }
    return false
};
if (!CQ_Analytics.SegmentMgr) {
    CQ_Analytics.SegmentMgr = function() {
        this.SEGMENTATION_ROOT = "/etc/segmentation";
        this.SEGMENT_SELECTOR = ".segment.js";
        this.SEGMENTATION_SCRIPT_LOADER = "cq-segmentation-loader";
        this.segments = {};
        this.boosts = {};
        var a = this;
        this.fireUpdate = function() {
            a.fireEvent("update")
        };
        this.init()
    };
    CQ_Analytics.SegmentMgr.prototype = new CQ_Analytics.SessionStore();
    CQ_Analytics.SegmentMgr.prototype.STORENAME = "segments";
    CQ_Analytics.SegmentMgr.prototype.register = function(a, c, b) {
        this.segments[a] = c;
        if (this.rulesCache && this.rulesCache[a]) {
            this.rulesCache[a] = false
        }
        this.boosts[a] = !isNaN(b) ? parseInt(b) : 0;
        this.fireUpdate()
    };
    CQ_Analytics.SegmentMgr.prototype.resolveArray = function(e, g, b) {
        g = g || CQ_Analytics.ClientContextMgr.get();
        if (!(e instanceof Array)) {
            return this.resolve(e, g)
        }
        b = (b == "AND" ? "AND" : "OR");
        var a = (b == "AND");
        for (var d = 0; d < e.length; d++) {
            var f = e[d];
            var c = this.resolve(f, g);
            if (b == "AND") {
                if (c !== true) {
                    return c
                }
            } else {
                if (c === true) {
                    return true
                }
            }
        }
        return a
    };
    CQ_Analytics.SegmentMgr.prototype.resolve = function(segmentPath, clientcontext) {
        clientcontext = clientcontext || CQ_Analytics.ClientContextMgr.get();
        if (!segmentPath) {
            return false
        }
        if (segmentPath instanceof Array) {
            return this.resolveArray(segmentPath, clientcontext)
        }
        if (segmentPath.indexOf(this.SEGMENTATION_ROOT) != 0) {
            return false
        }
        if (segmentPath == this.SEGMENTATION_ROOT) {
            return true
        }
        if (!this.segments[segmentPath]) {
            return true
        }
        var parent = segmentPath.substring(0, segmentPath.lastIndexOf("/"));
        if (parent.indexOf(this.SEGMENTATION_ROOT) == 0) {
            var pres = this.resolve(parent, clientcontext);
            if (pres !== true) {
                return pres
            }
        }
        var rules = "function(clientcontext, contextcloud, clickstreamcloud) { return true ";
        rules += " && ( " + this.segments[segmentPath] + " ) ";
        rules += ";}";
        var res = true;
        try {
            var f = null;
            this.rulesCache = this.rulesCache || {};
            if (this.rulesCache[segmentPath]) {
                f = this.rulesCache[segmentPath]
            } else {
                eval("f = " + rules + "");
                this.rulesCache[segmentPath] = f
            }
            var e = (f == null || f(clientcontext, clientcontext, clientcontext));
            res = res && (e === true)
        } catch (error) {
            return "Unresolved - Error while evaluating segment " + segmentPath + " : " + error.message
        }
        return res
    };
    CQ_Analytics.SegmentMgr.prototype.getResolved = function(c) {
        c = c || CQ_Analytics.ClientContextMgr.get();
        var a = new Array();
        for (var b in this.segments) {
            if (this.resolve(b, c) === true) {
                a.push(b)
            }
        }
        return a
    };
    CQ_Analytics.SegmentMgr.prototype.getMaxBoost = function(e, g) {
        if (!(e instanceof Array)) {
            return this.getBoost(e)
        }
        var c = 0;
        for (var d = 0; d < e.length; d++) {
            var f = e[d];
            if (this.resolve(f, g) === true) {
                var a = this.boosts[f] || 0;
                if (a > c) {
                    c = a
                }
            }
        }
        return c
    };
    CQ_Analytics.SegmentMgr.prototype.getBoost = function(a) {
        if (!(a instanceof Array)) {
            a = [a]
        }
        return this.boosts[a] || 0
    };
    CQ_Analytics.SegmentMgr.prototype.reload = function(path) {
        var url = path;
        if (!url) {
            url = this.SEGMENTATION_ROOT
        }
        if (url) {
            if (url.indexOf(this.SEGMENT_SELECTOR) == -1) {
                url += this.SEGMENT_SELECTOR
            }
            try {
                CQ_Analytics.Utils.load(url, function(config, status, response) {
                    if (response && response.responseText) {
                        eval(response.responseText)
                    }
                }, this);
                var response = CQ.HTTP.get(scripts[i].src)
            } catch (err) {}
        }
    };
    CQ_Analytics.SegmentMgr.prototype.getSessionStore = function() {
        return this
    };
    CQ_Analytics.SegmentMgr.prototype.getProperty = function(a) {
        return a
    };
    CQ_Analytics.SegmentMgr.prototype.getLink = function(a) {
        return a + ".html"
    };
    CQ_Analytics.SegmentMgr.prototype.getLabel = function(c) {
        if (c) {
            var b = c;
            var a = b.lastIndexOf("/");
            if (a != -1) {
                b = b.substring(a + 1, b.length)
            }
            var d = this.resolve(c);
            if (d === true) {
                return b
            } else {
                if (d !== true) {
                    return '<span class="invalid" title="' + d + '" alt="' + d + '">' + b + "</span>"
                }
            }
        }
        return c
    };
    CQ_Analytics.SegmentMgr.prototype.getPropertyNames = function() {
        return this.getResolved()
    };
    CQ_Analytics.SegmentMgr = new CQ_Analytics.SegmentMgr();
    CQ_Analytics.SegmentMgr.loadSegments = function(a) {
        CQ_Analytics.SegmentMgr.areSegmentsLoaded = false;
        CQ.shared.HTTP.get(CQ.shared.HTTP.externalize(a + ".segment.js"));
        CQ_Analytics.SegmentMgr.areSegmentsLoaded = true;
        this.fireEvent("segmentsload")
    };
    CQ_Analytics.SegmentMgr.renderer = function(a, c) {
        if (a && a.STORENAME == CQ_Analytics.SegmentMgr.STORENAME) {
            var e = a.getPropertyNames();
            var f = [];
            f.push("<div>");
            for (var d = 0; d < e.length; d++) {
                var b = e[d];
                f.push('<span title="' + a.getProperty(b) + '" ><a href="' + CQ.shared.HTTP.externalize(a.getLink(b)) + '"  title="' + a.getProperty(b) + '" >' + a.getLabel(b) + "</a></span>")
            }
            f.push("</div>");
            $CQ("#" + c).children().remove();
            $CQ("#" + c).append(f.join(""))
        }
    };
    CQ_Analytics.ClientContextMgr.addListener("storeupdate", CQ_Analytics.SegmentMgr.fireUpdate);
    CQ_Analytics.Utils.addListener(window, "unload", function() {
        try {
            for (var b in CQ_Analytics.SegmentMgr) {
                delete CQ_Analytics.SegmentMgr[b]
            }
        } catch (a) {}
        CQ_Analytics.SegmentMgr = null
    })
}
if (!CQ_Analytics.StrategyMgr) {
    CQ_Analytics.StrategyMgr = function() {
        this.strategies = {}
    };
    CQ_Analytics.StrategyMgr.prototype = {};
    CQ_Analytics.StrategyMgr.prototype.isRegistered = function(a) {
        return !!this.strategies[a]
    };
    CQ_Analytics.StrategyMgr.prototype.register = function(b, a) {
        if (typeof a == "function") {
            this.strategies[b] = a
        }
    };
    CQ_Analytics.StrategyMgr.prototype.choose = function(b, a) {
        if (a.length == 1) {
            return a[0]
        }
        if (this.strategies[b]) {
            return this.strategies[b].call(this, a)
        }
        return null
    };
    CQ_Analytics.StrategyMgr = new CQ_Analytics.StrategyMgr()
}
CQ_Analytics.StrategyMgr.register("clickstream-score", function(h) {
    if (h.length == 1) {
        return h[0]
    }
    var a = [];
    if (CQ_Analytics.TagCloudMgr) {
        var m = CQ_Analytics.TagCloudMgr.getTags();
        m = m || {};
        var l = -1;
        for (var e = 0; e < h.length; e++) {
            var g = 0;
            var k = h[e].tags;
            if (k) {
                for (var d = 0; d < k.length; d++) {
                    var f = k[d].tagID;
                    g += parseInt(m[f]) || 0
                }
            }
            if (g == l) {
                a.push(h[e])
            } else {
                if (g > l) {
                    a = [];
                    a.push(h[e]);
                    l = g
                }
            }
        }
    } else {
        a = h
    }
    if (a.length == 1) {
        return a[0]
    }
    var b = null;
    if (CQ_Analytics.PageDataMgr) {
        b = CQ_Analytics.PageDataMgr.getProperty("random")
    }
    if (!b) {
        b = window.CQ_StrategyRandom
    }
    if (!b) {
        b = window.CQ_StrategyRandom = Math.random()
    }
    if (parseFloat(b) > 1) {
        b = 1 / b
    }
    if (parseFloat(b) == 1) {
        b = 0
    }
    var c = Math.floor(b * a.length);
    return a[c]
});
CQ_Analytics.StrategyMgr.register("first", function(a) {
    return a[0]
});
CQ_Analytics.StrategyMgr.register("random", function(c) {
    var a = null;
    if (CQ_Analytics.PageDataMgr) {
        a = CQ_Analytics.PageDataMgr.getProperty("random")
    }
    if (!a) {
        a = window.CQ_StrategyRandom
    }
    if (!a) {
        a = window.CQ_StrategyRandom = Math.random()
    }
    if (parseFloat(a) > 1) {
        a = 1 / a
    }
    if (parseFloat(a) == 1) {
        a = 0
    }
    var b = Math.floor(a * c.length);
    return c[b]
});
if (!CQ_Analytics.PageDataMgr) {
    CQ_Analytics.PageDataMgr = function() {};
    CQ_Analytics.PageDataMgr.prototype = new CQ_Analytics.SessionStore();
    CQ_Analytics.PageDataMgr.prototype.STORENAME = "pagedata";
    CQ_Analytics.PageDataMgr.prototype.FORCE_EXPERIENCE_COOKIE = "cq-forceexperience";
    CQ_Analytics.PageDataMgr.prototype.init = function() {
        this.data = {};
        for (var a in this.initProperty) {
            this.data[a] = this.initProperty[a]
        }
        this.initialized = true;
        this.fireEvent("initialize", this);
        this.fireEvent("update")
    };
    CQ_Analytics.PageDataMgr.prototype.getLabel = function(a) {
        return a
    };
    CQ_Analytics.PageDataMgr.prototype.getLink = function(a) {
        return ""
    };
    CQ_Analytics.PageDataMgr.prototype.setExperience = function(a) {
        CQ.shared.HTTP.setCookie(CQ_Analytics.PageDataMgr.FORCE_EXPERIENCE_COOKIE, a, "/")
    };
    CQ_Analytics.PageDataMgr.prototype.getExperience = function() {
        return CQ.shared.HTTP.getCookie(CQ_Analytics.PageDataMgr.FORCE_EXPERIENCE_COOKIE, "/")
    };
    CQ_Analytics.PageDataMgr.prototype.clearExperience = function() {
        CQ.shared.HTTP.clearCookie(CQ_Analytics.PageDataMgr.FORCE_EXPERIENCE_COOKIE, "/")
    };
    CQ_Analytics.PageDataMgr = new CQ_Analytics.PageDataMgr();
    CQ_Analytics.CCM.addListener("configloaded", function() {
        this.loadInitProperties(CQ_Analytics.CCM.getInitialData(this.getName()));
        this.init();
        CQ_Analytics.CCM.register(this)
    }, CQ_Analytics.PageDataMgr)
}
CQ_Analytics.BrowserInfo = function() {
    var g = navigator.userAgent.toLowerCase();
    var d = function(b) {
        return b.test(g)
    };
    var f = function() {
        if (d(/opera/)) {
            return {
                browserFamily: "Opera",
                browserVersion: ""
            }
        }
        if (d(/chrome/)) {
            return {
                browserFamily: "Chrome",
                browserVersion: ""
            }
        }
        if (d(/safari/)) {
            if (d(/applewebkit\/4/)) {
                return {
                    browserFamily: "Safari",
                    browserVersion: "2"
                }
            }
            if (d(/version\/3/)) {
                return {
                    browserFamily: "Safari",
                    browserVersion: "3"
                }
            }
            if (d(/version\/4/)) {
                return {
                    browserFamily: "Safari",
                    browserVersion: "4"
                }
            }
            if (d(/version\/5/)) {
                return {
                    browserFamily: "Safari",
                    browserVersion: "5"
                }
            }
            if (d(/version\/6/)) {
                return {
                    browserFamily: "Safari",
                    browserVersion: "6"
                }
            }
            return {
                browserFamily: "Safari",
                browserVersion: "7 or higher"
            }
        }
        if (d(/webkit/)) {
            return {
                browserFamily: "WebKit",
                browserVersion: ""
            }
        }
        if (d(/msie/)) {
            if (d(/msie 6/)) {
                return {
                    browserFamily: "IE",
                    browserVersion: "6"
                }
            }
            if (d(/msie 7/)) {
                return {
                    browserFamily: "IE",
                    browserVersion: "7"
                }
            }
            if (d(/msie 8/)) {
                return {
                    browserFamily: "IE",
                    browserVersion: "8"
                }
            }
            if (d(/msie 9/)) {
                return {
                    browserFamily: "IE",
                    browserVersion: "9"
                }
            }
            if (d(/msie 10/)) {
                return {
                    browserFamily: "IE",
                    browserVersion: "10"
                }
            }
            return {
                browserFamily: "IE",
                browserVersion: "11 or higher"
            }
        }
        if (d(/gecko/)) {
            if (d(/rv:1\.8/)) {
                return {
                    browserFamily: "Firefox",
                    browserVersion: "2"
                }
            }
            if (d(/rv:1\.9/)) {
                return {
                    browserFamily: "Firefox",
                    browserVersion: "3"
                }
            }
            if (d(/rv:2.0/)) {
                return {
                    browserFamily: "Firefox",
                    browserVersion: "4"
                }
            }
            if (d(/rv:5./)) {
                return {
                    browserFamily: "Firefox",
                    browserVersion: "5"
                }
            }
            if (d(/rv:6./)) {
                return {
                    browserFamily: "Firefox",
                    browserVersion: "6"
                }
            }
            if (d(/rv:7./)) {
                return {
                    browserFamily: "Firefox",
                    browserVersion: "7"
                }
            }
            if (d(/rv:8./)) {
                return {
                    browserFamily: "Firefox",
                    browserVersion: "8"
                }
            }
            if (d(/rv:9./)) {
                return {
                    browserFamily: "Firefox",
                    browserVersion: "9"
                }
            }
            return {
                browserFamily: "Firefox",
                browserVersion: "10 or higher"
            }
        }
        var b = d(/adobeair/);
        if (b) {
            return {
                browserFamily: "Adobe AIR",
                browserVersion: ""
            }
        }
        return {
            browserFamily: "Unresolved",
            browserVersion: "Unresolved"
        }
    };
    var e = function() {
        if (d(/windows 98|win98/)) {
            return "Windows 98"
        }
        if (d(/windows nt 5.0|windows 2000/)) {
            return "Windows 2000"
        }
        if (d(/windows nt 5.1|windows xp/)) {
            return "Windows XP"
        }
        if (d(/windows nt 5.2/)) {
            return "Windows Server 2003"
        }
        if (d(/windows nt 6.0/)) {
            return "Windows Vista"
        }
        if (d(/windows nt 6.1/)) {
            return "Windows 7"
        }
        if (d(/windows nt 4.0|winnt4.0|winnt/)) {
            return "Windows NT 4.0"
        }
        if (d(/windows me/)) {
            return "Windows ME"
        }
        if (d(/mac os x/)) {
            if (d(/ipad/) || d(/iphone/)) {
                return "iOS"
            }
            return "Mac OS X"
        }
        if (d(/macintosh|mac os/)) {
            return "Mac OS"
        }
        if (d(/android/)) {
            return "Android"
        }
        if (d(/linux/)) {
            return "Linux"
        }
        return "Unresolved"
    };
    var c = function() {
        if (d(/ipad/)) {
            return "iPad"
        }
        if (d(/iphone/)) {
            return "iPhone"
        }
        if (d(/mobi/)) {
            return "Mobile"
        }
        return "Desktop"
    };
    var a = f.call();
    this.browserFamily = a.browserFamily;
    this.browserVersion = a.browserVersion;
    this.OSName = e.call();
    this.deviceType = c.call();
    this.ua = g;
    var h = /^https/i.test(window.location.protocol);
    this.screenResolution = screen.width + "x" + screen.height
};
CQ_Analytics.BrowserInfo.prototype = {
    getBrowserName: function() {
        return this.browserFamily + " " + this.browserVersion
    },
    getBrowserFamily: function() {
        return this.browserFamily
    },
    getBrowserVersion: function() {
        return this.browserVersion
    },
    getOSName: function() {
        return this.OSName
    },
    getScreenResolution: function() {
        return this.screenResolution
    },
    getDeviceType: function() {
        return this.deviceType
    },
    getUserAgent: function() {
        return this.ua
    },
    isMobile: function(a) {
        if (!a) {
            a = this.getDeviceType()
        }
        a = a ? a.toLowerCase() : "desktop";
        return a != "desktop"
    },
    isIE: function(a) {
        return this.getBrowserFamily() == "IE" && (a ? this.getBrowserVersion() == a : true)
    },
    isIE6: function() {
        return this.isIE("6")
    },
    isIE7: function() {
        return this.isIE("7")
    },
    isIE8: function() {
        return this.isIE("8")
    },
    isIE9: function() {
        return this.isIE("9")
    }
};
CQ_Analytics.BrowserInfoInstance = new CQ_Analytics.BrowserInfo();
if (!CQ_Analytics.MousePositionMgr) {
    CQ_Analytics.MousePositionMgr = function() {
        this.position = {
            x: 0,
            y: 0
        };
        this.getPageX = function(c) {
            var b = c.pageX;
            if (!b && 0 !== b) {
                b = c.clientX || 0
            }
            return b
        };
        this.getPageY = function(b) {
            var c = b.pageY;
            if (!c && 0 !== c) {
                c = b.clientY || 0
            }
            return c
        };
        var a = this;
        this.timer = null;
        $CQ(document).bind("mousemove", function(h, g, f, l) {
            var j = h || window.event;
            if (j) {
                if (!a.timer) {
                    var d = a.getPageX(j);
                    var k = a.getPageY(j);
                    a.timer = setTimeout(function() {
                        a.setPosition(d, k);
                        a.timer = null
                    }, 500)
                }
            }
        });
        this.init()
    };
    CQ_Analytics.MousePositionMgr.prototype = new CQ_Analytics.SessionStore();
    CQ_Analytics.MousePositionMgr.prototype.STORENAME = "mouseposition";
    CQ_Analytics.MousePositionMgr.prototype.setPosition = function(a, b) {
        this.position.x = a;
        this.position.y = b;
        this.fireEvent("update")
    };
    CQ_Analytics.MousePositionMgr.prototype.getProperty = function(a) {
        return this.position[a]
    };
    CQ_Analytics.MousePositionMgr.prototype.getLabel = function(a) {
        return a
    };
    CQ_Analytics.MousePositionMgr.prototype.getLink = function(a) {
        return ""
    };
    CQ_Analytics.MousePositionMgr.prototype.getPropertyNames = function() {
        var a = new Array();
        for (var b in this.position) {
            a.push(b)
        }
        return a
    };
    CQ_Analytics.MousePositionMgr.prototype.getSessionStore = function() {
        return this
    };
    CQ_Analytics.MousePositionMgr.prototype.getData = function(a) {
        return this.position
    };
    CQ_Analytics.MousePositionMgr.prototype.clear = function() {
        this.position = {}
    };
    CQ_Analytics.MousePositionMgr = new CQ_Analytics.MousePositionMgr();
    CQ_Analytics.CCM.addListener("configloaded", function() {
        CQ_Analytics.CCM.register(this)
    }, CQ_Analytics.MousePositionMgr)
}
if (!CQ_Analytics.EventDataMgr) {
    CQ_Analytics.EventDataMgr = function() {};
    CQ_Analytics.EventDataMgr.prototype = new CQ_Analytics.SessionStore();
    CQ_Analytics.EventDataMgr.prototype.STORENAME = "eventdata";
    CQ_Analytics.EventDataMgr.prototype.init = function() {
        this.data = {};
        for (var a in this.initProperty) {
            this.data[a] = this.initProperty[a]
        }
        this.initialized = true;
        this.fireEvent("initialize", this);
        this.fireEvent("update")
    };
    CQ_Analytics.EventDataMgr.prototype.getLabel = function(a) {
        return a
    };
    CQ_Analytics.EventDataMgr.prototype.getLink = function(a) {
        return ""
    };
    CQ_Analytics.EventDataMgr = new CQ_Analytics.EventDataMgr();
    CQ_Analytics.CCM.addListener("configloaded", function() {
        this.loadInitProperties(CQ_Analytics.CCM.getInitialData(this.getName()));
        this.init();
        CQ_Analytics.CCM.register(this)
    }, CQ_Analytics.EventDataMgr)
}
if (!window.CQ_Context) {
    window.CQ_Context = function() {};
    window.CQ_Context.prototype = new CQ_Analytics.Observable();
    window.CQ_Context.prototype.getProfile = function() {
        return (function() {
            return {
                getUserId: function() {
                    return this.getProperty("authorizableId")
                },
                getDisplayName: function() {
                    var a = this.getProperty("formattedName");
                    if (a) {
                        return a
                    }
                    a = this.getProperty("displayName");
                    if (a) {
                        return a
                    }
                    return this.getUserId()
                },
                getFirstname: function() {
                    return this.getProperty("givenName")
                },
                getLastname: function() {
                    return this.getProperty("familyName")
                },
                getEmail: function() {
                    return this.getProperty("email")
                },
                getProperty: function(a) {
                    if (CQ_Analytics && CQ_Analytics.ProfileDataMgr) {
                        return CQ_Analytics.ProfileDataMgr.getProperty(a)
                    }
                    return ""
                },
                getProperties: function() {
                    if (CQ_Analytics && CQ_Analytics.ProfileDataMgr) {
                        return CQ_Analytics.ProfileDataMgr.getData()
                    }
                    return {}
                },
                getAvatar: function() {
                    return this.getProperty("avatar")
                },
                onUpdate: function(a, b) {
                    if (a && CQ_Analytics && CQ_Analytics.ProfileDataMgr) {
                        CQ_Analytics.ProfileDataMgr.addListener("update", a, b || this)
                    }
                }
            }
        })()
    };
    window.CQ_Context = new window.CQ_Context()
}
CQ_Analytics.Engine = function() {
    window.CQ_trackTeasersStats = true;

    function h() {
        return !!(window.CQ && CQ.WCM && CQ.WCM.isEditMode())
    }

    function c(m) {
        var k = $CQ.Deferred();
        var l = CQ.WCM.getEditable(m);
        if (l) {
            k.resolve(l)
        } else {
            CQ.WCM.onEditableReady(m, function(n) {
                k.resolve(n)
            })
        }
        return k.promise()
    }

    function f(l, k) {
        if (!CQ_Analytics.loadedTeasersStack) {
            CQ_Analytics.loadedTeasersStack = [];
            $CQ(window).unload(function() {
                try {
                    var m = CQ_Analytics.loadedTeasersStack;
                    if (m) {
                        delete CQ_Analytics.loadedTeasersStack;
                        var o = k;
                        for (var p = 0; p < m.length; p++) {
                            o = CQ.shared.HTTP.addParameter(o, "path", m[p])
                        }
                        CQ.shared.HTTP.get(o, function() {})
                    }
                } catch (n) {}
            })
        }
        CQ_Analytics.loadedTeasersStack.push(l.path)
    }

    function d(q, p, m) {
        var o = "",
            r;

        function k(w, v, x, u) {
            return '<a href="' + v + '" class="cq-teaser-segment-link"><img src="' + x + '" class="cq-teaser-decision-thumbnail ' + (u ? "cq-teaser-decision-match" : "cq-teaser-decision-nomatch") + '"></a>' + w + "<br>"
        }
        for (var n = 0; n < q.length; n++) {
            var l = q[n];
            var t = CQ.shared.HTTP.externalize(l.teaser.path + ".html");
            if (l.hasOwnProperty("boost")) {
                if (l.noSegment) {
                    r = CQ.I18n.getMessage("Experience: {0} - match (no segments, boost = {1})", [l.teaser.title, l.boost])
                } else {
                    r = CQ.I18n.getMessage("Experience: {0} - match (boost = {1})", [l.teaser.title, l.boost])
                }
                var s = k(r, t, l.teaser.thumbnail, true);
                if (p === l.teaser.path) {
                    o += "<b>" + s + "</b>"
                } else {
                    o += s
                }
            } else {
                if (l.unknownSegment) {
                    r = CQ.I18n.getMessage("Experience: {0} - no match (unknown segment)", [l.teaser.title])
                } else {
                    r = CQ.I18n.getMessage("Experience: {0} - no match", [l.teaser.title])
                }
                o += k(r, t, l.teaser.thumbnail, false)
            }
        }
        o += "<br>";
        if (m) {
            o += CQ.I18n.getMessage("Strategy <b>{0}</b> selected current teaser.", m)
        } else {
            o += CQ.I18n.getMessage("No strategy configured, used the first match.")
        }
        o += "<br>";
        return o
    }

    function j(m, l, k, n) {
        m.done(function(o) {
            if (o.teaserToolTip) {
                o.teaserToolTip.hide();
                o.teaserToolTip.remove()
            }
            o.teaserToolTip = new CQ.Ext.Tip({
                html: d(l, k, n),
                title: CQ.I18n.getMessage("Selection decision"),
                width: 450,
                autoHide: false,
                closable: true,
                height: 300,
                floating: true,
                autoHeight: false,
                bodyStyle: "overflow-y: scroll;"
            });
            o.on(CQ.wcm.EditRollover.EVENT_SHOW_HIGHTLIGHT, function(p) {
                if (!this.teaserInfoButton) {
                    this.teaserInfoButton = CQ.Ext.DomHelper.append("CQ", {
                        tag: "div",
                        cls: "x-tool x-tool-help cq-teaser-tooltip-tool"
                    }, true);
                    this.teaserInfoButton.position("absolute");
                    this.teaserInfoButton.on("click", function() {
                        var q = this.getXY();
                        o.teaserToolTip.setPosition(q[0] - 460, q[1] - 100);
                        o.teaserToolTip.show()
                    })
                }
                this.teaserInfoButton.anchorTo(p.frameBottom.getEl(), "tr", [-26, -15]);
                this.teaserInfoButton.show()
            });
            o.on(CQ.wcm.EditRollover.EVENT_HIDE_HIGHTLIGHT, function(p) {
                if (this.teaserInfoButton) {
                    this.teaserInfoButton.hide()
                }
            })
        })
    }

    function g(k) {
        k.done(function(l) {
            if (l.teaserToolTip) {
                l.teaserToolTip.hide();
                l.teaserToolTip.remove();
                l.teaserToolTip = null
            }
        })
    }

    function b(t, s) {
        var o = [];
        var q = 0;
        for (var m = 0; m < t.length; m++) {
            var l = t[m],
                p = l.segments;
            var k;
            if (s) {
                k = {
                    teaser: l
                };
                s.push(k)
            }
            var n = !p || p.length === 0;
            if (n && k) {
                k.noSegment = true
            }
            if (!n && CQ_Analytics.SegmentMgr.resolve(p)) {
                n = true;
                if (p && p.length > 0) {
                    if (!CQ_Analytics.SegmentMgr.segments[p[0]]) {
                        n = false;
                        if (k) {
                            k.unknownSegment = true
                        }
                    }
                }
            }
            if (n) {
                var r = CQ_Analytics.SegmentMgr.getMaxBoost(p);
                if (k) {
                    k.boost = r
                }
                if (r === q) {
                    o.push(l)
                } else {
                    if (r > q) {
                        o = [];
                        o.push(l);
                        q = r
                    }
                }
            }
        }
        return o
    }
    var a = {};

    function e(k, l) {
        CQ_Analytics.Engine.stopTeaserLoader(k);
        a[k] = l
    }
    return {
        stopTeaserLoader: function(l) {
            var k = l.path || l;
            if (!k) {
                return
            }
            var m = a[k];
            if (m) {
                CQ_Analytics.SegmentMgr.removeListener("update", m);
                delete a[k]
            }
        },
        resolveTeaser: function(n, m, k) {
            var l = b(n, k);
            if (l.length === 0) {
                return null
            }
            return CQ_Analytics.StrategyMgr.choose(m, l) || l[0]
        },
        loadTeaser: function(k) {
            var n, m;
            if (h()) {
                m = CQ.WCM.getEditablePathFromDOM(document.getElementById(k.targetID));
                n = c(m)
            }
            var o = ClientContext.get("campaign");
            if (o && o.isCampaignSelected()) {
                return
            }
            var l = function() {
                var r = CQ_Analytics.PageDataMgr.getExperience();
                if (r) {
                    CQ_Analytics.PageDataMgr.clearExperience();
                    var s = "/_jcr_content/par.html";
                    if (h()) {
                        s += "?wcmmode=disabled"
                    }
                    CQ_Analytics.Utils.loadElement(r + s, k.targetID);
                    return
                }
                var q = null;
                var p = function() {
                    var u = null;
                    if (h()) {
                        u = []
                    }
                    var v = CQ_Analytics.Engine.resolveTeaser(k.teasers, k.strategy, u);
                    if (v) {
                        if (!q || q.path !== v.path) {
                            q = v;
                            var t = v.url;
                            if (h()) {
                                t += "?wcmmode=disabled"
                            }
                            CQ_Analytics.Utils.loadTeaserElement(t, k.targetID);
                            if (window.CQ_trackTeasersStats && k.trackingURL) {
                                f(v, k.trackingURL)
                            }
                            if (n) {
                                j(n, u, q.path, k.strategy)
                            }
                        }
                    } else {
                        if (n) {
                            g(n)
                        }
                        CQ_Analytics.Utils.clearElement(k.targetID);
                        q = null
                    }
                };
                p.call();
                if (CQ_Analytics.SegmentMgr) {
                    if (m) {
                        e(m, p)
                    }
                    CQ_Analytics.SegmentMgr.addListener("update", p)
                }
            };
            if (CQ_Analytics.CCM.areStoresInitialized) {
                l.call(this)
            } else {
                CQ_Analytics.CCM.addListener("storesinitialize", l)
            }
        }
    }
}();
window.CQ_trackTeasersStats = true;

function initializeTeaserLoader(b, f, g, e, a, d) {
    e = !!(CQ.Ext && (e == "true" || e === true));
    if (window.CQ_Analytics) {
        var c = function() {
            var n = "/_jcr_content/par.html";
            if (e) {
                n += "?wcmmode=disabled"
            }
            var l = CQ_Analytics.PageDataMgr.getExperience();
            if (l) {
                CQ_Analytics.PageDataMgr.clearExperience();
                CQ_Analytics.Utils.loadElement(l + n, g);
                return
            }
            var m = function(q) {
                var s = "";
                var w = new Array();
                if (CQ_Analytics.SegmentMgr) {
                    var u = 0;
                    for (var r = 0; r < b.length; r++) {
                        var t = CQ.shared.HTTP.externalize(b[r].path + ".html");
                        if (!b[r]["segments"] || b[r]["segments"].length == 0 || CQ_Analytics.SegmentMgr.resolveArray(b[r]["segments"]) === true) {
                            var o = CQ_Analytics.SegmentMgr.getMaxBoost(b[r]["segments"]);
                            var v = [b[r]["title"], o, b[r].thumbnail, t];
                            if (q == b[r].path) {
                                s += CQ.I18n.getMessage('<b><a href="{3}" class="cq-teaser-segment-link"><img src="{2}" class="cq-teaser-decision-thumbnail cq-teaser-decision-match"></a>Experience: {0} - match ( boost = {1} )</b><br>', v)
                            } else {
                                s += CQ.I18n.getMessage('<a href="{3}" class="cq-teaser-segment-link"><img src="{2}" class="cq-teaser-decision-thumbnail cq-teaser-decision-match"></a>Experience: {0} - match ( boost = {1} )<br>', v)
                            }
                            if (o == u) {
                                w.push(b[r])
                            } else {
                                if (o > u) {
                                    w = new Array();
                                    w.push(b[r]);
                                    u = o
                                }
                            }
                        } else {
                            var v = [b[r]["title"], b[r].thumbnail, t];
                            s += CQ.I18n.getMessage('<a href="{2}" class="cq-teaser-segment-link"><img src="{1}" class="cq-teaser-decision-thumbnail cq-teaser-decision-nomatch"></a>Experience: {0} - no match<br>', v)
                        }
                    }
                }
                s += CQ.I18n.getMessage("<br>Strategy <b>{0}</b> selected current teaser.<br>", f);
                return s
            };
            var k = null;
            var h = null;
            var j = function() {
                var v = new Array();
                if (CQ_Analytics.SegmentMgr) {
                    var t = 0;
                    for (var r = 0; r < b.length; r++) {
                        if (!b[r]["segments"] || b[r]["segments"].length == 0 || CQ_Analytics.SegmentMgr.resolveArray(b[r]["segments"]) === true) {
                            var o = CQ_Analytics.SegmentMgr.getMaxBoost(b[r]["segments"]);
                            if (o == t) {
                                v.push(b[r])
                            } else {
                                if (o > t) {
                                    v = new Array();
                                    v.push(b[r]);
                                    t = o
                                }
                            }
                        }
                    }
                }
                if (v.length > 0) {
                    var u = v[0];
                    if (CQ_Analytics.StrategyMgr) {
                        var s = CQ_Analytics.StrategyMgr.choose(f, v);
                        if (s != null) {
                            u = s
                        }
                    }
                    if (!k || k.path != u.path) {
                        k = u;
                        var p = u.path + n;
                        p = CQ.shared.HTTP.addSelectors(p, CQ.shared.HTTP.getSelectors(window.location.href));
                        CQ_Analytics.Utils.loadTeaserElement(p, g);
                        if (window.CQ_trackTeasersStats && a) {
                            if (!CQ_Analytics.loadedTeasersStack) {
                                CQ_Analytics.loadedTeasersStack = [];
                                $CQ(window).unload(function() {
                                    try {
                                        var w = CQ_Analytics.loadedTeasersStack;
                                        if (w) {
                                            delete CQ_Analytics.loadedTeasersStack;
                                            var y = a;
                                            for (var z = 0; z < w.length; z++) {
                                                y = CQ.shared.HTTP.addParameter(y, "path", w[z])
                                            }
                                            CQ.shared.HTTP.get(y, function() {})
                                        }
                                    } catch (x) {}
                                })
                            }
                            CQ_Analytics.loadedTeasersStack.push(u.path)
                        }
                        if (e) {
                            if (d) {
                                var q = CQ.WCM.getEditable(d);
                                if (q) {
                                    if (q && q.teaserToolTip) {
                                        q.teaserToolTip.hide();
                                        q.teaserToolTip.remove();
                                        q.teaserToolTip = null
                                    } else {
                                        q.on(CQ.wcm.EditRollover.EVENT_SHOW_HIGHTLIGHT, function(w) {
                                            if (!this.teaserInfoButton) {
                                                this.teaserInfoButton = CQ.Ext.DomHelper.append("CQ", {
                                                    tag: "div",
                                                    cls: "x-tool x-tool-help cq-teaser-tooltip-tool"
                                                }, true);
                                                this.teaserInfoButton.position("absolute");
                                                this.teaserInfoButton.on("click", function() {
                                                    if (!q.teaserToolTip) {
                                                        q.teaserToolTip = new CQ.Ext.Tip({
                                                            html: m(k.path),
                                                            title: CQ.I18n.getMessage("Selection decision"),
                                                            width: 450,
                                                            autoHide: false,
                                                            closable: true,
                                                            height: 300,
                                                            floating: true,
                                                            autoHeight: false,
                                                            bodyStyle: "overflow-y: scroll;"
                                                        })
                                                    }
                                                    var x = this.getXY();
                                                    q.teaserToolTip.setPosition(x[0] - 460, x[1] - 100);
                                                    q.teaserToolTip.show()
                                                })
                                            }
                                            this.teaserInfoButton.anchorTo(w.frameBottom.getEl(), "tr", [-26, -15]);
                                            this.teaserInfoButton.show()
                                        });
                                        q.on(CQ.wcm.EditRollover.EVENT_HIDE_HIGHTLIGHT, function(w) {
                                            if (this.teaserInfoButton) {
                                                this.teaserInfoButton.hide()
                                            }
                                        })
                                    }
                                }
                            }
                        }
                    }
                } else {
                    if (e) {
                        var q = CQ.WCM.getEditable(d);
                        if (q && q.teaserToolTip) {
                            q.teaserToolTip.hide();
                            q.teaserToolTip.remove();
                            q.teaserToolTip = null
                        }
                    }
                    CQ_Analytics.Utils.clearElement(g);
                    k = null
                }
            };
            j.call();
            if (CQ_Analytics.SegmentMgr) {
                CQ_Analytics.SegmentMgr.addListener("update", j)
            }
        };
        if (CQ_Analytics.CCM.areStoresInitialized) {
            c.call(this)
        } else {
            CQ_Analytics.CCM.addListener("storesinitialize", c)
        }
    }
}
window.CQ_trackLandingPagesStats = true;

function initializeLandingPageLoader(f, d, e, c, a) {
    c = CQ.Ext && (c == "true" || c === true);
    if (window.CQ_Analytics) {
        var g = ".html";
        var b = function() {
            var j = null;
            var h = function() {
                var l = new Array();
                if (CQ_Analytics.SegmentMgr) {
                    var s = 0;
                    for (var p = 0; p < f.length; p++) {
                        if (!f[p]["segments"] || f[p]["segments"].length == 0 || CQ_Analytics.SegmentMgr.resolveArray(f[p]["segments"]) === true) {
                            var v = CQ_Analytics.SegmentMgr.getMaxBoost(f[p]["segments"]);
                            if (v == s) {
                                l.push(f[p])
                            } else {
                                if (v > s) {
                                    l = new Array();
                                    l.push(f[p]);
                                    s = v
                                }
                            }
                        }
                    }
                }
                if (l.length > 0) {
                    var o = l[0];
                    if (CQ_Analytics.StrategyMgr) {
                        var t = CQ_Analytics.StrategyMgr.choose(d, l);
                        if (t != null) {
                            o = t
                        }
                    }
                    if (!j || j.path != o.path) {
                        var x = j;
                        j = o;
                        var n = CQ.shared.HTTP.get(o.path + g);
                        var y = n.responseText;
                        var q = function(K, A) {
                            var H = "";
                            if (K && K.indexOf('id="' + A + '"') != -1) {
                                var G = K.indexOf('id="' + A + '"');
                                var B = K.substring(0, G).lastIndexOf("<div");
                                var F = K.substring(B);
                                var J = F.split(new RegExp("<div", "ig"));
                                var D = 0;
                                for (var E = 0; E < J.length; E++) {
                                    D++;
                                    var I = J[E].split(new RegExp("</div", "ig"));
                                    for (var C = 1; C < I.length; C++) {
                                        D--;
                                        if (D == 1) {
                                            var z = J[E].lastIndexOf("</div") + 6;
                                            z = F.indexOf(J[E]) + z;
                                            F = F.substring(0, z);
                                            F = F.substring(F.indexOf(">") + 1, F.lastIndexOf("</div"));
                                            return F
                                        }
                                    }
                                }
                            }
                            return ""
                        };
                        y = q(y, e);
                        var u = $CQ("#" + e)[0];
                        var r = function(B, z) {
                            if (c) {
                                var C = CQ.WCM.getEditables();
                                for (var D in C) {
                                    var A = C[D];
                                    if (!B || A.path.indexOf(B) != -1) {
                                        A.hide();
                                        A.remove()
                                    }
                                }
                            }
                        };
                        var m = document.createElement("div");
                        m.innerHTML = y;
                        if (x) {
                            $CQ("object", u).parent().fadeOut("slow");
                            $CQ("img", u).fadeOut("slow");
                            $CQ(u).slideUp("slow", function() {
                                r(x.path, false);
                                $CQ(u).children().remove();
                                var z = u.insertBefore(m, u.firstChild);
                                $CQ(u).slideDown("slow", function() {
                                    if (c) {
                                        CQ.DOM.executeScripts(CQ.Ext.get(m))
                                    }
                                })
                            })
                        } else {
                            var k = u.insertBefore(m, u.firstChild);
                            $CQ(u).slideDown("slow", function() {
                                if (c) {
                                    CQ.DOM.executeScripts(CQ.Ext.get(m))
                                }
                            })
                        }
                        try {
                            if (window.CQ_trackLandingPagesStats && a) {
                                if (!CQ_Analytics.loadedLandingPagesStack) {
                                    CQ_Analytics.loadedLandingPagesStack = [];
                                    $CQ(window).unload(function() {
                                        try {
                                            var C = CQ_Analytics.loadedLandingPagesStack;
                                            if (C) {
                                                delete CQ_Analytics.loadedLandingPagesStack;
                                                var A = a;
                                                for (var B = 0; B < C.length; B++) {
                                                    A = CQ.shared.HTTP.addParameter(A, "path", C[B])
                                                }
                                                CQ.shared.HTTP.get(A, function() {})
                                            }
                                        } catch (z) {}
                                    })
                                }
                                CQ_Analytics.loadedLandingPagesStack.push(o.path)
                            }
                        } catch (w) {}
                    }
                } else {
                    CQ_Analytics.Utils.clearElement(e);
                    j = null
                }
            };
            h.call();
            if (CQ_Analytics.SegmentMgr) {
                CQ_Analytics.SegmentMgr.addListener("update", h)
            }
        };
        if (CQ_Analytics.ClickstreamcloudMgr) {
            if (CQ_Analytics.ClickstreamcloudMgr.areStoresLoaded) {
                b.call(this)
            } else {
                CQ_Analytics.ClickstreamcloudMgr.addListener("storesloaded", b)
            }
        }
    }
}
CQ_Analytics.PersistedJSONStore = function() {};
CQ_Analytics.PersistedJSONStore.prototype = new CQ_Analytics.PersistedSessionStore();
CQ_Analytics.PersistedJSONStore.prototype.STOREKEY = "";
CQ_Analytics.PersistedJSONStore.prototype.STORENAME = "";
CQ_Analytics.PersistedJSONStore.prototype.init = function() {
    var a = new CQ_Analytics.SessionPersistence({
        container: "ClientContext"
    });
    var b = a.get(this.getStoreKey());
    if (!b || b == "") {
        this.data = {};
        for (var c in this.initProperty) {
            this.data[c] = this.initProperty[c]
        }
    } else {
        this.data = this.parse(b)
    }
    this.persist();
    this.initialized = true;
    this.fireEvent("initialize", this);
    this.fireEvent("update")
};
CQ_Analytics.PersistedJSONStore.prototype.clear = function() {
    var a = new CQ_Analytics.SessionPersistence({
        container: "ClientContext"
    });
    a.remove(this.getStoreKey());
    this.data = null;
    this.initProperty = {}
};
CQ_Analytics.PersistedJSONStore.prototype.initJSON = function(b, c) {
    if (!c) {
        this.initProperty = {}
    }
    var a = function(g, d, f) {
        for (var e in f) {
            if (typeof f[e] == "object") {
                a(g, d ? d + "/" + e : e, f[e])
            } else {
                g[d ? d + "/" + e : e] = f[e]
            }
        }
    };
    a(this.initProperty, null, b)
};
CQ_Analytics.PersistedJSONStore.prototype.getJSON = function() {
    var e = this.getData();
    var c = {};
    for (var g in e) {
        var d = g.split("/");
        var f = c;
        for (var b = 0; b < d.length; b++) {
            var a = d[b];
            if (b == d.length - 1) {
                f[a] = e[g]
            } else {
                f[a] = f[a] || {};
                f = f[a]
            }
        }
    }
    return c
};
CQ_Analytics.PersistedJSONStore.getInstance = function(a, c) {
    var b = new CQ_Analytics.PersistedJSONStore();
    b.STOREKEY = a.toUpperCase();
    b.STORENAME = a;
    b.initJSON(c);
    return b
};
CQ_Analytics.PersistedJSONStore.registerNewInstance = function(a, b) {
    var c = CQ_Analytics.PersistedJSONStore.getInstance(a, b);
    c.init();
    CQ_Analytics.CCM.register(c);
    return c
};
CQ_Analytics.JSONStore = function() {};
CQ_Analytics.JSONStore.prototype = new CQ_Analytics.SessionStore();
CQ_Analytics.JSONStore.prototype.STOREKEY = "";
CQ_Analytics.JSONStore.prototype.STORENAME = "";
CQ_Analytics.JSONStore.prototype.init = function() {
    this.data = {};
    for (var a in this.initProperty) {
        this.data[a] = this.initProperty[a]
    }
    this.initialized = true;
    this.fireEvent("initialize", this);
    this.fireEvent("update")
};
CQ_Analytics.JSONStore.prototype.clear = function() {
    this.data = null;
    this.initProperty = {}
};
CQ_Analytics.JSONStore.prototype.initJSON = function(b, c) {
    if (!c) {
        this.initProperty = {}
    }
    var a = function(g, d, f) {
        for (var e in f) {
            if (typeof f[e] == "object") {
                a(g, d ? d + "/" + e : e, f[e])
            } else {
                g[d ? d + "/" + e : e] = f[e]
            }
        }
    };
    a(this.initProperty, null, b)
};
CQ_Analytics.JSONStore.prototype.getJSON = function() {
    var e = this.getData();
    var c = {};
    for (var g in e) {
        var d = g.split("/");
        var f = c;
        for (var b = 0; b < d.length; b++) {
            var a = d[b];
            if (b == d.length - 1) {
                f[a] = e[g]
            } else {
                f[a] = f[a] || {};
                f = f[a]
            }
        }
    }
    return c
};
CQ_Analytics.JSONStore.getInstance = function(a, c) {
    var b = new CQ_Analytics.JSONStore();
    b.STOREKEY = a.toUpperCase();
    b.STORENAME = a;
    b.initJSON(c);
    return b
};
CQ_Analytics.JSONStore.registerNewInstance = function(a, b) {
    var c = CQ_Analytics.JSONStore.getInstance(a, b);
    c.init();
    CQ_Analytics.CCM.register(c);
    return c
};
CQ_Analytics.PersistedJSONPStore = function() {};
CQ_Analytics.PersistedJSONPStore.prototype = new CQ_Analytics.PersistedJSONStore();
CQ_Analytics.PersistedJSONPStore.prototype.setServiceURL = function(a) {
    this.serviceURL = a
};
CQ_Analytics.PersistedJSONPStore.prototype.getServiceURL = function() {
    return this.serviceURL
};
CQ_Analytics.PersistedJSONPStore.prototype.load = function(d, a, e) {
    var c = this.getName();
    if (!CQ_Analytics.PersistedJSONPStore.JSONPCallbacks[this.getName()]) {
        CQ_Analytics.PersistedJSONPStore.JSONPCallbacks[c] = function(g) {
            var f = CQ_Analytics.CCM.getRegisteredStore(c);
            if (f) {
                f.initJSON(g);
                if (a) {
                    f.initJSON(a, true)
                }
            }
            if (e) {
                e.call(f)
            }
        }
    }
    if (d) {
        this.setServiceURL(d)
    }
    var b = this.serviceURL;
    b = b.replace("${callback}", "CQ_Analytics.PersistedJSONPStore.JSONPCallbacks." + c);
    $CQ.getScript(b)
};
CQ_Analytics.PersistedJSONPStore.JSONPCallbacks = {};
CQ_Analytics.PersistedJSONPStore.getInstance = function(e, f, b, a, d) {
    if (e && f) {
        try {
            var g = new CQ_Analytics.PersistedJSONPStore();
            g.STOREKEY = e.toUpperCase();
            g.STORENAME = e;
            if (f) {
                g.setServiceURL(f)
            }
            if (!a) {
                g.load(f, b, d)
            }
            return g
        } catch (c) {
            console.log("Cannot create the JSONP store", e, f, c)
        }
    }
    return null
};
CQ_Analytics.PersistedJSONPStore.registerNewInstance = function(d, e, b, f) {
    if (!e) {
        return null
    }
    if (!d) {
        var a = CQ.shared.HTTP.getSchemeAndAuthority(e);
        if (a) {
            if (a.indexOf(".") != -1) {
                a = a.substring(0, a.lastIndexOf("."));
                d = a.substring(a.lastIndexOf(".") + 1)
            } else {
                d = a.substring(a.lastIndexOf("/") + 1)
            }
        } else {
            d = e
        }
    }
    var c = CQ_Analytics.PersistedJSONPStore.getInstance(d, e, b, false, function() {
        this.init();
        this.reset();
        if (f) {
            f.call(this)
        }
    });
    if (c != null) {
        CQ_Analytics.CCM.register(c);
        return c
    }
    return null
};
CQ_Analytics.JSONPStore = function() {};
CQ_Analytics.JSONPStore.prototype = new CQ_Analytics.JSONStore();
CQ_Analytics.JSONPStore.prototype.setServiceURL = function(a) {
    this.serviceURL = a
};
CQ_Analytics.JSONPStore.prototype.getServiceURL = function() {
    return this.serviceURL
};
CQ_Analytics.JSONPStore.prototype.load = function(d, a, e) {
    var c = this.getName();
    if (!CQ_Analytics.JSONPStore.JSONPCallbacks[this.getName()]) {
        CQ_Analytics.JSONPStore.JSONPCallbacks[c] = function(g) {
            var f = CQ_Analytics.CCM.getRegisteredStore(c);
            if (f) {
                f.initJSON(g);
                if (a) {
                    f.initJSON(a, true)
                }
            }
            if (e) {
                e.call(f)
            }
        }
    }
    if (d) {
        this.setServiceURL(d)
    }
    var b = this.serviceURL;
    b = b.replace("${callback}", "CQ_Analytics.JSONPStore.JSONPCallbacks." + c);
    $CQ.getScript(b)
};
CQ_Analytics.JSONPStore.JSONPCallbacks = {};
CQ_Analytics.JSONPStore.getInstance = function(e, f, b, a, d) {
    if (e) {
        try {
            var g = new CQ_Analytics.JSONPStore();
            g.STOREKEY = e.toUpperCase();
            g.STORENAME = e;
            if (f) {
                g.setServiceURL(f);
                if (!a) {
                    g.load(f, b, d)
                }
            }
            return g
        } catch (c) {
            console.log("Cannot create the JSONP store", e, f, c)
        }
    }
    return null
};
CQ_Analytics.JSONPStore.registerNewInstance = function(d, e, b, f) {
    if (!d && e) {
        var a = CQ.shared.HTTP.getSchemeAndAuthority(e);
        if (a) {
            if (a.indexOf(".") != -1) {
                a = a.substring(0, a.lastIndexOf("."));
                d = a.substring(a.lastIndexOf(".") + 1)
            } else {
                d = a.substring(a.lastIndexOf("/") + 1);
                d = d.replace(new RegExp(":", "ig"), "_")
            }
        } else {
            d = e
        }
    }
    var c = CQ_Analytics.JSONPStore.getInstance(d, e, b, false, function() {
        this.init();
        this.reset();
        if (f) {
            f.call(this)
        }
    });
    if (c != null) {
        CQ_Analytics.CCM.register(c);
        return c
    }
    return null
};
CQ_Analytics.storeData = function(e, w) {
    var n = function(p, l) {
        for (var k = 0; k < CQ_Analytics.Sitecatalyst.frameworkMappings.length; k++) {
            var j = CQ_Analytics.Sitecatalyst.frameworkMappings[k];
            if (j[p] === l) {
                return j
            }
        }
        return null
    };
    var s = function(j) {
        if (typeof j === "string") {
            return j.replace(/[,;=\|]/g, "")
        }
        return j
    };
    for (var v in w) {
        if (v !== "product") {
            var o = v.indexOf(".");
            var r = (o > 0) ? v.substr(0, o - 1) : undefined;
            var x = (o > 0) ? v.substr(o) : v;
            if (r && CQ_Analytics.StoreRegistry.getStore(r)) {
                e = CQ_Analytics.StoreRegistry.getStore(r)
            }
            e.setProperty(x, w[v])
        } else {
            var m = ["category", "sku", "quantity", "price", "events", "evars"];
            var c = e.getProperty("products").split(",");
            c = (c[0] == "") ? new Array() : c;
            var w = (w[v] instanceof Array) ? w[v] : [w[v]];
            for (var h = 0; h < w.length; h++) {
                var q = w[h];
                var b = new Array(6);
                for (var u in q) {
                    var o = m.indexOf(u);
                    if (o > -1) {
                        if (o < 4) {
                            b[o] = s(q[u])
                        } else {
                            var f = [];
                            for (var t in q[u]) {
                                var d = e.getName() + "." + v + "." + u + "." + t;
                                var g = n("cqVar", d);
                                if (g) {
                                    f.push(g.scVar + "=" + s(q[u][t]));
                                    var a = e.getProperty("events").split("\u2026");
                                    if (a.indexOf(g.cqVar) < 0) {
                                        a.push(g.cqVar.replace(/.+\./, ""));
                                        e.setProperty("events", a.join("\u2026"))
                                    }
                                }
                            }
                            b[o] = f.join("|")
                        }
                    }
                }
                c.push(b.join(";"))
            }
            e.setProperty("products", c.join(","))
        }
    }
};
CQ_Analytics.record = function(b) {
    if (b.collect) {
        return [b.event, b.values]
    } else {
        if (b.event) {
            b.options = b.options || {};
            try {
                CQ_Analytics.recordBeforeCallbacks.sort(function(f, e) {
                    return f.rank - e.rank
                });
                for (var d in CQ_Analytics.recordBeforeCallbacks) {
                    if (CQ_Analytics.recordBeforeCallbacks[d].func.call(this, b)) {
                        return
                    }
                }
            } catch (c) {}
            var a = b.dataMgr || CQ_Analytics.EventDataMgr;
            a.reset();
            if (typeof b.event == "string") {
                a.setProperty("events", b.event)
            } else {
                a.setProperty("events", b.event.join("\u2026"))
            }
            if (b.values) {
                CQ_Analytics.storeData(a, b.values)
            }
            try {
                CQ_Analytics.recordAfterCallbacks.sort(function(f, e) {
                    return f.rank - e.rank
                });
                for (var d in CQ_Analytics.recordAfterCallbacks) {
                    if (CQ_Analytics.recordAfterCallbacks[d].func.call(this, b)) {
                        return
                    }
                }
            } catch (c) {}
        }
    }
};
CQ_Analytics.recordBeforeCallbacks = [];
CQ_Analytics.recordAfterCallbacks = [];
CQ_Analytics.registerBeforeCallback = function(b, a) {
    CQ_Analytics.recordBeforeCallbacks.push({
        rank: a,
        func: b
    })
};
CQ_Analytics.registerAfterCallback = function(b, a) {
    CQ_Analytics.recordAfterCallbacks.push({
        rank: a,
        func: b
    })
};
if (!CQ_Analytics.ClientContext) {
    CQ_Analytics.ClientContext = new function() {
        return {
            get: function(f, c) {
                if (f) {
                    if (f.indexOf("/") != 0) {
                        f = "/" + f
                    }
                    var d = f.split("/")[1];
                    var b = f.substring(f.indexOf("/" + d) + d.length + 2, f.length);
                    var a = CQ_Analytics.CCM.getRegisteredStore(d);
                    if (a) {
                        if (b) {
                            var e = a.getProperty(b);
                            if (e && c) {
                                e = CQ_Analytics.Variables.replaceVariables(e)
                            }
                            return e
                        }
                        return a
                    }
                }
                return null
            },
            set: function(e, d) {
                if (e) {
                    if (e.indexOf("/") != 0) {
                        e = "/" + e
                    }
                    var c = e.split("/")[1];
                    var b = e.substring(e.indexOf("/" + c) + c.length + 2, e.length);
                    var a = CQ_Analytics.CCM.getRegisteredStore(c);
                    if (a) {
                        if (b) {
                            a.setProperty(b, d)
                        }
                    }
                }
            },
            clear: function() {
                var a = CQ_Analytics.CCM.getStores();
                if (a) {
                    for (var b in a) {
                        if (a[b].clear) {
                            a[b].clear()
                        }
                    }
                }
            },
            reset: function() {
                var a = CQ_Analytics.CCM.getStores();
                if (a) {
                    for (var b in a) {
                        if (a[b].reset) {
                            a[b].reset()
                        }
                    }
                }
            },
            persist: function(a) {
                CQ_Analytics.ClientContextMgr.ServerStorage.post(a, true)
            }
        }
    }();
    window.ClientContext = CQ_Analytics.ClientContext;
    window.ContextCloud = CQ_Analytics.ClientContext
}
if (CQ_Analytics && !CQ_Analytics.TwitterProfileDataMgr) {
    CQ_Analytics.TwitterProfileDataMgr = function() {};
    CQ_Analytics.TwitterProfileDataMgr.prototype = new CQ_Analytics.PersistedSessionStore();
    CQ_Analytics.TwitterProfileDataMgr.prototype.STOREKEY = "TWITTERPROFILEDATA";
    CQ_Analytics.TwitterProfileDataMgr.prototype.STORENAME = "twitterprofile";
    CQ_Analytics.TwitterProfileDataMgr.prototype.clear = function() {
        if (this.persistence) {
            this.persistence.remove(this.getStoreKey())
        }
        this.data = null;
        this.initProperty = {}
    };
    CQ_Analytics.TwitterProfileDataMgr.prototype.init = function() {
        this.persistence = new CQ_Analytics.SessionPersistence({
            container: "ClientContext"
        });
        var a = this.persistence.get(this.getStoreKey());
        if (!a || a == "") {
            this.data = {};
            for (var b in this.initProperty) {
                this.data[b] = this.initProperty[b]
            }
        } else {
            this.data = this.parse(a)
        }
        this.persist();
        this.initialized = true;
        this.fireEvent("initialize", this);
        this.fireEvent("update")
    };
    CQ_Analytics.TwitterProfileDataMgr.prototype.getLoaderURL = function() {
        return CQ_Analytics.ClientContextMgr.getClientContextURL("/contextstores/twitterprofiledata/loader.json")
    };
    CQ_Analytics.TwitterProfileDataMgr.prototype.loadProfile = function(authorizableId) {
        if (authorizableId) {
            this.setProperty("authorizableId", authorizableId);
            var url = this.getLoaderURL();
            url = CQ_Analytics.Utils.addParameter(url, "authorizableId", authorizableId);
            try {
                var object = CQ.shared.HTTP.eval(url);
                if (object) {
                    this.data = {};
                    for (var p in object) {
                        this.data[p] = object[p]
                    }
                    this.setProperty("authorizableId", authorizableId);
                    this.persist();
                    this.fireEvent("update");
                    if (CQ_Analytics.ClickstreamcloudEditor) {
                        CQ_Analytics.ClickstreamcloudEditor.reload()
                    }
                    return true
                }
            } catch (error) {
                if (console && console.log) {
                    console.log("Error during profile loading", error)
                }
            }
        }
        return false
    };
    CQ_Analytics.TwitterProfileDataMgr = new CQ_Analytics.TwitterProfileDataMgr();
    CQ_Analytics.CCM.addListener("configloaded", function() {
        CQ_Analytics.ProfileDataMgr.addListener("update", function() {
            var a = CQ_Analytics.ProfileDataMgr.getProperty("authorizableId");
            if (a != this.getProperty("authorizableId")) {
                CQ_Analytics.TwitterProfileDataMgr.loadProfile(a);
                this.fireEvent("update")
            }
        }, CQ_Analytics.TwitterProfileDataMgr);
        CQ_Analytics.CCM.register(this)
    }, CQ_Analytics.TwitterProfileDataMgr)
}
if (!CQ_Analytics.FacebookProfileDataMgr) {
    CQ_Analytics.FacebookProfileDataMgr = function() {};
    CQ_Analytics.FacebookProfileDataMgr.prototype = new CQ_Analytics.PersistedSessionStore();
    CQ_Analytics.FacebookProfileDataMgr.prototype.STOREKEY = "FBPROFILEDATA";
    CQ_Analytics.FacebookProfileDataMgr.prototype.STORENAME = "facebookprofile";
    CQ_Analytics.FacebookProfileDataMgr.prototype.clear = function() {
        if (this.persistence) {
            this.persistence.remove(this.getStoreKey())
        }
        this.data = null;
        this.initProperty = {}
    };
    CQ_Analytics.FacebookProfileDataMgr.prototype.init = function() {
        this.persistence = new CQ_Analytics.SessionPersistence({
            container: "ClientContext"
        });
        var a = this.persistence.get(this.getStoreKey());
        if (!a || a == "") {
            this.data = {};
            for (var b in this.initProperty) {
                this.data[b] = this.initProperty[b]
            }
        } else {
            this.data = this.parse(a)
        }
        this.persist();
        this.initialized = true;
        this.fireEvent("initialize", this);
        this.fireEvent("update")
    };
    CQ_Analytics.FacebookProfileDataMgr.prototype.getLoaderURL = function() {
        return CQ_Analytics.ClientContextMgr.getClientContextURL("/contextstores/fbprofiledata/loader.json")
    };
    CQ_Analytics.FacebookProfileDataMgr.prototype.loadProfile = function(authorizableId) {
        if (authorizableId) {
            this.setProperty("authorizableId", authorizableId);
            var url = this.getLoaderURL();
            url = CQ_Analytics.Utils.addParameter(url, "authorizableId", authorizableId);
            try {
                var object = CQ.shared.HTTP.eval(url);
                if (object) {
                    this.data = {};
                    for (var p in object) {
                        this.data[p] = object[p]
                    }
                    this.setProperty("authorizableId", authorizableId);
                    this.persist();
                    this.fireEvent("update");
                    this.fireEvent("checkBirthday");
                    if (CQ_Analytics.ClickstreamcloudEditor) {
                        CQ_Analytics.ClickstreamcloudEditor.reload()
                    }
                    return true
                }
            } catch (error) {
                if (console && console.log) {
                    console.log("Error during profile loading", error)
                }
            }
        }
        return false
    };
    CQ_Analytics.FacebookProfileDataMgr = new CQ_Analytics.FacebookProfileDataMgr();
    CQ_Analytics.CCM.addListener("configloaded", function() {
        CQ_Analytics.ProfileDataMgr.addListener("update", function() {
            var a = CQ_Analytics.ProfileDataMgr.getProperty("authorizableId");
            if (a != this.getProperty("authorizableId")) {
                CQ_Analytics.FacebookProfileDataMgr.loadProfile(a);
                this.fireEvent("update")
            }
        }, CQ_Analytics.FacebookProfileDataMgr);
        CQ_Analytics.CCM.register(this)
    }, CQ_Analytics.FacebookProfileDataMgr)
}
if (!CQ_Analytics.FacebookInterestsMgr) {
    CQ_Analytics.FacebookInterestsMgr = function() {};
    CQ_Analytics.FacebookInterestsMgr.prototype = new CQ_Analytics.PersistedSessionStore();
    CQ_Analytics.FacebookInterestsMgr.prototype.STOREKEY = "FBINTERESTSDATA";
    CQ_Analytics.FacebookInterestsMgr.prototype.STORENAME = "fbinterests";
    CQ_Analytics.FacebookInterestsMgr.prototype.getLabel = function(a) {
        return a
    };
    CQ_Analytics.FacebookInterestsMgr.prototype.getLink = function(a) {
        return ""
    };
    CQ_Analytics.FacebookInterestsMgr.prototype.clear = function() {
        if (this.persistence) {
            this.persistence.remove(this.getStoreKey())
        }
        this.data = null;
        this.initProperty = {}
    };
    CQ_Analytics.FacebookInterestsMgr.prototype.init = function() {
        this.persistence = new CQ_Analytics.SessionPersistence({
            container: "ClientContext"
        });
        var a = this.persistence.get(this.getStoreKey());
        if (!a || a == "") {
            this.data = {};
            for (var b in this.initProperty) {
                this.data[b] = this.initProperty[b]
            }
        } else {
            this.data = this.parse(a)
        }
        this.persist();
        this.initialized = true;
        this.fireEvent("initialize", this);
        this.fireEvent("update")
    };
    CQ_Analytics.FacebookInterestsMgr.prototype.getLoaderURL = function() {
        return CQ_Analytics.ClientContextMgr.getClientContextURL("/contextstores/fbinterestsdata/loader.json")
    };
    CQ_Analytics.FacebookInterestsMgr.prototype.loadProfile = function(authorizableId) {
        if (authorizableId) {
            this.setProperty("authorizableId", authorizableId);
            var url = this.getLoaderURL();
            url = CQ_Analytics.Utils.addParameter(url, "authorizableId", authorizableId);
            CQ_Analytics.FacebookInterestsMgr.lastUid = authorizableId;
            try {
                var object = CQ.shared.HTTP.eval(url);
                if (object) {
                    this.data = {};
                    for (var p in object) {
                        this.data[p] = object[p]
                    }
                    this.setProperty("authorizableId", authorizableId);
                    this.persist();
                    if (CQ_Analytics.ClickstreamcloudEditor) {
                        CQ_Analytics.ClickstreamcloudEditor.reload()
                    }
                    return true
                }
            } catch (error) {
                if (console && console.log) {
                    console.log("Error during profile loading", error)
                }
            }
        }
        return false
    };
    CQ_Analytics.FacebookInterestsMgr = new CQ_Analytics.FacebookInterestsMgr();
    CQ_Analytics.CCM.addListener("configloaded", function() {
        CQ_Analytics.ProfileDataMgr.addListener("update", function() {
            var a = CQ_Analytics.ProfileDataMgr.getProperty("authorizableId");
            if (a != this.getProperty("authorizableId")) {
                CQ_Analytics.FacebookInterestsMgr.loadProfile(a);
                this.fireEvent("update")
            }
        }, CQ_Analytics.FacebookInterestsMgr);
        CQ_Analytics.CCM.register(this)
    }, CQ_Analytics.FacebookInterestsMgr)
}
if (CQ_Analytics && !CQ_Analytics.SalesforceProfileDataMgr) {
    CQ_Analytics.SalesforceProfileDataMgr = function() {};
    CQ_Analytics.SalesforceProfileDataMgr.prototype = new CQ_Analytics.SessionStore();
    CQ_Analytics.SalesforceProfileDataMgr.prototype.STOREKEY = "SALESFORCEPROFILEDATA";
    CQ_Analytics.SalesforceProfileDataMgr.prototype.STORENAME = "salesforceprofile";
    CQ_Analytics.SalesforceProfileDataMgr.prototype.clear = function() {
        this.data = null;
        this.initProperty = {}
    };
    CQ_Analytics.SalesforceProfileDataMgr.prototype.init = function() {
        if (!this.data) {
            this.data = {};
            for (var a in this.initProperty) {
                this.data[a] = this.initProperty[a]
            }
        }
    };
    CQ_Analytics.SalesforceProfileDataMgr.prototype.getLoaderURL = function() {
        return CQ_Analytics.ClientContextMgr.getClientContextURL("/contextstores/salesforceprofiledata/loader.json")
    };
    CQ_Analytics.SalesforceProfileDataMgr.prototype.loadProfile = function(authorizableId) {
        CQ_Analytics.SalesforceProfileDataMgr.lastUid = authorizableId;
        var url = this.getLoaderURL();
        url = CQ_Analytics.Utils.addParameter(url, "authorizableId", authorizableId);
        try {
            var object = CQ.shared.HTTP.eval(url);
            if (object) {
                this.data = {};
                for (var p in object) {
                    this.data[p] = object[p]
                }
                this.fireEvent("update");
                if (CQ_Analytics.ClickstreamcloudEditor) {
                    CQ_Analytics.ClickstreamcloudEditor.reload()
                }
                return true
            }
        } catch (error) {
            if (console && console.log) {
                console.log("Error during profile loading", error)
            }
        }
        return false
    };
    CQ_Analytics.SalesforceProfileDataMgr = new CQ_Analytics.SalesforceProfileDataMgr();
    CQ_Analytics.CCM.addListener("configloaded", function() {
        CQ_Analytics.CCM.register(this)
    }, CQ_Analytics.SalesforceProfileDataMgr)
}
if (!CQ_Analytics.ViewedProducts) {
    CQ_Analytics.ViewedProducts = function() {
        this.data = null;
        this.MAX_COUNT = 20
    };
    CQ_Analytics.ViewedProducts.prototype = new CQ_Analytics.PersistedSessionStore();
    CQ_Analytics.ViewedProducts.prototype.STOREKEY = "VIEWEDPRODUCTS";
    CQ_Analytics.ViewedProducts.prototype.STORENAME = "viewedproducts";
    CQ_Analytics.ViewedProducts.prototype.record = function(d, e, c, b) {
        if (!this.data) {
            this.init()
        }
        for (var a = 0; a < this.data.length; a++) {
            if (this.data[a].path == d) {
                this.data.splice(a, 1);
                break
            }
        }
        if (this.data.length == this.MAX_COUNT) {
            this.data.shift()
        }
        this.data.push({
            path: d,
            title: e,
            image: c,
            price: b
        });
        this.persist();
        this.fireEvent("update")
    };
    CQ_Analytics.ViewedProducts.prototype.mostRecent = function() {
        if (!this.data) {
            this.init()
        }
        if (this.data.length > 0) {
            return this.data[this.data.length - 1]
        } else {
            return null
        }
    };
    CQ_Analytics.ViewedProducts.prototype.mostRecentNotInCart = function() {
        if (!this.data) {
            this.init()
        }
        if (!CQ_Analytics.CartMgr) {
            return this.mostRecent()
        }
        for (var a = this.data.length - 1; a >= 0; a--) {
            var b = this.data[a];
            if (!CQ_Analytics.CartHelper.containsProduct(CQ_Analytics.CartMgr.getData(), b.path, 1)) {
                return b
            }
        }
        return null
    };
    CQ_Analytics.ViewedProducts.prototype.recent = function(e, b) {
        var a = [];
        if (!this.data) {
            this.init()
        }
        if (!CQ_Analytics.CartMgr) {
            b = false
        }
        for (var c = this.data.length - 1; c >= 0 && e > 0; c--) {
            var d = this.data[c];
            if (b && CQ_Analytics.CartHelper.containsProduct(CQ_Analytics.CartMgr.getData(), d.path, 1)) {
                continue
            }
            a.push(d);
            e--
        }
        return a
    };
    CQ_Analytics.ViewedProducts.prototype.getData = function(a) {
        if (!this.data) {
            this.init()
        }
        return this.data
    };
    CQ_Analytics.ViewedProducts.prototype.init = function() {
        var b = new CQ_Analytics.SessionPersistence({
            container: "ClientContext"
        });
        var d = b.get(this.getStoreKey());
        d = d === null ? "" : new String(d);
        var e = d.split(";");
        this.data = [];
        for (var c = 0; c < e.length; c++) {
            var a = e[c].split(",");
            if (a.length >= 4) {
                this.data.push({
                    path: a[0],
                    title: a[1],
                    image: a[2],
                    price: a[3]
                })
            } else {
                if (a.length >= 3) {
                    this.data.push({
                        path: a[0],
                        title: a[1],
                        image: a[2],
                        price: undefined
                    })
                }
            }
        }
        this.initialized = true;
        this.fireEvent("initialize", this);
        this.fireEvent("update")
    };
    CQ_Analytics.ViewedProducts.prototype.persist = function() {
        if (this.fireEvent("beforepersist") !== false) {
            var b = new CQ_Analytics.SessionPersistence({
                container: "ClientContext"
            });
            var e = [];
            for (var c = 0; c < this.data.length; c++) {
                var d = this.data[c];
                var a = d.path + "," + d.title + "," + d.image;
                if (d.price) {
                    a += "," + d.price
                }
                e.push(a)
            }
            b.set(this.getStoreKey(), e.join(";"));
            this.fireEvent("persist")
        }
    };
    CQ_Analytics.ViewedProducts.prototype.reset = function() {
        this.clear();
        this.fireEvent("update")
    };
    CQ_Analytics.ViewedProducts.prototype.clear = function() {
        var a = new CQ_Analytics.SessionPersistence({
            container: "ClientContext"
        });
        a.remove(this.getStoreKey());
        this.data = []
    };
    CQ_Analytics.ViewedProducts = new CQ_Analytics.ViewedProducts();
    CQ_Analytics.CCM.addListener("configloaded", function() {
        CQ_Analytics.CCM.register(this)
    }, CQ_Analytics.ViewedProducts)
}
if (!CQ_Analytics.TagCloudMgr) {
    CQ_Analytics.TagCloudMgr = function() {
        this.data = null;
        this.addedTags = {};
        this.frequencies = null;
        this.initialTags = null;
        this.initialAddedTags = {};
        this.copyObject = function(c) {
            var b = {};
            for (var a in c) {
                b[a] = c[a]
            }
            return b
        }
    };
    CQ_Analytics.TagCloudMgr.prototype = new CQ_Analytics.PersistedSessionStore();
    CQ_Analytics.TagCloudMgr.prototype.STOREKEY = "TAGCLOUD";
    CQ_Analytics.TagCloudMgr.prototype.STORENAME = "tagcloud";
    CQ_Analytics.TagCloudMgr.prototype.parseTagList = function(a) {
        var c = {};
        var b = a.split(",");
        for (var d in b) {
            if (b.hasOwnProperty(d)) {
                var e = b[d].split("=");
                if (e.length == 2) {
                    c[e[0]] = parseInt(e[1])
                }
            }
        }
        return c
    };
    CQ_Analytics.TagCloudMgr.prototype.parseString = function(a) {
        this.data = this.parseTagList(a);
        return this
    };
    CQ_Analytics.TagCloudMgr.prototype.add = function(a) {
        this.addedTags[a] = true;
        this.data[a] = (this.data[a] || 0) + 1
    };
    CQ_Analytics.TagCloudMgr.prototype.each = function(b) {
        for (var a in this.data) {
            if (this.data.hasOwnProperty(a)) {
                b(a, this.data[a])
            }
        }
    };
    CQ_Analytics.TagCloudMgr.prototype.calculateFrequencies = function() {
        var c = {};
        var a = [];
        this.each(function(d, e) {
            if (!c[e]) {
                a.push(e)
            }
            c[e] = true
        });
        a.sort(function b(e, d) {
            if (e > d) {
                return 1
            }
            if (e < d) {
                return -1
            }
            return 0
        });
        return a
    };
    CQ_Analytics.TagCloudMgr.prototype.calculateNtile = function(b, c) {
        if (this.frequencies === null) {
            this.frequencies = this.calculateFrequencies()
        }
        var a = 0;
        while (true) {
            if ((a >= (this.frequencies.length - 1)) || (this.frequencies[a] >= b)) {
                return Math.ceil((a + 1) / this.frequencies.length * c)
            }
            a++
        }
    };
    CQ_Analytics.TagCloudMgr.prototype.getTags = function() {
        return this.data
    };
    CQ_Analytics.TagCloudMgr.prototype.getData = function(a) {
        return this.getTags()
    };
    CQ_Analytics.TagCloudMgr.prototype.getTag = function(a) {
        return this.data[a] > 0 ? this.data[a] : 0
    };
    CQ_Analytics.TagCloudMgr.prototype.init = function(a) {
        var b = new CQ_Analytics.SessionPersistence({
            container: "ClientContext"
        });
        var d = b.get(this.getStoreKey());
        d = d === null ? "" : new String(d);
        this.data = this.parseTagList(d);
        if (a) {
            for (var c in a) {
                if (a.hasOwnProperty(c)) {
                    this.add(a[c])
                }
            }
        }
        this.initialTags = this.copyObject(this.data);
        this.initialAddedTags = this.copyObject(this.addedTags);
        this.persist();
        this.initialized = true;
        this.fireEvent("initialize", this);
        this.fireEvent("update")
    };
    CQ_Analytics.TagCloudMgr.prototype.setProperty = function(a, b) {
        if (this.data == null) {
            this.init()
        }
        if (b > 0) {
            this.addedTags[a] = true;
            this.data[a] = b > 0 ? b : 0
        } else {
            delete this.addedTags[a];
            delete this.data[a]
        }
        this.persist();
        this.fireEvent("update")
    };
    CQ_Analytics.TagCloudMgr.prototype.reset = function() {
        this.clear();
        this.fireEvent("update")
    };
    CQ_Analytics.TagCloudMgr.prototype.getProperty = function(a) {
        if (this.data == null) {
            this.init()
        }
        return this.data[a] > 0 ? this.data[a] : 0
    };
    CQ_Analytics.TagCloudMgr.prototype.removeProperty = function(a) {
        if (this.data == null) {
            this.init()
        }
        this.setProperty(a, 0)
    };
    CQ_Analytics.TagCloudMgr.prototype.clear = function() {
        var a = new CQ_Analytics.SessionPersistence({
            container: "ClientContext"
        });
        a.remove(this.getStoreKey());
        this.addedTags = {};
        this.data = {}
    };
    CQ_Analytics.TagCloudMgr.prototype.getLink = function(a) {
        return ""
    };
    CQ_Analytics.TagCloudMgr.prototype.getLabel = function(b) {
        if (b) {
            var c = b.split(":");
            var a = c[c.length - 1].split("/");
            b = a[a.length - 1]
        }
        return b
    };
    CQ_Analytics.TagCloudMgr = new CQ_Analytics.TagCloudMgr();
    CQ_Analytics.CCM.addListener("configloaded", function() {
        CQ_Analytics.CCM.register(this)
    }, CQ_Analytics.TagCloudMgr)
}
if (!CQ_Analytics.SurferInfoMgr) {
    CQ_Analytics.SurferInfoMgr = function() {};
    CQ_Analytics.SurferInfoMgr.prototype = new CQ_Analytics.SessionStore();
    CQ_Analytics.SurferInfoMgr.prototype.STOREKEY = "SURFERINFO";
    CQ_Analytics.SurferInfoMgr.prototype.STORENAME = "surferinfo";
    CQ_Analytics.SurferInfoMgr.prototype.init = function() {
        this.data = {};
        for (var a in this.initProperty) {
            this.data[a] = this.initProperty[a]
        }
        this.initialized = true;
        this.fireEvent("initialize", this);
        this.fireEvent("update")
    };
    CQ_Analytics.SurferInfoMgr.prototype.clear = function() {
        this.data = null;
        this.initProperty = {}
    };
    CQ_Analytics.SurferInfoMgr.prototype.getLabel = function(a) {
        return a
    };
    CQ_Analytics.SurferInfoMgr.prototype.getLink = function(a) {
        return ""
    };
    CQ_Analytics.SurferInfoMgr = new CQ_Analytics.SurferInfoMgr();
    CQ_Analytics.CCM.addListener("configloaded", function() {
        var b = CQ_Analytics.BrowserInfoInstance;
        this.addInitProperty("browserFamily", b.getBrowserFamily());
        this.addInitProperty("browserVersion", b.getBrowserVersion());
        this.addInitProperty("browser", "${/surferinfo/browserFamily} ${/surferinfo/browserVersion}");
        this.addInitProperty("OS", b.getOSName());
        this.addInitProperty("resolution", b.getScreenResolution());
        this.addInitProperty("device", b.getDeviceType());
        this.addInitProperty("isMobile", b.isMobile());
        this.addInitProperty("userAgent", b.getUserAgent());
        var a = new Date();
        this.addInitProperty("day", a.getDate());
        this.addInitProperty("month", a.getMonth() + 1);
        this.addInitProperty("year", a.getFullYear());
        this.addInitProperty("hours", a.getHours());
        this.addInitProperty("minutes", a.getMinutes());
        var c = "${/surferinfo/browserFamily}";
        if (b.isMobile()) {
            c = "${/surferinfo/device}"
        }
        this.addInitProperty("image", c);
        var d = CQ_Analytics.ClientContextMgr.getClientContextURL("/contextstores/surferinfo/resources/${/surferinfo/image}.png");
        this.addInitProperty("thumbnail", d);
        if (CQ_Analytics.MousePositionMgr) {
            CQ_Analytics.MousePositionMgr.addListener("update", function() {
                this.setProperty("mouse X", CQ_Analytics.MousePositionMgr.getProperty("x"));
                this.setProperty("mouse Y", CQ_Analytics.MousePositionMgr.getProperty("y"))
            }, this)
        }
        this.addListener("update", function() {
            var f = this.getProperty("device");
            var g = "${/surferinfo/browserFamily}";
            if (b.isMobile(f)) {
                g = "${/surferinfo/device}"
            }
            var e = this.getProperty("image");
            if (e != g) {
                this.setProperty("image", g)
            }
        }, this);
        CQ_Analytics.CCM.register(this)
    }, CQ_Analytics.SurferInfoMgr)
}
if (!CQ_Analytics.SocialGraphMgr) {
    CQ_Analytics.SocialGraphMgr = CQ_Analytics.JSONPStore.registerNewInstance("socialgraph");
    CQ_Analytics.CCM.addListener("configloaded", function() {
        CQ_Analytics.CCM.register(this);
        CQ_Analytics.ProfileDataMgr.addListener("update", function() {
            var a = CQ_Analytics.ProfileDataMgr.getProperty("authorizableId");
            if (a != this.lastUid) {
                this.fireEvent("update")
            }
        }, CQ_Analytics.SocialGraphMgr)
    }, CQ_Analytics.SocialGraphMgr)
}
if (CQ_Analytics.SegmentMgr && !CQ_Analytics.SegmentMgr.isResolvedRegistered) {
    CQ_Analytics.SegmentMgr.isResolvedRegistered = true;
    CQ_Analytics.CCM.addListener("configloaded", function() {
        CQ_Analytics.StoreRegistry.register(CQ_Analytics.SegmentMgr);
        CQ_Analytics.CCM.fireEvent("storeregister", CQ_Analytics.SegmentMgr)
    }, CQ_Analytics.SegmentMgr)
}
if (!CQ_Analytics.ProfileDataMgr) {
    CQ_Analytics.ProfileDataMgr = function() {
        this.addListener("beforepersist", function() {
            this.checkAuthorizableId()
        }, this)
    };
    CQ_Analytics.ProfileDataMgr.prototype = new CQ_Analytics.PersistedSessionStore();
    CQ_Analytics.ProfileDataMgr.prototype.STOREKEY = "PROFILEDATA";
    CQ_Analytics.ProfileDataMgr.prototype.STORENAME = "profile";
    CQ_Analytics.ProfileDataMgr.prototype.LOADER_PATH = CQ_Analytics.Utils.externalize("/libs/cq/personalization/components/profileloader/content/load.js", true);
    CQ_Analytics.ProfileDataMgr.prototype.PROFILE_LOADER = CQ_Analytics.Utils.externalize("/libs/cq/personalization/components/profileloader/content/load.json", true);
    CQ_Analytics.ProfileDataMgr.prototype.init = function() {
        this.persistence = new CQ_Analytics.SessionPersistence({
            container: "ClientContext"
        });
        $CQ(CQ.shared.ClientSidePersistence).bind(CQ.shared.ClientSidePersistence.EVENT_NAME, function(d, f) {
            if (!f) {
                return
            }
            if (((f.key === "CLIENTCONTEXT") || (f.key === "PROFILEDATA")) && (f.mode != CQ.shared.ClientSidePersistence.MODE_COOKIE.name)) {
                var c = new CQ.shared.ClientSidePersistence({
                    container: "",
                    mode: CQ.shared.ClientSidePersistence.MODE_COOKIE
                });
                var e = c.get(f.key);
                if (f.key === "PROFILEDATA" && (!e || e == "") && f.action != "set") {
                    CQ.shared.ClientSidePersistence.clearAllMaps()
                }
                c.set(f.key, f.value)
            }
        });
        var a = this.persistence.get(this.getStoreKey());
        if (!a || a == "") {
            this.data = {};
            for (var b in this.initProperty) {
                this.data[b] = this.initProperty[b]
            }
        } else {
            this.data = this.parse(a)
        }
        this.persist();
        this.initialized = true;
        this.fireEvent("initialize", this);
        this.fireEvent("update")
    };
    CQ_Analytics.ProfileDataMgr.prototype.checkAuthorizableId = function() {
        if (!this.data) {
            this.init()
        }
        if (this.data.authorizableId) {
            CQ_Analytics.CCM.setVisitorId(this.data.authorizableId)
        } else {
            CQ_Analytics.CCM.setVisitorId("")
        }
    };
    CQ_Analytics.ProfileDataMgr.prototype.getLabel = function(a) {
        return a
    };
    CQ_Analytics.ProfileDataMgr.prototype.getLink = function(a) {
        return ""
    };
    CQ_Analytics.ProfileDataMgr.prototype.clear = function() {
        if (this.persistence) {
            this.persistence.remove(this.getStoreKey())
        }
        this.data = null;
        this.initProperty = {}
    };
    CQ_Analytics.ProfileDataMgr.prototype.getLoaderURL = function() {
        return CQ_Analytics.ClientContextMgr.getClientContextURL("/contextstores/profiledata/loader.json")
    };
    CQ_Analytics.ProfileDataMgr.prototype.loadProfile = function(authorizableId) {
        var url = this.getLoaderURL();
        url = CQ_Analytics.Utils.addParameter(url, "authorizableId", authorizableId);
        try {
            var object = CQ.shared.HTTP.eval(url);
            if (object) {
                this.data = {};
                for (var p in object) {
                    this.data[p] = object[p]
                }
                this.persist();
                this.fireEvent("initialize", this);
                this.fireEvent("update");
                if (CQ_Analytics.ClickstreamcloudEditor) {
                    CQ_Analytics.ClickstreamcloudEditor.reload()
                }
                return true
            }
        } catch (error) {
            if (console && console.log) {
                console.log("Error during profile loading", error)
            }
        }
        return false
    };
    CQ_Analytics.ProfileDataMgr = new CQ_Analytics.ProfileDataMgr();
    CQ_Analytics.CCM.addListener("configloaded", function() {
        this.checkAuthorizableId();
        this.addListener("update", function(a, j) {
            if (j == "birthday" || !j) {
                var k = this.getProperty("birthday");
                var l = this.getProperty("age");
                var g = "";
                if (k) {
                    try {
                        var c = function(o, n) {
                            var m = new Date(n.getTime());
                            m.setUTCHours(o.getUTCHours(), o.getUTCMinutes(), o.getUTCSeconds(), o.getUTCMilliseconds());
                            var p = m.getTime() - o.getTime();
                            return p / (1000 * 60 * 60 * 24)
                        };
                        var d = function(m) {
                            var n = new Date(m.getFullYear(), 0, 0);
                            return c(m, n) * -1
                        };
                        var h = new Date(Date.parse(k));
                        if (!isNaN(h.getTime())) {
                            var f = new Date();
                            if (d(h) == d(f) && h.getMonth() == f.getMonth()) {
                                g = CQ.shared.HTTP.externalize(CQ_Analytics.ClientContextMgr.getClientContextURL("/contextstores/profiledata/resources/birthday_cake.png"))
                            } else {
                                var b = f.getFullYear() - h.getFullYear();
                                if (d(h) > d(f)) {
                                    g = b
                                } else {
                                    g = Math.max(0, b - 1)
                                }
                            }
                        } else {
                            g = ""
                        }
                    } catch (e) {
                        g = ""
                    }
                }
                if (l != g) {
                    this.setProperty("age", g)
                }
            }
        });
        CQ_Analytics.CCM.register(this)
    }, CQ_Analytics.ProfileDataMgr)
}
if (!CQ_Analytics.GeolocationUtils) {
    CQ_Analytics.GeolocationUtils = new function() {
        return {
            init: function(b) {
                var d;
                try {
                    if (typeof navigator.geolocation === "undefined") {
                        d = google.gears.factory.create("beta.geolocation")
                    } else {
                        d = navigator.geolocation
                    }
                } catch (f) {}
                var a = function(e) {
                    var g = CQ_Analytics.PersistedJSONStore.registerNewInstance(b, e);
                    g.addListener("update", function(h, k) {
                        var l = CQ_Analytics.ClientContext.get(b + "/latitude");
                        var j = CQ_Analytics.ClientContext.get(b + "/longitude");
                        if (!l || !j) {
                            if (k != "generatedThumbnail") {
                                g.setProperty("generatedThumbnail", CQ_Analytics.GeolocationUtils.THUMBNAILS.fallback)
                            } else {
                                if (g.getProperty(k, true) != CQ_Analytics.GeolocationUtils.THUMBNAILS.fallback) {
                                    g.setProperty(k, CQ_Analytics.GeolocationUtils.THUMBNAILS.fallback)
                                }
                            }
                        } else {
                            if (g.getProperty("generatedThumbnail", true) == CQ_Analytics.GeolocationUtils.THUMBNAILS.fallback) {
                                g.setProperty("generatedThumbnail", g.getInitProperty("generatedThumbnail"))
                            }
                            if (k == "latitude" || k == "longitude" || !k) {
                                CQ_Analytics.GeolocationUtils.computeAddress(l, j, b)
                            }
                        }
                    })
                };
                var c = function(j, h) {
                    var g = CQ_Analytics.StoreRegistry.getStore(b);
                    if (g) {
                        j = j || CQ_Analytics.GeolocationUtils.DEFAULTS;
                        var e = j.generatedThumbnail = g.getInitProperty("generatedThumbnail");
                        g.initJSON(j);
                        if (!h) {
                            g.init();
                            g.setProperty("generatedThumbnail", e)
                        }
                    } else {
                        a(j)
                    }
                };
                a();
                if (d) {
                    d.getCurrentPosition(function(e) {
                        var g = {
                            longitude: e.coords.longitude,
                            latitude: e.coords.latitude
                        };
                        if (e.address) {
                            g.address = e.address
                        }
                        c(g, CQ_Analytics.CCM.areStoresInitialized)
                    }, function(e) {
                        if (!CQ_Analytics.CCM.areStoresInitialized) {
                            var h = "Error";
                            if (CQ_Analytics.isUIAvailable) {
                                h = CQ.I18n.getMessage("Connection timeout", null, "timeout while connecting geolocation service");
                                if (e.code == 1) {
                                    h = CQ.I18n.getMessage("Permission denied", null, "permission denied message from goelocation service")
                                } else {
                                    if (e.code == 2) {
                                        h = CQ.I18n.getMessage("Position unavailable", null, "geolocation service couldn't find location")
                                    }
                                }
                            }
                            var g = {
                                address: {
                                    country: h
                                }
                            };
                            c(g, CQ_Analytics.CCM.areStoresInitialized)
                        }
                    })
                } else {
                    c()
                }
            },
            computeAddress: function(d, b, a) {
                CQ_Analytics.ClientContext.set(a + "/address/region");
                CQ_Analytics.ClientContext.set(a + "/address/countryCode");
                CQ_Analytics.ClientContext.set(a + "/address/country");
                var c = function() {
                    var e = new google.maps.LatLng(d, b);
                    var f = new google.maps.Geocoder();
                    f.geocode({
                        location: e
                    }, function(g, j) {
                        if (j === "OK" && g[0] && g[0].address_components) {
                            for (var k = 0; k < g[0].address_components.length; k++) {
                                var h = g[0].address_components[k];
                                if (h.types && h.types.length) {
                                    if (h.types[0] == "administrative_area_level_1") {
                                        CQ_Analytics.ClientContext.set(a + "/address/region", h.short_name)
                                    } else {
                                        if (h.types[0] == "country") {
                                            CQ_Analytics.ClientContext.set(a + "/address/countryCode", h.short_name);
                                            CQ_Analytics.ClientContext.set(a + "/address/country", h.long_name)
                                        }
                                    }
                                }
                            }
                        }
                    })
                };
                if (!window.google) {
                    window.geocode_callback = c;
                    $CQ.getScript(document.location.protocol + "//maps.google.com/maps/api/js?sensor=false&callback=geocode_callback")
                } else {
                    c.call()
                }
            }
        }
    }();
    CQ_Analytics.GeolocationUtils.DEFAULTS = {
        latitude: 37.331375,
        longitude: -121.893992
    };
    CQ_Analytics.GeolocationUtils.THUMBNAILS = {
        fallback: document.location.protocol + "//maps.googleapis.com/maps/api/staticmap?center=37,-121&zoom=0&size=80x80&sensor=false"
    }
}
if (!CQ_Analytics.CartMgr) {
    CQ_Analytics.CartMgr = new CQ_Analytics.SessionStore();
    CQ_Analytics.CartMgr.STOREKEY = "CART";
    CQ_Analytics.CartMgr.STORENAME = "cart";
    CQ_Analytics.CartMgr.init = function() {
        if (!this.data) {
            this.data = {}
        } else {
            var a = new CQ_Analytics.SessionPersistence({
                container: "ClientContext"
            });
            var b = a.get(this.STOREKEY);
            if (b) {
                var c = b.split("=");
                if (c.length >= 2) {
                    this.referenceTotalPrice = c[0];
                    this.simulatedTotalPrice = c[1];
                    this.updateSimulatedPrice()
                }
            }
            this.initialized = true;
            this.fireEvent("initialize", this);
            this.fireEvent("update")
        }
    };
    CQ_Analytics.CartMgr.persist = function() {
        if (this.fireEvent("beforepersist") !== false) {
            var a = new CQ_Analytics.SessionPersistence({
                container: "ClientContext"
            });
            var b = null;
            if (this.referenceTotalPrice && this.simulatedTotalPrice) {
                b = this.referenceTotalPrice + "=" + this.simulatedTotalPrice
            }
            a.set(this.STOREKEY, b);
            this.fireEvent("persist")
        }
    };
    CQ_Analytics.CartMgr.updateSimulatedPrice = function() {
        if (this.simulatedTotalPrice && this.referenceTotalPrice == this.data.totalPriceFloat) {
            this.data.totalPrice = this.simulatedTotalPrice + "";
            this.data.totalPriceFloat = this.simulatedTotalPrice
        } else {
            this.simulatedTotalPrice = null;
            this.persist()
        }
    };
    CQ_Analytics.CartMgr.registerSimulatedPrice = function(a) {
        if (this.simulatedTotalPrice) {
            this.simulatedTotalPrice = a;
            this.data.totalPrice = a + ""
        } else {
            this.referenceTotalPrice = this.data.totalPriceFloat;
            this.simulatedTotalPrice = a
        }
        this.persist()
    };
    CQ_Analytics.CartMgr.getProperty = function(a, k) {
        if (!this.data) {
            this.init()
        }
        var f = this.data;
        try {
            var d = a.split(".");
            for (var g = 0; g < d.length - 1; g++) {
                var b = d[g];
                var c = b.indexOf("[");
                var h = -1;
                if (c > 0) {
                    h = parseInt(b.substring(c + 1, b.length - 1));
                    b = b.substring(0, c)
                }
                f = f[b];
                if (h >= 0) {
                    f = f[h]
                }
            }
            var m = d[d.length - 1];
            if (!k) {
                var l = CQ.shared.XSS.getXSSPropertyName(m);
                if (f[l]) {
                    return f[l]
                }
            }
            return f[m]
        } catch (j) {
            return undefined
        }
    };
    CQ_Analytics.CartMgr.validate = function(a, c) {
        if (a == "totalPriceFloat") {
            var b = parseFloat(c);
            return b >= 0
        } else {
            if (a.indexOf(".quantity") > 0) {
                var d = parseInt(c);
                return d >= 0
            }
        }
        return true
    };
    CQ_Analytics.CartMgr.setProperty = function(a, h) {
        if (!this.data) {
            this.init()
        }
        if (!this.validate(a, h)) {
            this.fireEvent("update", a);
            return
        }
        if (a == "totalPriceFloat") {
            this.registerSimulatedPrice(h)
        }
        var e = this.data;
        var d = a.split(".");
        for (var f = 0; f < d.length - 1; f++) {
            var b = d[f];
            var c = b.indexOf("[");
            var g = -1;
            if (c > 0) {
                g = parseInt(b.substring(c + 1, b.length - 1));
                b = b.substring(0, c)
            }
            if (!e[b]) {
                e[b] = {}
            }
            e = e[b];
            if (g >= 0) {
                if (!e[g]) {
                    e[g] = {}
                }
                e = e[g]
            }
        }
        var k = d[d.length - 1];
        e[k] = h;
        var j = CQ.shared.XSS.getXSSPropertyName(k);
        this.data[j] = CQ.shared.XSS.getXSSValue(h);
        this.fireEvent("update", a)
    };
    CQ_Analytics.CartMgr.update = function() {
        var a = this;
        if (this.updateUrl) {
            $CQ.ajax({
                url: this.updateUrl,
                type: "POST",
                data: {
                    cart: JSON.stringify(a.data)
                },
                externalize: false,
                encodePath: false,
                hook: true,
                success: function(b) {
                    a.data = b;
                    a.updateSimulatedPrice();
                    CQ_Analytics.ClientContextUtils.renderStore(CQ_Analytics.CartMgr.divId, CQ_Analytics.CartMgr.STORENAME);
                    a.fireEvent("updatecomplete");
                    a.fireEvent("update")
                }
            })
        }
    };
    CQ_Analytics.CartMgr.clear = function() {
        if (this.data.entries) {
            this.data.entries = []
        }
        if (this.data.vouchers) {
            this.data.vouchers = []
        }
        this.data.totalPrice = "0";
        this.referenceTotalPrice = null;
        this.simulatedTotalPrice = null
    };
    CQ_Analytics.CartMgr.reset = function() {
        this.clear();
        this.fireEvent("update");
        this.persist();
        this.update()
    };
    CQ_Analytics.CCM.addListener("configloaded", function() {
        CQ_Analytics.CCM.register(this);
        CQ_Analytics.SegmentMgr.addListener("update", function() {
            if (!this.promotionsMap) {
                return
            }
            if (!this.data.promotions) {
                this.data.promotions = []
            }
            var f = CQ_Analytics.SegmentMgr.getResolved();
            var e = [];
            for (var d = 0; d < this.promotionsMap.length; d++) {
                var a = this.promotionsMap[d];
                var h = false;
                var g = a.segments.split(",");
                for (var b = 0; b < g.length; b++) {
                    if ($CQ.inArray(g[b], f) >= 0) {
                        h = true;
                        break
                    }
                }
                if (h) {
                    e.push(a.path)
                }
            }
            var c = false;
            for (var d = 0; d < this.data.promotions.length; d++) {
                var k = this.data.promotions[d];
                var b = $CQ.inArray(k.path, e);
                if (b >= 0) {
                    e.splice(b, 1)
                } else {
                    this.data.promotions.splice(d--, 1);
                    c = true
                }
            }
            for (var d = 0; d < e.length; d++) {
                var k = {
                    path: e[d]
                };
                this.data.promotions.push(k);
                c = true
            }
            if (c) {
                this.update()
            }
        }, CQ_Analytics.CartMgr)
    }, CQ_Analytics.CartMgr)
}
if (!CQ_Analytics.CartHelper) {
    CQ_Analytics.CartHelper = (function() {
        return {
            containsProduct: function(e, d, f) {
                var g = d ? d.substring(0, d.lastIndexOf("#")) : null;
                for (var a = 0; e.entries && a < e.entries.length; a++) {
                    var c = e.entries[a];
                    var b = c.page.substring(0, c.page.lastIndexOf("#"));
                    if ((!d || b == g) && (!f || c.quantity >= f)) {
                        return true
                    }
                }
                return false
            }
        }
    })()
}
if (!CQ_Analytics.CampaignMgr) {
    CQ_Analytics.CampaignMgr = function() {};
    CQ_Analytics.CampaignMgr.prototype = new CQ_Analytics.PersistedSessionStore();
    CQ_Analytics.CampaignMgr.prototype.STOREKEY = "CAMPAIGN";
    CQ_Analytics.CampaignMgr.prototype.STORENAME = "campaign";
    CQ_Analytics.CampaignMgr.prototype.DEFAULT_EXPERIENCE = "DEFAULT";
    CQ_Analytics.CampaignMgr.prototype.init = function() {
        var c;
        this.persistence = new CQ_Analytics.SessionPersistence({
            container: "ClientContext"
        });
        var a = this.persistence.get(this.getStoreKey());
        if (!this.data) {
            this.data = {}
        }
        if (!a || a === "") {
            for (c in this.initProperty) {
                if (this.initProperty.hasOwnProperty(c)) {
                    this.data[c] = this.initProperty[c]
                }
            }
        } else {
            this.data = this.parse(a);
            var b = this.getInitProperty("campaigns");
            if (b) {
                this.data.campaigns = b
            }
        }
        this.validate();
        this.persist();
        this.initialized = true;
        this.fireEvent("initialize", this);
        this.fireEvent("update")
    };
    CQ_Analytics.CampaignMgr.prototype.validate = function() {
        if (this.data.campaigns) {
            if (!this.getCampaignBy("path", this.data.path) && !this.getCampaignBy("id", this.data.id)) {
                this.setCampaign(null)
            }
            if (this.data["recipe/path"] !== CQ_Analytics.CampaignMgr.DEFAULT_EXPERIENCE) {
                if (!this.getExperienceBy("path", this.data["recipe/path"]) && !this.getExperienceBy("id", this.data["recipe/id"])) {
                    this.setExperience(null)
                }
            }
        }
    };
    CQ_Analytics.CampaignMgr.prototype.getCampaignBy = function(e, b) {
        if (!this.data || !this.data.campaigns) {
            return null
        }
        var a, c = this.data.campaigns;
        for (a = 0; a < c.length; a++) {
            var d = c[a];
            if (d[e] === b) {
                return d
            }
        }
        return null
    };
    CQ_Analytics.CampaignMgr.prototype.getExperienceBy = function(g, d) {
        if (!this.data || !this.data.campaigns) {
            return null
        }
        var c, e = this.data.campaigns;
        for (c = 0; c < e.length; c++) {
            var f = e[c];
            for (var a = 0; a < f.experiences.length; a++) {
                var b = f.experiences[a];
                if (b[g] === d) {
                    return b
                }
            }
        }
        return null
    };
    CQ_Analytics.CampaignMgr.prototype.setCampaign = function(a) {
        this.setProperties({
            name: a ? a.title : "",
            path: a ? a.path : "",
            id: a ? a.id : "",
            "recipe/name": a ? CQ.I18n.getMessage("(default)") : "",
            "recipe/path": a ? this.DEFAULT_EXPERIENCE : "",
            "recipe/id": a ? this.DEFAULT_EXPERIENCE : ""
        })
    };
    CQ_Analytics.CampaignMgr.prototype.setExperience = function(a) {
        this.setProperties({
            "recipe/name": a ? a.title : "",
            "recipe/path": a ? a.path : "",
            "recipe/id": a ? a.id : ""
        })
    };
    CQ_Analytics.CampaignMgr.prototype.setProperty = function(a, b) {
        if (a === "id" || a === "path") {
            this.setCampaign(this.getCampaignBy(a, b));
            return
        } else {
            if (a === "recipe/id" || a === "recipe/path") {
                if (b !== CQ_Analytics.CampaignMgr.DEFAULT_EXPERIENCE) {
                    this.setExperience(this.getExperienceBy(a.substring("recipe/".length), b));
                    return
                }
            }
        }
        CQ_Analytics.PersistedSessionStore.prototype.setProperty.call(this, a, b)
    };
    CQ_Analytics.CampaignMgr.prototype.isCampaignSelected = function() {
        return this.getProperty("path") !== ""
    };
    CQ_Analytics.CampaignMgr.prototype.clear = function() {
        this.data = null;
        this.initProperty = {}
    };
    CQ_Analytics.CampaignMgr.prototype.getLabel = function(a) {
        return a
    };
    CQ_Analytics.CampaignMgr.prototype.getLink = function(a) {
        return ""
    };
    CQ_Analytics.CampaignMgr = new CQ_Analytics.CampaignMgr();
    CQ_Analytics.CCM.addListener("configloaded", function() {
        CQ_Analytics.CCM.register(this)
    }, CQ_Analytics.CampaignMgr)
}
if (!CQ_Analytics.ActivityStreamMgr) {
    CQ_Analytics.ActivityStreamMgr = CQ_Analytics.JSONStore.registerNewInstance("activitystream", {});
    CQ_Analytics.ActivityStreamMgr.internalRenderer = function(c, a) {
        var b = c + ".form.html";
        b += CQ_Analytics.ClientContextMgr.getClientContextURL("/contextstores/activitystream.html");
        b += "?limit=3";
        CQ.shared.HTTP.get(b, function(e, f, d) {
            $CQ("#" + a).children().remove();
            if (f) {
                $CQ("#" + a).append(d.body)
            }
        })
    };
    CQ_Analytics.ActivityStreamMgr.renderer = function(b, a) {
        if (!b.isReady) {
            b.isReady = true;
            CQ_Analytics.ClientContextUtils.onStoreRegistered("profile", function(c) {
                c.addListener("update", function(e, f) {
                    var g = this.getProperty("path");
                    if (g != CQ_Analytics.ActivityStreamMgr.currentProfilePath) {
                        CQ_Analytics.ActivityStreamMgr.currentProfilePath = g;
                        CQ_Analytics.ActivityStreamMgr.internalRenderer(g, a)
                    }
                }, c);
                var d = c.getProperty("path");
                CQ_Analytics.ActivityStreamMgr.currentProfilePath = d;
                CQ_Analytics.ActivityStreamMgr.internalRenderer(d, a)
            })
        }
        return ""
    }
}(function(f) {
    function d() {}

    function w(G) {
        c = [G]
    }

    function p(I, G, H) {
        return I && I.apply(G.context || G, H)
    }

    function o(G) {
        return /\?/.test(G) ? "&" : "?"
    }
    var q = "async",
        u = "charset",
        s = "",
        E = "error",
        v = "insertBefore",
        t = "_jqjsp",
        B = "on",
        g = B + "click",
        l = B + E,
        r = B + "load",
        z = B + "readystatechange",
        b = "readyState",
        D = "removeChild",
        k = "<script>",
        A = "success",
        C = "timeout",
        e = window,
        a = f.Deferred,
        h = f("head")[0] || document.documentElement,
        y = {},
        n = 0,
        c, m = {
            callback: t,
            url: location.href
        },
        x = e.opera,
        j = !!f("<div>").html("<!--[if IE]><i><![endif]-->").find("i").length;

    function F(L) {
        L = f.extend({}, m, L);
        var J = L.success,
            Q = L.error,
            I = L.complete,
            Z = L.dataFilter,
            ab = L.callbackParameter,
            R = L.callback,
            aa = L.cache,
            H = L.pageCache,
            K = L.charset,
            M = L.url,
            ad = L.data,
            T = L.timeout,
            P, X = 0,
            V = d,
            S, O, G, ac, N, W;
        a && a(function(ae) {
            ae.done(J).fail(Q);
            J = ae.resolve;
            Q = ae.reject
        }).promise(L);
        L.abort = function() {
            !(X++) && V()
        };
        if (p(L.beforeSend, L, [L]) === !1 || X) {
            return L
        }
        M = M || s;
        ad = ad ? ((typeof ad) == "string" ? ad : f.param(ad, L.traditional)) : s;
        M += ad ? (o(M) + ad) : s;
        ab && (M += o(M) + encodeURIComponent(ab) + "=?");
        !aa && !H && (M += o(M) + "_" + (new Date()).getTime() + "=");
        M = M.replace(/=\?(&|$)/, "=" + R + "$1");

        function Y(ae) {
            if (!(X++)) {
                V();
                H && (y[M] = {
                    s: [ae]
                });
                Z && (ae = Z.apply(L, [ae]));
                p(J, L, [ae, A, L]);
                p(I, L, [L, A])
            }
        }

        function U(ae) {
            if (!(X++)) {
                V();
                H && ae != C && (y[M] = ae);
                p(Q, L, [L, ae]);
                p(I, L, [L, ae])
            }
        }
        if (H && (P = y[M])) {
            P.s ? Y(P.s[0]) : U(P)
        } else {
            e[R] = w;
            ac = f(k)[0];
            ac.id = t + n++;
            if (K) {
                ac[u] = K
            }
            x && x.version() < 11.6 ? ((N = f(k)[0]).text = "document.getElementById('" + ac.id + "')." + l + "()") : (ac[q] = q);
            if (j) {
                ac.htmlFor = ac.id;
                ac.event = g
            }
            ac[r] = ac[l] = ac[z] = function(ae) {
                if (!ac[b] || !/i/.test(ac[b])) {
                    try {
                        ac[g] && ac[g]()
                    } catch (af) {}
                    ae = c;
                    c = 0;
                    ae ? Y(ae[0]) : U(E)
                }
            };
            ac.src = M;
            V = function(ae) {
                W && clearTimeout(W);
                ac[z] = ac[r] = ac[l] = null;
                h[D](ac);
                N && h[D](N)
            };
            h[v](ac, (G = h.firstChild));
            N && h[v](N, G);
            W = T > 0 && setTimeout(function() {
                U(C)
            }, T)
        }
        return L
    }
    F.setup = function(G) {
        f.extend(m, G)
    };
    f.jsonp = F
})(jQuery);
(function(b) {
    function a(m, h) {
        var n, o, k, d, g, c, e, l, j, f;
        n = m.length & 3;
        o = m.length - n;
        k = h;
        g = 3432918353;
        e = 461845907;
        f = 0;
        while (f < o) {
            j = ((m.charCodeAt(f) & 255)) | ((m.charCodeAt(++f) & 255) << 8) | ((m.charCodeAt(++f) & 255) << 16) | ((m.charCodeAt(++f) & 255) << 24);
            ++f;
            j = ((((j & 65535) * g) + ((((j >>> 16) * g) & 65535) << 16))) & 4294967295;
            j = (j << 15) | (j >>> 17);
            j = ((((j & 65535) * e) + ((((j >>> 16) * e) & 65535) << 16))) & 4294967295;
            k ^= j;
            k = (k << 13) | (k >>> 19);
            d = ((((k & 65535) * 5) + ((((k >>> 16) * 5) & 65535) << 16))) & 4294967295;
            k = (((d & 65535) + 27492) + ((((d >>> 16) + 58964) & 65535) << 16))
        }
        j = 0;
        switch (n) {
            case 3:
                j ^= (m.charCodeAt(f + 2) & 255) << 16;
            case 2:
                j ^= (m.charCodeAt(f + 1) & 255) << 8;
            case 1:
                j ^= (m.charCodeAt(f) & 255);
                j = (((j & 65535) * g) + ((((j >>> 16) * g) & 65535) << 16)) & 4294967295;
                j = (j << 15) | (j >>> 17);
                j = (((j & 65535) * e) + ((((j >>> 16) * e) & 65535) << 16)) & 4294967295;
                k ^= j
        }
        k ^= m.length;
        k ^= k >>> 16;
        k = (((k & 65535) * 2246822507) + ((((k >>> 16) * 2246822507) & 65535) << 16)) & 4294967295;
        k ^= k >>> 13;
        k = ((((k & 65535) * 3266489909) + ((((k >>> 16) * 3266489909) & 65535) << 16))) & 4294967295;
        k ^= k >>> 16;
        return k >>> 0
    }
    b.murmurhash3 = a
})(jQuery);
CQ_Analytics = window.CQ_Analytics || {};
CQ_Analytics.AAM = CQ_Analytics.AAM || {};
CQ_Analytics.AAM.AudienceMgr = CQ_Analytics.AAM.AudienceMgr || function(f) {
    var e = f.partner || "geometrixx";
    var q = f.destinationNames || {
        CQIntegrationDestination: {
            domain: ".cqclientintegration.adobe.com",
            segkey: "segs",
            keysep: ",",
            valsep: ";"
        }
    };
    var p = f.debug || false;
    var b = f.containerNSID || "0";
    var r = false;
    if (f.simulationPath) {
        r = f.simulationPath + ".segments.json"
    }
    var c = function() {};
    if (p) {
        c = function(s) {
            console.log("DEBUG: audiencemanager.js " + s)
        }
    }
    var o = function(s) {
        console.log("ERROR: audiencemanager.js " + s)
    };
    c("Initialise Audience Manager");
    var l = {};
    var d = new CQ_Analytics.JSONStore();
    var j = "http://";
    if ("https:" == document.location.protocol) {
        j = "https://"
    }
    j += encodeURIComponent(e) + ".demdex.net/event?d_cb=?";

    function g(t) {
        var s = {};
        $.each(t, function(x, z) {
            if (q[z.cn]) {
                var w = q[z.cn];
                if (z.dmn.slice(0, w.domain.length) === w.domain) {
                    var v = (w.segkey || "segs") + "=";
                    var y = v.length;
                    var A = w.keysep || ",";
                    var u = w.valsep || ";";
                    $.each(z.cv.split(A), function(C, B) {
                        if (B.slice(0, y) === v) {
                            $.each(B.substring(y).split(u), function(D, E) {
                                s[E] = true
                            })
                        }
                    })
                }
            }
        });
        return s
    }

    function m() {}

    function k(s) {
        l = {};
        var t = [];
        $.each(s, function(w, x) {
            if (x) {
                l[w] = true;
                t.push(w)
            }
        });
        t.sort();
        var u = d.getProperty("segments");
        var v = t.join(",");
        if (u !== v) {
            d.setProperty("segments", v);
            c("Set segments to " + v)
        }
    }

    function h(s, u) {
        u = u || m;
        if (r) {
            if (!s.sid) {
                u();
                d.fireEvent("update")
            } else {
                $.getJSON(r, {
                    t: s.sid
                }, function(v) {
                    if (v.segments) {
                        k(v.segments)
                    }
                    u();
                    d.fireEvent("update")
                }).fail(function(v, x, w) {
                    o("Failed to resolve segments from AAM server  " + x + " error " + w);
                    u();
                    d.fireEvent("update")
                })
            }
        } else {
            var t = {};
            s = s || {};
            $.each(s, function(v, w) {
                if (v === "sid") {
                    t.d_sid = w
                } else {
                    t["c_" + v] = w
                }
            });
            t.d_nsid = b;
            t.d_rtbd = "json";
            $.jsonp({
                url: j,
                callback: "__aaminvoke",
                data: t,
                success: function(v, x, w) {
                    if (v.stuff) {
                        k(g(v.stuff))
                    }
                    u();
                    d.fireEvent("update")
                },
                error: function(w, v) {
                    o("Failed to retieve json response " + v);
                    u();
                    d.fireEvent("update")
                }
            })
        }
    }

    function a() {
        return l
    }

    function n(s) {
        return (l[s])
    }
    h(false, function() {
        CQ_Analytics.ClientContextMgr.register(d)
    });
    d.getUserSegments = a;
    d.matches = n;
    d.invoke = h;
    return d
};